

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Nov 24 12:19:11 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	text27,local,class=CODE,merge=1,delta=2
    37                           	psect	text28,local,class=CODE,merge=1,delta=2
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41     0000                     
    42                           ; Version 2.40
    43                           ; Generated 17/11/2021 GMT
    44                           ; 
    45                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F877A Definitions
    75                           ; 
    76                           ; SFR Addresses
    77     0000                     	;# 
    78     0001                     	;# 
    79     0002                     	;# 
    80     0003                     	;# 
    81     0004                     	;# 
    82     0005                     	;# 
    83     0006                     	;# 
    84     0007                     	;# 
    85     0008                     	;# 
    86     0009                     	;# 
    87     000A                     	;# 
    88     000B                     	;# 
    89     000C                     	;# 
    90     000D                     	;# 
    91     000E                     	;# 
    92     000E                     	;# 
    93     000F                     	;# 
    94     0010                     	;# 
    95     0011                     	;# 
    96     0012                     	;# 
    97     0013                     	;# 
    98     0014                     	;# 
    99     0015                     	;# 
   100     0015                     	;# 
   101     0016                     	;# 
   102     0017                     	;# 
   103     0018                     	;# 
   104     0019                     	;# 
   105     001A                     	;# 
   106     001B                     	;# 
   107     001B                     	;# 
   108     001C                     	;# 
   109     001D                     	;# 
   110     001E                     	;# 
   111     001F                     	;# 
   112     0081                     	;# 
   113     0085                     	;# 
   114     0086                     	;# 
   115     0087                     	;# 
   116     0088                     	;# 
   117     0089                     	;# 
   118     008C                     	;# 
   119     008D                     	;# 
   120     008E                     	;# 
   121     0091                     	;# 
   122     0092                     	;# 
   123     0093                     	;# 
   124     0094                     	;# 
   125     0098                     	;# 
   126     0099                     	;# 
   127     009C                     	;# 
   128     009D                     	;# 
   129     009E                     	;# 
   130     009F                     	;# 
   131     010C                     	;# 
   132     010D                     	;# 
   133     010E                     	;# 
   134     010F                     	;# 
   135     018C                     	;# 
   136     018D                     	;# 
   137     0000                     	;# 
   138     0001                     	;# 
   139     0002                     	;# 
   140     0003                     	;# 
   141     0004                     	;# 
   142     0005                     	;# 
   143     0006                     	;# 
   144     0007                     	;# 
   145     0008                     	;# 
   146     0009                     	;# 
   147     000A                     	;# 
   148     000B                     	;# 
   149     000C                     	;# 
   150     000D                     	;# 
   151     000E                     	;# 
   152     000E                     	;# 
   153     000F                     	;# 
   154     0010                     	;# 
   155     0011                     	;# 
   156     0012                     	;# 
   157     0013                     	;# 
   158     0014                     	;# 
   159     0015                     	;# 
   160     0015                     	;# 
   161     0016                     	;# 
   162     0017                     	;# 
   163     0018                     	;# 
   164     0019                     	;# 
   165     001A                     	;# 
   166     001B                     	;# 
   167     001B                     	;# 
   168     001C                     	;# 
   169     001D                     	;# 
   170     001E                     	;# 
   171     001F                     	;# 
   172     0081                     	;# 
   173     0085                     	;# 
   174     0086                     	;# 
   175     0087                     	;# 
   176     0088                     	;# 
   177     0089                     	;# 
   178     008C                     	;# 
   179     008D                     	;# 
   180     008E                     	;# 
   181     0091                     	;# 
   182     0092                     	;# 
   183     0093                     	;# 
   184     0094                     	;# 
   185     0098                     	;# 
   186     0099                     	;# 
   187     009C                     	;# 
   188     009D                     	;# 
   189     009E                     	;# 
   190     009F                     	;# 
   191     010C                     	;# 
   192     010D                     	;# 
   193     010E                     	;# 
   194     010F                     	;# 
   195     018C                     	;# 
   196     018D                     	;# 
   197                           
   198                           	psect	strings
   199     1000                     __pstrings:
   200     1000                     stringtab:
   201     1000                     __stringtab:
   202                           
   203                           ;	String table - string pointers are 1 byte each
   204     1000  1BFF               	btfsc	btemp+1,7
   205     1001  280A               	ljmp	stringcode
   206     1002  1383               	bcf	3,7
   207     1003  187F               	btfsc	btemp+1,0
   208     1004  1783               	bsf	3,7
   209     1005  0800               	movf	0,w
   210     1006  0A84               	incf	4,f
   211     1007  1903               	skipnz
   212     1008  0AFF               	incf	btemp+1,f
   213     1009  0008               	return
   214     100A                     stringcode:
   215     100A                     stringdir:
   216     100A  3010               	movlw	high stringdir
   217     100B  008A               	movwf	10
   218     100C  0804               	movf	4,w
   219     100D  0A84               	incf	4,f
   220     100E  0782               	addwf	2,f
   221     100F                     __stringbase:
   222     100F  3400               	retlw	0
   223     1010                     __end_of__stringtab:
   224     1010                     __powers_:
   225     1010  3400               	retlw	0
   226     1011  3400               	retlw	0
   227     1012  3480               	retlw	128
   228     1013  343F               	retlw	63
   229     1014  3400               	retlw	0
   230     1015  3400               	retlw	0
   231     1016  3420               	retlw	32
   232     1017  3441               	retlw	65
   233     1018  3400               	retlw	0
   234     1019  3400               	retlw	0
   235     101A  34C8               	retlw	200
   236     101B  3442               	retlw	66
   237     101C  3400               	retlw	0
   238     101D  3400               	retlw	0
   239     101E  347A               	retlw	122
   240     101F  3444               	retlw	68
   241     1020  3400               	retlw	0
   242     1021  3440               	retlw	64
   243     1022  341C               	retlw	28
   244     1023  3446               	retlw	70
   245     1024  3400               	retlw	0
   246     1025  3450               	retlw	80
   247     1026  34C3               	retlw	195
   248     1027  3447               	retlw	71
   249     1028  3400               	retlw	0
   250     1029  3424               	retlw	36
   251     102A  3474               	retlw	116
   252     102B  3449               	retlw	73
   253     102C  3480               	retlw	128
   254     102D  3496               	retlw	150
   255     102E  3418               	retlw	24
   256     102F  344B               	retlw	75
   257     1030  3420               	retlw	32
   258     1031  34BC               	retlw	188
   259     1032  34BE               	retlw	190
   260     1033  344C               	retlw	76
   261     1034  3428               	retlw	40
   262     1035  346B               	retlw	107
   263     1036  346E               	retlw	110
   264     1037  344E               	retlw	78
   265     1038  34F9               	retlw	249
   266     1039  3402               	retlw	2
   267     103A  3415               	retlw	21
   268     103B  3450               	retlw	80
   269     103C  34EC               	retlw	236
   270     103D  3478               	retlw	120
   271     103E  34AD               	retlw	173
   272     103F  3460               	retlw	96
   273     1040  34CA               	retlw	202
   274     1041  34F2               	retlw	242
   275     1042  3449               	retlw	73
   276     1043  3471               	retlw	113
   277     1044                     __end_of__powers_:
   278     1044                     __npowers_:
   279     1044  3400               	retlw	0
   280     1045  3400               	retlw	0
   281     1046  3480               	retlw	128
   282     1047  343F               	retlw	63
   283     1048  34CD               	retlw	205
   284     1049  34CC               	retlw	204
   285     104A  34CC               	retlw	204
   286     104B  343D               	retlw	61
   287     104C  340A               	retlw	10
   288     104D  34D7               	retlw	215
   289     104E  3423               	retlw	35
   290     104F  343C               	retlw	60
   291     1050  346F               	retlw	111
   292     1051  3412               	retlw	18
   293     1052  3483               	retlw	131
   294     1053  343A               	retlw	58
   295     1054  3417               	retlw	23
   296     1055  34B7               	retlw	183
   297     1056  34D1               	retlw	209
   298     1057  3438               	retlw	56
   299     1058  34AC               	retlw	172
   300     1059  34C5               	retlw	197
   301     105A  3427               	retlw	39
   302     105B  3437               	retlw	55
   303     105C  34BD               	retlw	189
   304     105D  3437               	retlw	55
   305     105E  3486               	retlw	134
   306     105F  3435               	retlw	53
   307     1060  3495               	retlw	149
   308     1061  34BF               	retlw	191
   309     1062  34D6               	retlw	214
   310     1063  3433               	retlw	51
   311     1064  3477               	retlw	119
   312     1065  34CC               	retlw	204
   313     1066  342B               	retlw	43
   314     1067  3432               	retlw	50
   315     1068  345F               	retlw	95
   316     1069  3470               	retlw	112
   317     106A  3489               	retlw	137
   318     106B  3430               	retlw	48
   319     106C  34FF               	retlw	255
   320     106D  34E6               	retlw	230
   321     106E  34DB               	retlw	219
   322     106F  342E               	retlw	46
   323     1070  3408               	retlw	8
   324     1071  34E5               	retlw	229
   325     1072  343C               	retlw	60
   326     1073  341E               	retlw	30
   327     1074  3460               	retlw	96
   328     1075  3442               	retlw	66
   329     1076  34A2               	retlw	162
   330     1077  340D               	retlw	13
   331     1078                     __end_of__npowers_:
   332     1078                     _dpowers:
   333     1078  3401               	retlw	1
   334     1079  3400               	retlw	0
   335     107A  3400               	retlw	0
   336     107B  3400               	retlw	0
   337     107C  340A               	retlw	10
   338     107D  3400               	retlw	0
   339     107E  3400               	retlw	0
   340     107F  3400               	retlw	0
   341     1080  3464               	retlw	100
   342     1081  3400               	retlw	0
   343     1082  3400               	retlw	0
   344     1083  3400               	retlw	0
   345     1084  34E8               	retlw	232
   346     1085  3403               	retlw	3
   347     1086  3400               	retlw	0
   348     1087  3400               	retlw	0
   349     1088  3410               	retlw	16
   350     1089  3427               	retlw	39
   351     108A  3400               	retlw	0
   352     108B  3400               	retlw	0
   353     108C  34A0               	retlw	160
   354     108D  3486               	retlw	134
   355     108E  3401               	retlw	1
   356     108F  3400               	retlw	0
   357     1090  3440               	retlw	64
   358     1091  3442               	retlw	66
   359     1092  340F               	retlw	15
   360     1093  3400               	retlw	0
   361     1094  3480               	retlw	128
   362     1095  3496               	retlw	150
   363     1096  3498               	retlw	152
   364     1097  3400               	retlw	0
   365     1098  3400               	retlw	0
   366     1099  34E1               	retlw	225
   367     109A  34F5               	retlw	245
   368     109B  3405               	retlw	5
   369     109C  3400               	retlw	0
   370     109D  34CA               	retlw	202
   371     109E  349A               	retlw	154
   372     109F  343B               	retlw	59
   373     10A0                     __end_of_dpowers:
   374     0008                     _PORTD	set	8
   375     0043                     _RD3	set	67
   376     0042                     _RD2	set	66
   377     0047                     _RD7	set	71
   378     0046                     _RD6	set	70
   379     0045                     _RD5	set	69
   380     0044                     _RD4	set	68
   381     0088                     _TRISD	set	136
   382     10A0                     STR_2:
   383     10A0  3453               	retlw	83	;'S'
   384     10A1  3469               	retlw	105	;'i'
   385     10A2  3463               	retlw	99	;'c'
   386     10A3  3461               	retlw	97	;'a'
   387     10A4  346B               	retlw	107	;'k'
   388     10A5  346C               	retlw	108	;'l'
   389     10A6  3469               	retlw	105	;'i'
   390     10A7  346B               	retlw	107	;'k'
   391     10A8  3420               	retlw	32	;' '
   392     10A9  343D               	retlw	61	;'='
   393     10AA  3420               	retlw	32	;' '
   394     10AB  3425               	retlw	37	;'%'
   395     10AC  3466               	retlw	102	;'f'
   396     10AD  3400               	retlw	0
   397     10AE                     STR_1:
   398     10AE  344D               	retlw	77	;'M'
   399     10AF  3465               	retlw	101	;'e'
   400     10B0  3472               	retlw	114	;'r'
   401     10B1  3468               	retlw	104	;'h'
   402     10B2  3461               	retlw	97	;'a'
   403     10B3  3462               	retlw	98	;'b'
   404     10B4  3461               	retlw	97	;'a'
   405     10B5  3400               	retlw	0
   406                           
   407                           	psect	cinit
   408     07FC                     start_initialization:	
   409                           ; #config settings
   410                           
   411     07FC                     __initialization:
   412     07FC                     end_of_initialization:	
   413                           ;End of C runtime variable initialization code
   414                           
   415     07FC                     __end_of__initialization:
   416     07FC  0183               	clrf	3
   417     07FD  160A  118A  2A92   	ljmp	_main	;jump to C main() function
   418                           
   419                           	psect	cstackBANK1
   420     00A0                     __pcstackBANK1:
   421     00A0                     ?_sprintf:
   422     00A0                     sprintf@f:	
   423                           ; 2 bytes @ 0x0
   424                           
   425                           
   426                           ; 1 bytes @ 0x0
   427     00A0                     	ds	5
   428     00A5                     ??_sprintf:
   429                           
   430                           ; 1 bytes @ 0x5
   431     00A5                     	ds	5
   432     00AA                     _sprintf$770:
   433                           
   434                           ; 4 bytes @ 0xA
   435     00AA                     	ds	4
   436     00AE                     sprintf@ap:
   437                           
   438                           ; 1 bytes @ 0xE
   439     00AE                     	ds	1
   440     00AF                     sprintf@flag:
   441                           
   442                           ; 2 bytes @ 0xF
   443     00AF                     	ds	2
   444     00B1                     sprintf@prec:
   445                           
   446                           ; 2 bytes @ 0x11
   447     00B1                     	ds	2
   448     00B3                     sprintf@val:
   449                           
   450                           ; 4 bytes @ 0x13
   451     00B3                     	ds	4
   452     00B7                     sprintf@eexp:
   453                           
   454                           ; 2 bytes @ 0x17
   455     00B7                     	ds	2
   456     00B9                     sprintf@tmpval:
   457                           
   458                           ; 4 bytes @ 0x19
   459     00B9                     	ds	4
   460     00BD                     sprintf@sp:
   461                           
   462                           ; 1 bytes @ 0x1D
   463     00BD                     	ds	1
   464     00BE                     sprintf@fval:
   465                           
   466                           ; 4 bytes @ 0x1E
   467     00BE                     	ds	4
   468     00C2                     sprintf@c:
   469                           
   470                           ; 1 bytes @ 0x22
   471     00C2                     	ds	1
   472     00C3                     ??_main:
   473                           
   474                           ; 1 bytes @ 0x23
   475     00C3                     	ds	3
   476     00C6                     main@array:
   477                           
   478                           ; 20 bytes @ 0x26
   479     00C6                     	ds	20
   480     00DA                     main@temperature:
   481                           
   482                           ; 4 bytes @ 0x3A
   483     00DA                     	ds	4
   484                           
   485                           	psect	cstackCOMMON
   486     0070                     __pcstackCOMMON:
   487     0070                     ?___fleq:
   488     0070                     ?___flge:	
   489                           ; 1 bit 
   490                           
   491     0070                     ?_Lcd_Port:	
   492                           ; 1 bit 
   493                           
   494     0070                     ??_Lcd_Port:	
   495                           ; 1 bytes @ 0x0
   496                           
   497     0070                     ?_Lcd_Cmd:	
   498                           ; 1 bytes @ 0x0
   499                           
   500     0070                     ?_Lcd_Init:	
   501                           ; 1 bytes @ 0x0
   502                           
   503     0070                     ?_Lcd_Write_Char:	
   504                           ; 1 bytes @ 0x0
   505                           
   506     0070                     ?_main:	
   507                           ; 1 bytes @ 0x0
   508                           
   509     0070                     ?__Umul8_16:	
   510                           ; 1 bytes @ 0x0
   511                           
   512     0070                     ?_Lcd_Clear:	
   513                           ; 2 bytes @ 0x0
   514                           
   515     0070                     ?___wmul:	
   516                           ; 2 bytes @ 0x0
   517                           
   518     0070                     ?___awmod:	
   519                           ; 2 bytes @ 0x0
   520                           
   521     0070                     ?___lwmod:	
   522                           ; 2 bytes @ 0x0
   523                           
   524     0070                     ?__tdiv_to_l_:	
   525                           ; 2 bytes @ 0x0
   526                           
   527     0070                     ?__div_to_l_:	
   528                           ; 4 bytes @ 0x0
   529                           
   530     0070                     ?___lldiv:	
   531                           ; 4 bytes @ 0x0
   532                           
   533     0070                     ?___flneg:	
   534                           ; 4 bytes @ 0x0
   535                           
   536     0070                     ?___llmod:	
   537                           ; 4 bytes @ 0x0
   538                           
   539     0070                     ?___xxtofl:	
   540                           ; 4 bytes @ 0x0
   541                           
   542     0070                     Lcd_Port@a:	
   543                           ; 4 bytes @ 0x0
   544                           
   545     0070                     __Umul8_16@multiplicand:	
   546                           ; 1 bytes @ 0x0
   547                           
   548     0070                     ___wmul@multiplier:	
   549                           ; 1 bytes @ 0x0
   550                           
   551     0070                     ___awmod@divisor:	
   552                           ; 2 bytes @ 0x0
   553                           
   554     0070                     ___lwmod@divisor:	
   555                           ; 2 bytes @ 0x0
   556                           
   557     0070                     ___lldiv@divisor:	
   558                           ; 2 bytes @ 0x0
   559                           
   560     0070                     __div_to_l_@f1:	
   561                           ; 4 bytes @ 0x0
   562                           
   563     0070                     ___fleq@ff1:	
   564                           ; 4 bytes @ 0x0
   565                           
   566     0070                     ___flge@ff1:	
   567                           ; 4 bytes @ 0x0
   568                           
   569     0070                     ___flneg@f1:	
   570                           ; 4 bytes @ 0x0
   571                           
   572     0070                     __tdiv_to_l_@f1:	
   573                           ; 4 bytes @ 0x0
   574                           
   575     0070                     ___llmod@divisor:	
   576                           ; 4 bytes @ 0x0
   577                           
   578     0070                     ___xxtofl@val:	
   579                           ; 4 bytes @ 0x0
   580                           
   581                           
   582                           ; 4 bytes @ 0x0
   583     0070                     	ds	1
   584     0071                     ??_Lcd_Cmd:
   585     0071                     ??_Lcd_Write_Char:	
   586                           ; 1 bytes @ 0x1
   587                           
   588                           
   589                           ; 1 bytes @ 0x1
   590     0071                     	ds	1
   591     0072                     ??__Umul8_16:
   592     0072                     Lcd_Write_Char@temp:	
   593                           ; 1 bytes @ 0x2
   594                           
   595     0072                     ___wmul@multiplicand:	
   596                           ; 1 bytes @ 0x2
   597                           
   598     0072                     ___awmod@dividend:	
   599                           ; 2 bytes @ 0x2
   600                           
   601     0072                     ___lwmod@dividend:	
   602                           ; 2 bytes @ 0x2
   603                           
   604                           
   605                           ; 2 bytes @ 0x2
   606     0072                     	ds	1
   607     0073                     Lcd_Cmd@a:
   608     0073                     Lcd_Write_Char@y:	
   609                           ; 1 bytes @ 0x3
   610                           
   611                           
   612                           ; 1 bytes @ 0x3
   613     0073                     	ds	1
   614     0074                     ??_Lcd_Clear:
   615     0074                     ?_Lcd_Set_Cursor:	
   616                           ; 1 bytes @ 0x4
   617                           
   618     0074                     ??_Lcd_Init:	
   619                           ; 1 bytes @ 0x4
   620                           
   621     0074                     ??___wmul:	
   622                           ; 1 bytes @ 0x4
   623                           
   624     0074                     ??___awmod:	
   625                           ; 1 bytes @ 0x4
   626                           
   627     0074                     ??___flneg:	
   628                           ; 1 bytes @ 0x4
   629                           
   630     0074                     ??___lwmod:	
   631                           ; 1 bytes @ 0x4
   632                           
   633     0074                     ??___xxtofl:	
   634                           ; 1 bytes @ 0x4
   635                           
   636     0074                     Lcd_Set_Cursor@b:	
   637                           ; 1 bytes @ 0x4
   638                           
   639     0074                     Lcd_Write_Char@a:	
   640                           ; 1 bytes @ 0x4
   641                           
   642     0074                     ___wmul@product:	
   643                           ; 1 bytes @ 0x4
   644                           
   645     0074                     __Umul8_16@product:	
   646                           ; 2 bytes @ 0x4
   647                           
   648     0074                     ___lldiv@dividend:	
   649                           ; 2 bytes @ 0x4
   650                           
   651     0074                     __div_to_l_@f2:	
   652                           ; 4 bytes @ 0x4
   653                           
   654     0074                     ___fleq@ff2:	
   655                           ; 4 bytes @ 0x4
   656                           
   657     0074                     ___flge@ff2:	
   658                           ; 4 bytes @ 0x4
   659                           
   660     0074                     __tdiv_to_l_@f2:	
   661                           ; 4 bytes @ 0x4
   662                           
   663     0074                     ___llmod@dividend:	
   664                           ; 4 bytes @ 0x4
   665                           
   666                           
   667                           ; 4 bytes @ 0x4
   668     0074                     	ds	1
   669     0075                     ??_Lcd_Set_Cursor:
   670     0075                     ?_Lcd_Write_String:	
   671                           ; 1 bytes @ 0x5
   672                           
   673     0075                     ___awmod@counter:	
   674                           ; 1 bytes @ 0x5
   675                           
   676     0075                     ___lwmod@counter:	
   677                           ; 1 bytes @ 0x5
   678                           
   679     0075                     Lcd_Write_String@a:	
   680                           ; 1 bytes @ 0x5
   681                           
   682                           
   683                           ; 2 bytes @ 0x5
   684     0075                     	ds	1
   685     0076                     ?___lwdiv:
   686     0076                     Lcd_Set_Cursor@a:	
   687                           ; 2 bytes @ 0x6
   688                           
   689     0076                     ___awmod@sign:	
   690                           ; 1 bytes @ 0x6
   691                           
   692     0076                     ___lwdiv@divisor:	
   693                           ; 1 bytes @ 0x6
   694                           
   695     0076                     __Umul8_16@word_mpld:	
   696                           ; 2 bytes @ 0x6
   697                           
   698                           
   699                           ; 2 bytes @ 0x6
   700     0076                     	ds	1
   701     0077                     ??_Lcd_Write_String:
   702     0077                     ?___awdiv:	
   703                           ; 1 bytes @ 0x7
   704                           
   705     0077                     Lcd_Set_Cursor@z:	
   706                           ; 2 bytes @ 0x7
   707                           
   708     0077                     ___awdiv@divisor:	
   709                           ; 1 bytes @ 0x7
   710                           
   711                           
   712                           ; 2 bytes @ 0x7
   713     0077                     	ds	1
   714     0078                     ??__tdiv_to_l_:
   715     0078                     ??__div_to_l_:	
   716                           ; 1 bytes @ 0x8
   717                           
   718     0078                     ??___lldiv:	
   719                           ; 1 bytes @ 0x8
   720                           
   721     0078                     ??___fleq:	
   722                           ; 1 bytes @ 0x8
   723                           
   724     0078                     ??___flge:	
   725                           ; 1 bytes @ 0x8
   726                           
   727     0078                     ??___llmod:	
   728                           ; 1 bytes @ 0x8
   729                           
   730     0078                     Lcd_Set_Cursor@y:	
   731                           ; 1 bytes @ 0x8
   732                           
   733     0078                     __Umul8_16@multiplier:	
   734                           ; 1 bytes @ 0x8
   735                           
   736     0078                     ___xxtofl@sign:	
   737                           ; 1 bytes @ 0x8
   738                           
   739     0078                     ___lwdiv@dividend:	
   740                           ; 1 bytes @ 0x8
   741                           
   742                           
   743                           ; 2 bytes @ 0x8
   744     0078                     	ds	1
   745     0079                     Lcd_Set_Cursor@temp:
   746     0079                     ___llmod@counter:	
   747                           ; 1 bytes @ 0x9
   748                           
   749     0079                     ___xxtofl@exp:	
   750                           ; 1 bytes @ 0x9
   751                           
   752     0079                     ___awdiv@dividend:	
   753                           ; 1 bytes @ 0x9
   754                           
   755     0079                     ___lldiv@quotient:	
   756                           ; 2 bytes @ 0x9
   757                           
   758                           
   759                           ; 4 bytes @ 0x9
   760     0079                     	ds	1
   761     007A                     ??___lwdiv:
   762     007A                     Lcd_Write_String@i:	
   763                           ; 1 bytes @ 0xA
   764                           
   765     007A                     ___xxtofl@arg:	
   766                           ; 2 bytes @ 0xA
   767                           
   768                           
   769                           ; 4 bytes @ 0xA
   770     007A                     	ds	1
   771     007B                     ??___awdiv:
   772     007B                     ___lwdiv@quotient:	
   773                           ; 1 bytes @ 0xB
   774                           
   775                           
   776                           ; 2 bytes @ 0xB
   777     007B                     	ds	2
   778     007D                     ___lldiv@counter:
   779     007D                     ___lwdiv@counter:	
   780                           ; 1 bytes @ 0xD
   781                           
   782                           
   783                           ; 1 bytes @ 0xD
   784     007D                     	ds	1
   785     007E                     ??___flsub:
   786                           
   787                           	psect	cstackBANK0
   788     0020                     __pcstackBANK0:	
   789                           ; 1 bytes @ 0xE
   790                           
   791     0020                     ___awdiv@counter:
   792     0020                     __div_to_l_@quot:	
   793                           ; 1 bytes @ 0x0
   794                           
   795     0020                     __tdiv_to_l_@quot:	
   796                           ; 4 bytes @ 0x0
   797                           
   798                           
   799                           ; 4 bytes @ 0x0
   800     0020                     	ds	1
   801     0021                     ___awdiv@sign:
   802                           
   803                           ; 1 bytes @ 0x1
   804     0021                     	ds	1
   805     0022                     ___awdiv@quotient:
   806                           
   807                           ; 2 bytes @ 0x2
   808     0022                     	ds	2
   809     0024                     ?___flmul:
   810     0024                     __div_to_l_@cntr:	
   811                           ; 4 bytes @ 0x4
   812                           
   813     0024                     __tdiv_to_l_@cntr:	
   814                           ; 1 bytes @ 0x4
   815                           
   816     0024                     ___flmul@b:	
   817                           ; 1 bytes @ 0x4
   818                           
   819                           
   820                           ; 4 bytes @ 0x4
   821     0024                     	ds	1
   822     0025                     __div_to_l_@exp1:
   823     0025                     __tdiv_to_l_@exp1:	
   824                           ; 1 bytes @ 0x5
   825                           
   826                           
   827                           ; 1 bytes @ 0x5
   828     0025                     	ds	3
   829     0028                     ___flmul@a:
   830                           
   831                           ; 4 bytes @ 0x8
   832     0028                     	ds	4
   833     002C                     ??___flmul:
   834                           
   835                           ; 1 bytes @ 0xC
   836     002C                     	ds	5
   837     0031                     ___flmul@sign:
   838                           
   839                           ; 1 bytes @ 0x11
   840     0031                     	ds	1
   841     0032                     ___flmul@grs:
   842                           
   843                           ; 4 bytes @ 0x12
   844     0032                     	ds	4
   845     0036                     ___flmul@aexp:
   846                           
   847                           ; 1 bytes @ 0x16
   848     0036                     	ds	1
   849     0037                     ___flmul@bexp:
   850                           
   851                           ; 1 bytes @ 0x17
   852     0037                     	ds	1
   853     0038                     ___flmul@prod:
   854                           
   855                           ; 4 bytes @ 0x18
   856     0038                     	ds	4
   857     003C                     ___flmul@temp:
   858                           
   859                           ; 2 bytes @ 0x1C
   860     003C                     	ds	2
   861     003E                     ?_fround:
   862     003E                     ?_scale:	
   863                           ; 4 bytes @ 0x1E
   864                           
   865                           
   866                           ; 4 bytes @ 0x1E
   867     003E                     	ds	4
   868     0042                     ??_fround:
   869     0042                     ??_scale:	
   870                           ; 1 bytes @ 0x22
   871                           
   872                           
   873                           ; 1 bytes @ 0x22
   874     0042                     	ds	7
   875     0049                     _fround$768:
   876                           
   877                           ; 4 bytes @ 0x29
   878     0049                     	ds	3
   879     004C                     _scale$769:
   880                           
   881                           ; 4 bytes @ 0x2C
   882     004C                     	ds	1
   883     004D                     _fround$767:
   884                           
   885                           ; 4 bytes @ 0x2D
   886     004D                     	ds	3
   887     0050                     scale@scl:
   888                           
   889                           ; 1 bytes @ 0x30
   890     0050                     	ds	1
   891     0051                     ?___fltol:
   892     0051                     fround@prec:	
   893                           ; 4 bytes @ 0x31
   894                           
   895     0051                     ___fltol@f1:	
   896                           ; 1 bytes @ 0x31
   897                           
   898                           
   899                           ; 4 bytes @ 0x31
   900     0051                     	ds	1
   901     0052                     ?___fladd:
   902     0052                     ___fladd@b:	
   903                           ; 4 bytes @ 0x32
   904                           
   905                           
   906                           ; 4 bytes @ 0x32
   907     0052                     	ds	3
   908     0055                     ??___fltol:
   909                           
   910                           ; 1 bytes @ 0x35
   911     0055                     	ds	1
   912     0056                     ___fladd@a:
   913                           
   914                           ; 4 bytes @ 0x36
   915     0056                     	ds	3
   916     0059                     ___fltol@sign1:
   917                           
   918                           ; 1 bytes @ 0x39
   919     0059                     	ds	1
   920     005A                     ??___fladd:
   921     005A                     ___fltol@exp1:	
   922                           ; 1 bytes @ 0x3A
   923                           
   924                           
   925                           ; 1 bytes @ 0x3A
   926     005A                     	ds	8
   927     0062                     ___fladd@signs:
   928                           
   929                           ; 1 bytes @ 0x42
   930     0062                     	ds	1
   931     0063                     ___fladd@aexp:
   932                           
   933                           ; 1 bytes @ 0x43
   934     0063                     	ds	1
   935     0064                     ___fladd@bexp:
   936                           
   937                           ; 1 bytes @ 0x44
   938     0064                     	ds	1
   939     0065                     ___fladd@grs:
   940                           
   941                           ; 1 bytes @ 0x45
   942     0065                     	ds	1
   943     0066                     ?___flsub:
   944     0066                     ___flsub@a:	
   945                           ; 4 bytes @ 0x46
   946                           
   947                           
   948                           ; 4 bytes @ 0x46
   949     0066                     	ds	4
   950     006A                     ___flsub@b:
   951                           
   952                           ; 4 bytes @ 0x4A
   953     006A                     	ds	4
   954                           
   955                           	psect	maintext
   956     1292                     __pmaintext:	
   957 ;;
   958 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   959 ;;
   960 ;; *************** function _main *****************
   961 ;; Defined at:
   962 ;;		line 14 in file "main.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;		None
   965 ;; Auto vars:     Size  Location     Type
   966 ;;  array          20   38[BANK1 ] unsigned char [20]
   967 ;;  temperature     4   58[BANK1 ] float 
   968 ;; Return value:  Size  Location     Type
   969 ;;                  1    wreg      void 
   970 ;; Registers used:
   971 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   972 ;; Tracked objects:
   973 ;;		On entry : B00/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   977 ;;      Params:         0       0       0       0       0
   978 ;;      Locals:         0       0      24       0       0
   979 ;;      Temps:          0       0       3       0       0
   980 ;;      Totals:         0       0      27       0       0
   981 ;;Total ram usage:       27 bytes
   982 ;; Hardware stack levels required when called: 4
   983 ;; This function calls:
   984 ;;		_Lcd_Clear
   985 ;;		_Lcd_Init
   986 ;;		_Lcd_Set_Cursor
   987 ;;		_Lcd_Write_String
   988 ;;		_sprintf
   989 ;; This function is called by:
   990 ;;		Startup code after reset
   991 ;; This function uses a non-reentrant model
   992 ;;
   993                           
   994     1292                     _main:	
   995                           ;psect for function _main
   996                           
   997     1292                     l3022:	
   998                           ;incstack = 0
   999                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1000                           
  1001                           
  1002                           ;main.c: 16:     TRISD = 0x00;
  1003     1292  1683               	bsf	3,5	;RP0=1, select bank1
  1004     1293  1303               	bcf	3,6	;RP1=0, select bank1
  1005     1294  0188               	clrf	8	;volatile
  1006                           
  1007                           ;main.c: 17:     PORTD = 0x00;
  1008     1295  1283               	bcf	3,5	;RP0=0, select bank0
  1009     1296  1303               	bcf	3,6	;RP1=0, select bank0
  1010     1297  0188               	clrf	8	;volatile
  1011     1298                     l3024:
  1012                           
  1013                           ;main.c: 19:     char array[20];;main.c: 20:     float temperature = 24.5;
  1014     1298  3041               	movlw	65
  1015     1299  1683               	bsf	3,5	;RP0=1, select bank1
  1016     129A  1303               	bcf	3,6	;RP1=0, select bank1
  1017     129B  00DD               	movwf	(main@temperature+3)^(0+128)
  1018     129C  30C4               	movlw	196
  1019     129D  00DC               	movwf	(main@temperature+2)^(0+128)
  1020     129E  3000               	movlw	0
  1021     129F  00DB               	movwf	(main@temperature+1)^(0+128)
  1022     12A0  3000               	movlw	0
  1023     12A1  00DA               	movwf	main@temperature^(0+128)
  1024     12A2                     l3026:
  1025                           
  1026                           ;main.c: 22:     Lcd_Init();
  1027     12A2  160A  118A  2235  160A  118A  	fcall	_Lcd_Init
  1028     12A7                     l3028:
  1029                           
  1030                           ;main.c: 23:     Lcd_Clear();
  1031     12A7  160A  158A  26D0  160A  118A  	fcall	_Lcd_Clear
  1032     12AC                     l3030:
  1033                           
  1034                           ;main.c: 26:     {;main.c: 27:         Lcd_Set_Cursor(1,1);
  1035     12AC  01F4               	clrf	Lcd_Set_Cursor@b
  1036     12AD  0AF4               	incf	Lcd_Set_Cursor@b,f
  1037     12AE  3001               	movlw	1
  1038     12AF  120A  118A  2009  160A  118A  	fcall	_Lcd_Set_Cursor
  1039     12B4                     l3032:
  1040                           
  1041                           ;main.c: 28:         Lcd_Write_String("Merhaba");
  1042     12B4  309F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1043     12B5  00F5               	movwf	Lcd_Write_String@a
  1044     12B6  3080               	movlw	128
  1045     12B7  00F6               	movwf	Lcd_Write_String@a+1
  1046     12B8  160A  158A  27BE  160A  118A  	fcall	_Lcd_Write_String
  1047     12BD                     l3034:
  1048                           
  1049                           ;main.c: 30:         sprintf(array, "Sicaklik = %f", temperature);
  1050     12BD  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1051     12BE  1683               	bsf	3,5	;RP0=1, select bank1
  1052     12BF  1303               	bcf	3,6	;RP1=0, select bank1
  1053     12C0  00A0               	movwf	sprintf@f^(0+128)
  1054     12C1  085D               	movf	(main@temperature+3)^(0+128),w
  1055     12C2  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1056     12C3  085C               	movf	(main@temperature+2)^(0+128),w
  1057     12C4  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1058     12C5  085B               	movf	(main@temperature+1)^(0+128),w
  1059     12C6  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1060     12C7  085A               	movf	main@temperature^(0+128),w
  1061     12C8  00A1               	movwf	(?_sprintf^(0+128)+1)
  1062     12C9  30C6               	movlw	(low (main@array| 0))& (0+255)
  1063     12CA  120A  118A  225A  160A  118A  	fcall	_sprintf
  1064     12CF                     l3036:
  1065                           
  1066                           ;main.c: 31:         Lcd_Set_Cursor(2,1);
  1067     12CF  01F4               	clrf	Lcd_Set_Cursor@b
  1068     12D0  0AF4               	incf	Lcd_Set_Cursor@b,f
  1069     12D1  3002               	movlw	2
  1070     12D2  120A  118A  2009  160A  118A  	fcall	_Lcd_Set_Cursor
  1071     12D7                     l3038:
  1072                           
  1073                           ;main.c: 32:         Lcd_Write_String(array);
  1074     12D7  30C6               	movlw	(low (main@array| 0))& (0+255)
  1075     12D8  00F5               	movwf	Lcd_Write_String@a
  1076     12D9  3000               	movlw	0
  1077     12DA  00F6               	movwf	Lcd_Write_String@a+1
  1078     12DB  160A  158A  27BE  160A  118A  	fcall	_Lcd_Write_String
  1079     12E0                     l3040:
  1080                           
  1081                           ;main.c: 33:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  1082     12E0  300B               	movlw	11
  1083     12E1  1683               	bsf	3,5	;RP0=1, select bank1
  1084     12E2  1303               	bcf	3,6	;RP1=0, select bank1
  1085     12E3  00C5               	movwf	(??_main^(0+128)+2)
  1086     12E4  3026               	movlw	38
  1087     12E5  00C4               	movwf	(??_main^(0+128)+1)
  1088     12E6  305D               	movlw	93
  1089     12E7  00C3               	movwf	??_main^(0+128)
  1090     12E8                     u5217:
  1091     12E8  0BC3               	decfsz	??_main^(0+128),f
  1092     12E9  2AE8               	goto	u5217
  1093     12EA  0BC4               	decfsz	(??_main^(0+128)+1),f
  1094     12EB  2AE8               	goto	u5217
  1095     12EC  0BC5               	decfsz	(??_main^(0+128)+2),f
  1096     12ED  2AE8               	goto	u5217
  1097     12EE  2AAC               	goto	l3030
  1098     12EF  120A  118A  2800   	ljmp	start
  1099     12F2                     __end_of_main:
  1100                           
  1101                           	psect	text1
  1102     025A                     __ptext1:	
  1103 ;; *************** function _sprintf *****************
  1104 ;; Defined at:
  1105 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;  sp              1    wreg     PTR unsigned char 
  1108 ;;		 -> main@array(20), 
  1109 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1110 ;;		 -> STR_2(14), 
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;  sp              1   29[BANK1 ] PTR unsigned char 
  1113 ;;		 -> main@array(20), 
  1114 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  1115 ;;  tmpval          4   25[BANK1 ] struct .
  1116 ;;  val             4   19[BANK1 ] unsigned long 
  1117 ;;  eexp            2   23[BANK1 ] int 
  1118 ;;  prec            2   17[BANK1 ] int 
  1119 ;;  flag            2   15[BANK1 ] unsigned short 
  1120 ;;  cp              2    0        PTR const unsigned char 
  1121 ;;  len             2    0        unsigned int 
  1122 ;;  width           2    0        int 
  1123 ;;  c               1   34[BANK1 ] unsigned char 
  1124 ;;  ap              1   14[BANK1 ] PTR void [1]
  1125 ;;		 -> ?_sprintf(2), 
  1126 ;;  d               1    0        unsigned char 
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  2    0[BANK1 ] int 
  1129 ;; Registers used:
  1130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1136 ;;      Params:         0       0       5       0       0
  1137 ;;      Locals:         0       0      25       0       0
  1138 ;;      Temps:          0       0       5       0       0
  1139 ;;      Totals:         0       0      35       0       0
  1140 ;;Total ram usage:       35 bytes
  1141 ;; Hardware stack levels used: 1
  1142 ;; Hardware stack levels required when called: 3
  1143 ;; This function calls:
  1144 ;;		___awdiv
  1145 ;;		___fladd
  1146 ;;		___fleq
  1147 ;;		___flge
  1148 ;;		___flmul
  1149 ;;		___flneg
  1150 ;;		___flsub
  1151 ;;		___fltol
  1152 ;;		___lldiv
  1153 ;;		___llmod
  1154 ;;		___wmul
  1155 ;;		___xxtofl
  1156 ;;		__div_to_l_
  1157 ;;		__tdiv_to_l_
  1158 ;;		_fround
  1159 ;;		_scale
  1160 ;; This function is called by:
  1161 ;;		_main
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165     025A                     _sprintf:	
  1166                           ;psect for function _sprintf
  1167                           
  1168                           
  1169                           ;incstack = 0
  1170                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1171                           ;sprintf@sp stored from wreg
  1172     025A  1683               	bsf	3,5	;RP0=1, select bank1
  1173     025B  1303               	bcf	3,6	;RP1=0, select bank1
  1174     025C  00BD               	movwf	sprintf@sp^(0+128)
  1175     025D                     l2846:
  1176                           
  1177                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1178     025D  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1179     025E  00AE               	movwf	sprintf@ap^(0+128)
  1180                           
  1181                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1182     025F  2FE7               	goto	l3006
  1183     0260                     l2848:
  1184                           
  1185                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1186     0260  3025               	movlw	37
  1187     0261  0642               	xorwf	sprintf@c^(0+128),w
  1188     0262  1903               	btfsc	3,2
  1189     0263  2A65               	goto	u4941
  1190     0264  2A66               	goto	u4940
  1191     0265                     u4941:
  1192     0265  2A70               	goto	l2854
  1193     0266                     u4940:
  1194     0266                     l2850:
  1195                           
  1196                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1197     0266  083D               	movf	sprintf@sp^(0+128),w
  1198     0267  0084               	movwf	4
  1199     0268  0842               	movf	sprintf@c^(0+128),w
  1200     0269  1383               	bcf	3,7	;select IRP bank0
  1201     026A  0080               	movwf	0
  1202     026B                     l2852:
  1203     026B  3001               	movlw	1
  1204     026C  00A5               	movwf	??_sprintf^(0+128)
  1205     026D  0825               	movf	??_sprintf^(0+128),w
  1206     026E  07BD               	addwf	sprintf@sp^(0+128),f
  1207                           
  1208                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1209     026F  2FE7               	goto	l3006
  1210     0270                     l2854:
  1211                           
  1212                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1213     0270  01AF               	clrf	sprintf@flag^(0+128)
  1214     0271  01B0               	clrf	(sprintf@flag+1)^(0+128)
  1215                           
  1216                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1217     0272  2A75               	goto	l2858
  1218     0273                     l190:	
  1219                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1220                           
  1221                           
  1222                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1223     0273  1530               	bsf	(sprintf@flag^(0+128)+1),2
  1224                           
  1225                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 690:    break;
  1226     0274  2A8F               	goto	l2860
  1227     0275                     l2858:
  1228     0275  3001               	movlw	1
  1229     0276  07A0               	addwf	sprintf@f^(0+128),f
  1230     0277  30FF               	movlw	-1
  1231     0278  0720               	addwf	sprintf@f^(0+128),w
  1232     0279  0084               	movwf	4
  1233     027A  160A  118A  200A  120A  118A  	fcall	stringdir
  1234     027F  00C2               	movwf	sprintf@c^(0+128)
  1235     0280  00A5               	movwf	??_sprintf^(0+128)
  1236     0281  01A6               	clrf	(??_sprintf^(0+128)+1)
  1237                           
  1238                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1239                           ; Switch size 1, requested type "simple"
  1240                           ; Number of cases is 1, Range of values is 0 to 0
  1241                           ; switch strategies available:
  1242                           ; Name         Instructions Cycles
  1243                           ; simple_byte            4     3 (average)
  1244                           ; direct_byte           11     8 (fixed)
  1245                           ; jumptable            260     6 (fixed)
  1246                           ;	Chosen strategy is simple_byte
  1247     0282  0826               	movf	(??_sprintf+1)^(0+128),w
  1248     0283  3A00               	xorlw	0	; case 0
  1249     0284  1903               	skipnz
  1250     0285  2A87               	goto	l3072
  1251     0286  2FE7               	goto	l3006
  1252     0287                     l3072:
  1253                           
  1254                           ; Switch size 1, requested type "simple"
  1255                           ; Number of cases is 2, Range of values is 0 to 102
  1256                           ; switch strategies available:
  1257                           ; Name         Instructions Cycles
  1258                           ; simple_byte            7     4 (average)
  1259                           ; jumptable            260     6 (fixed)
  1260                           ;	Chosen strategy is simple_byte
  1261     0287  0825               	movf	??_sprintf^(0+128),w
  1262     0288  3A00               	xorlw	0	; case 0
  1263     0289  1903               	skipnz
  1264     028A  2FF7               	goto	l3008
  1265     028B  3A66               	xorlw	102	; case 102
  1266     028C  1903               	skipnz
  1267     028D  2A73               	goto	l190
  1268     028E  2FE7               	goto	l3006
  1269     028F                     l2860:
  1270                           
  1271                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1272     028F  3000               	movlw	0
  1273     0290  052F               	andwf	sprintf@flag^(0+128),w
  1274     0291  00A5               	movwf	??_sprintf^(0+128)
  1275     0292  3007               	movlw	7
  1276     0293  0530               	andwf	(sprintf@flag+1)^(0+128),w
  1277     0294  00A6               	movwf	(??_sprintf+1)^(0+128)
  1278     0295  0825               	movf	??_sprintf^(0+128),w
  1279     0296  0426               	iorwf	(??_sprintf^(0+128)+1),w
  1280     0297  1903               	btfsc	3,2
  1281     0298  2A9A               	goto	u4951
  1282     0299  2A9B               	goto	u4950
  1283     029A                     u4951:
  1284     029A  2FD5               	goto	l3000
  1285     029B                     u4950:
  1286     029B                     l2862:
  1287                           
  1288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1289     029B  3006               	movlw	6
  1290     029C  00B1               	movwf	sprintf@prec^(0+128)
  1291     029D  3000               	movlw	0
  1292     029E  00B2               	movwf	(sprintf@prec^(0+128)+1)
  1293     029F                     l2864:
  1294                           
  1295                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1296     029F  082E               	movf	sprintf@ap^(0+128),w
  1297     02A0  0084               	movwf	4
  1298     02A1  1383               	bcf	3,7	;select IRP bank0
  1299     02A2  0800               	movf	0,w
  1300     02A3  00BE               	movwf	sprintf@fval^(0+128)
  1301     02A4  0A84               	incf	4,f
  1302     02A5  0800               	movf	0,w
  1303     02A6  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1304     02A7  0A84               	incf	4,f
  1305     02A8  0800               	movf	0,w
  1306     02A9  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1307     02AA  0A84               	incf	4,f
  1308     02AB  0800               	movf	0,w
  1309     02AC  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1310     02AD                     l2866:
  1311     02AD  3004               	movlw	4
  1312     02AE  00A5               	movwf	??_sprintf^(0+128)
  1313     02AF  0825               	movf	??_sprintf^(0+128),w
  1314     02B0  07AE               	addwf	sprintf@ap^(0+128),f
  1315     02B1                     l2868:
  1316                           
  1317                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1318     02B1  0841               	movf	(sprintf@fval+3)^(0+128),w
  1319     02B2  00F3               	movwf	___flge@ff1+3
  1320     02B3  0840               	movf	(sprintf@fval+2)^(0+128),w
  1321     02B4  00F2               	movwf	___flge@ff1+2
  1322     02B5  083F               	movf	(sprintf@fval+1)^(0+128),w
  1323     02B6  00F1               	movwf	___flge@ff1+1
  1324     02B7  083E               	movf	sprintf@fval^(0+128),w
  1325     02B8  00F0               	movwf	___flge@ff1
  1326     02B9  3000               	movlw	0
  1327     02BA  00F7               	movwf	___flge@ff2+3
  1328     02BB  3000               	movlw	0
  1329     02BC  00F6               	movwf	___flge@ff2+2
  1330     02BD  3000               	movlw	0
  1331     02BE  00F5               	movwf	___flge@ff2+1
  1332     02BF  3000               	movlw	0
  1333     02C0  00F4               	movwf	___flge@ff2
  1334     02C1  120A  158A  2002  120A  118A  	fcall	___flge
  1335     02C6  1803               	btfsc	3,0
  1336     02C7  2AC9               	goto	u4961
  1337     02C8  2ACA               	goto	u4960
  1338     02C9                     u4961:
  1339     02C9  2AE7               	goto	l2874
  1340     02CA                     u4960:
  1341     02CA                     l2870:
  1342                           
  1343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1344     02CA  1683               	bsf	3,5	;RP0=1, select bank1
  1345     02CB  1303               	bcf	3,6	;RP1=0, select bank1
  1346     02CC  0841               	movf	(sprintf@fval+3)^(0+128),w
  1347     02CD  00F3               	movwf	___flneg@f1+3
  1348     02CE  0840               	movf	(sprintf@fval+2)^(0+128),w
  1349     02CF  00F2               	movwf	___flneg@f1+2
  1350     02D0  083F               	movf	(sprintf@fval+1)^(0+128),w
  1351     02D1  00F1               	movwf	___flneg@f1+1
  1352     02D2  083E               	movf	sprintf@fval^(0+128),w
  1353     02D3  00F0               	movwf	___flneg@f1
  1354     02D4  160A  158A  26C5  120A  118A  	fcall	___flneg
  1355     02D9  0873               	movf	?___flneg+3,w
  1356     02DA  1683               	bsf	3,5	;RP0=1, select bank1
  1357     02DB  1303               	bcf	3,6	;RP1=0, select bank1
  1358     02DC  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1359     02DD  0872               	movf	?___flneg+2,w
  1360     02DE  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1361     02DF  0871               	movf	?___flneg+1,w
  1362     02E0  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1363     02E1  0870               	movf	?___flneg,w
  1364     02E2  00BE               	movwf	sprintf@fval^(0+128)
  1365     02E3                     l2872:
  1366                           
  1367                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1368     02E3  3003               	movlw	3
  1369     02E4  04AF               	iorwf	sprintf@flag^(0+128),f
  1370     02E5  3000               	movlw	0
  1371     02E6  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  1372     02E7                     l2874:
  1373                           
  1374                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1375     02E7  1683               	bsf	3,5	;RP0=1, select bank1
  1376     02E8  1303               	bcf	3,6	;RP1=0, select bank1
  1377     02E9  01B7               	clrf	sprintf@eexp^(0+128)
  1378     02EA  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  1379     02EB                     l2876:
  1380                           
  1381                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1382     02EB  0841               	movf	(sprintf@fval+3)^(0+128),w
  1383     02EC  00F3               	movwf	___fleq@ff1+3
  1384     02ED  0840               	movf	(sprintf@fval+2)^(0+128),w
  1385     02EE  00F2               	movwf	___fleq@ff1+2
  1386     02EF  083F               	movf	(sprintf@fval+1)^(0+128),w
  1387     02F0  00F1               	movwf	___fleq@ff1+1
  1388     02F1  083E               	movf	sprintf@fval^(0+128),w
  1389     02F2  00F0               	movwf	___fleq@ff1
  1390     02F3  3000               	movlw	0
  1391     02F4  00F7               	movwf	___fleq@ff2+3
  1392     02F5  3000               	movlw	0
  1393     02F6  00F6               	movwf	___fleq@ff2+2
  1394     02F7  3000               	movlw	0
  1395     02F8  00F5               	movwf	___fleq@ff2+1
  1396     02F9  3000               	movlw	0
  1397     02FA  00F4               	movwf	___fleq@ff2
  1398     02FB  160A  118A  213A  120A  118A  	fcall	___fleq
  1399     0300  1803               	btfsc	3,0
  1400     0301  2B03               	goto	u4971
  1401     0302  2B04               	goto	u4970
  1402     0303                     u4971:
  1403     0303  2BF4               	goto	l2902
  1404     0304                     u4970:
  1405     0304                     l2878:
  1406                           
  1407                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1408     0304  1003               	clrc
  1409     0305  1683               	bsf	3,5	;RP0=1, select bank1
  1410     0306  1303               	bcf	3,6	;RP1=0, select bank1
  1411     0307  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  1412     0308  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  1413     0309  3E82               	addlw	130
  1414     030A  00B7               	movwf	sprintf@eexp^(0+128)
  1415     030B  30FF               	movlw	255
  1416     030C  1803               	skipnc
  1417     030D  3000               	movlw	0
  1418     030E  00B8               	movwf	(sprintf@eexp^(0+128)+1)
  1419     030F                     l2880:
  1420                           
  1421                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  1422     030F  30FF               	movlw	255
  1423     0310  07B7               	addwf	sprintf@eexp^(0+128),f
  1424     0311  1803               	skipnc
  1425     0312  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  1426     0313  30FF               	movlw	255
  1427     0314  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  1428     0315                     l2882:
  1429                           
  1430                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  1431     0315  3003               	movlw	3
  1432     0316  00F0               	movwf	___wmul@multiplier
  1433     0317  3000               	movlw	0
  1434     0318  00F1               	movwf	___wmul@multiplier+1
  1435     0319  0838               	movf	(sprintf@eexp+1)^(0+128),w
  1436     031A  00F3               	movwf	___wmul@multiplicand+1
  1437     031B  0837               	movf	sprintf@eexp^(0+128),w
  1438     031C  00F2               	movwf	___wmul@multiplicand
  1439     031D  160A  158A  273D  120A  118A  	fcall	___wmul
  1440     0322  0871               	movf	?___wmul+1,w
  1441     0323  1683               	bsf	3,5	;RP0=1, select bank1
  1442     0324  1303               	bcf	3,6	;RP1=0, select bank1
  1443     0325  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  1444     0326  0870               	movf	?___wmul,w
  1445     0327  00B7               	movwf	sprintf@eexp^(0+128)
  1446     0328                     l2884:
  1447                           
  1448                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  1449     0328  300A               	movlw	10
  1450     0329  00F7               	movwf	___awdiv@divisor
  1451     032A  3000               	movlw	0
  1452     032B  00F8               	movwf	___awdiv@divisor+1
  1453     032C  0838               	movf	(sprintf@eexp+1)^(0+128),w
  1454     032D  00FA               	movwf	___awdiv@dividend+1
  1455     032E  0837               	movf	sprintf@eexp^(0+128),w
  1456     032F  00F9               	movwf	___awdiv@dividend
  1457     0330  160A  118A  2358  120A  118A  	fcall	___awdiv
  1458     0335  0878               	movf	?___awdiv+1,w
  1459     0336  1683               	bsf	3,5	;RP0=1, select bank1
  1460     0337  1303               	bcf	3,6	;RP1=0, select bank1
  1461     0338  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  1462     0339  0877               	movf	?___awdiv,w
  1463     033A  00B7               	movwf	sprintf@eexp^(0+128)
  1464     033B                     l2886:
  1465                           
  1466                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  1467     033B  1FB8               	btfss	(sprintf@eexp+1)^(0+128),7
  1468     033C  2B3E               	goto	u4981
  1469     033D  2B3F               	goto	u4980
  1470     033E                     u4981:
  1471     033E  2B45               	goto	l2890
  1472     033F                     u4980:
  1473     033F                     l2888:
  1474                           
  1475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  1476     033F  30FF               	movlw	255
  1477     0340  07B7               	addwf	sprintf@eexp^(0+128),f
  1478     0341  1803               	skipnc
  1479     0342  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  1480     0343  30FF               	movlw	255
  1481     0344  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  1482     0345                     l2890:
  1483                           
  1484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  1485     0345  0337               	decf	sprintf@eexp^(0+128),w
  1486     0346  3AFF               	xorlw	255
  1487     0347  120A  158A  24A1  120A  118A  	fcall	_scale
  1488     034C  1283               	bcf	3,5	;RP0=0, select bank0
  1489     034D  1303               	bcf	3,6	;RP1=0, select bank0
  1490     034E  0841               	movf	?_scale+3,w
  1491     034F  1683               	bsf	3,5	;RP0=1, select bank1
  1492     0350  1303               	bcf	3,6	;RP1=0, select bank1
  1493     0351  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  1494     0352  1283               	bcf	3,5	;RP0=0, select bank0
  1495     0353  1303               	bcf	3,6	;RP1=0, select bank0
  1496     0354  0840               	movf	?_scale+2,w
  1497     0355  1683               	bsf	3,5	;RP0=1, select bank1
  1498     0356  1303               	bcf	3,6	;RP1=0, select bank1
  1499     0357  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  1500     0358  1283               	bcf	3,5	;RP0=0, select bank0
  1501     0359  1303               	bcf	3,6	;RP1=0, select bank0
  1502     035A  083F               	movf	?_scale+1,w
  1503     035B  1683               	bsf	3,5	;RP0=1, select bank1
  1504     035C  1303               	bcf	3,6	;RP1=0, select bank1
  1505     035D  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  1506     035E  1283               	bcf	3,5	;RP0=0, select bank0
  1507     035F  1303               	bcf	3,6	;RP1=0, select bank0
  1508     0360  083E               	movf	?_scale,w
  1509     0361  1683               	bsf	3,5	;RP0=1, select bank1
  1510     0362  1303               	bcf	3,6	;RP1=0, select bank1
  1511     0363  00B9               	movwf	sprintf@tmpval^(0+128)
  1512     0364                     l2892:
  1513                           
  1514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  1515     0364  0841               	movf	(sprintf@fval+3)^(0+128),w
  1516     0365  1283               	bcf	3,5	;RP0=0, select bank0
  1517     0366  1303               	bcf	3,6	;RP1=0, select bank0
  1518     0367  00A7               	movwf	___flmul@b+3
  1519     0368  1683               	bsf	3,5	;RP0=1, select bank1
  1520     0369  1303               	bcf	3,6	;RP1=0, select bank1
  1521     036A  0840               	movf	(sprintf@fval+2)^(0+128),w
  1522     036B  1283               	bcf	3,5	;RP0=0, select bank0
  1523     036C  1303               	bcf	3,6	;RP1=0, select bank0
  1524     036D  00A6               	movwf	___flmul@b+2
  1525     036E  1683               	bsf	3,5	;RP0=1, select bank1
  1526     036F  1303               	bcf	3,6	;RP1=0, select bank1
  1527     0370  083F               	movf	(sprintf@fval+1)^(0+128),w
  1528     0371  1283               	bcf	3,5	;RP0=0, select bank0
  1529     0372  1303               	bcf	3,6	;RP1=0, select bank0
  1530     0373  00A5               	movwf	___flmul@b+1
  1531     0374  1683               	bsf	3,5	;RP0=1, select bank1
  1532     0375  1303               	bcf	3,6	;RP1=0, select bank1
  1533     0376  083E               	movf	sprintf@fval^(0+128),w
  1534     0377  1283               	bcf	3,5	;RP0=0, select bank0
  1535     0378  1303               	bcf	3,6	;RP1=0, select bank0
  1536     0379  00A4               	movwf	___flmul@b
  1537     037A  1683               	bsf	3,5	;RP0=1, select bank1
  1538     037B  1303               	bcf	3,6	;RP1=0, select bank1
  1539     037C  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  1540     037D  1283               	bcf	3,5	;RP0=0, select bank0
  1541     037E  1303               	bcf	3,6	;RP1=0, select bank0
  1542     037F  00AB               	movwf	___flmul@a+3
  1543     0380  1683               	bsf	3,5	;RP0=1, select bank1
  1544     0381  1303               	bcf	3,6	;RP1=0, select bank1
  1545     0382  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  1546     0383  1283               	bcf	3,5	;RP0=0, select bank0
  1547     0384  1303               	bcf	3,6	;RP1=0, select bank0
  1548     0385  00AA               	movwf	___flmul@a+2
  1549     0386  1683               	bsf	3,5	;RP0=1, select bank1
  1550     0387  1303               	bcf	3,6	;RP1=0, select bank1
  1551     0388  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  1552     0389  1283               	bcf	3,5	;RP0=0, select bank0
  1553     038A  1303               	bcf	3,6	;RP1=0, select bank0
  1554     038B  00A9               	movwf	___flmul@a+1
  1555     038C  1683               	bsf	3,5	;RP0=1, select bank1
  1556     038D  1303               	bcf	3,6	;RP1=0, select bank1
  1557     038E  0839               	movf	sprintf@tmpval^(0+128),w
  1558     038F  1283               	bcf	3,5	;RP0=0, select bank0
  1559     0390  1303               	bcf	3,6	;RP1=0, select bank0
  1560     0391  00A8               	movwf	___flmul@a
  1561     0392  120A  158A  215C  120A  118A  	fcall	___flmul
  1562     0397  1283               	bcf	3,5	;RP0=0, select bank0
  1563     0398  1303               	bcf	3,6	;RP1=0, select bank0
  1564     0399  0827               	movf	?___flmul+3,w
  1565     039A  1683               	bsf	3,5	;RP0=1, select bank1
  1566     039B  1303               	bcf	3,6	;RP1=0, select bank1
  1567     039C  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  1568     039D  1283               	bcf	3,5	;RP0=0, select bank0
  1569     039E  1303               	bcf	3,6	;RP1=0, select bank0
  1570     039F  0826               	movf	?___flmul+2,w
  1571     03A0  1683               	bsf	3,5	;RP0=1, select bank1
  1572     03A1  1303               	bcf	3,6	;RP1=0, select bank1
  1573     03A2  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  1574     03A3  1283               	bcf	3,5	;RP0=0, select bank0
  1575     03A4  1303               	bcf	3,6	;RP1=0, select bank0
  1576     03A5  0825               	movf	?___flmul+1,w
  1577     03A6  1683               	bsf	3,5	;RP0=1, select bank1
  1578     03A7  1303               	bcf	3,6	;RP1=0, select bank1
  1579     03A8  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  1580     03A9  1283               	bcf	3,5	;RP0=0, select bank0
  1581     03AA  1303               	bcf	3,6	;RP1=0, select bank0
  1582     03AB  0824               	movf	?___flmul,w
  1583     03AC  1683               	bsf	3,5	;RP0=1, select bank1
  1584     03AD  1303               	bcf	3,6	;RP1=0, select bank1
  1585     03AE  00B9               	movwf	sprintf@tmpval^(0+128)
  1586     03AF                     l2894:
  1587                           
  1588                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  1589     03AF  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  1590     03B0  00F3               	movwf	___flge@ff1+3
  1591     03B1  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  1592     03B2  00F2               	movwf	___flge@ff1+2
  1593     03B3  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  1594     03B4  00F1               	movwf	___flge@ff1+1
  1595     03B5  0839               	movf	sprintf@tmpval^(0+128),w
  1596     03B6  00F0               	movwf	___flge@ff1
  1597     03B7  303F               	movlw	63
  1598     03B8  00F7               	movwf	___flge@ff2+3
  1599     03B9  3080               	movlw	128
  1600     03BA  00F6               	movwf	___flge@ff2+2
  1601     03BB  3000               	movlw	0
  1602     03BC  00F5               	movwf	___flge@ff2+1
  1603     03BD  3000               	movlw	0
  1604     03BE  00F4               	movwf	___flge@ff2
  1605     03BF  120A  158A  2002  120A  118A  	fcall	___flge
  1606     03C4  1803               	btfsc	3,0
  1607     03C5  2BC7               	goto	u4991
  1608     03C6  2BC8               	goto	u4990
  1609     03C7                     u4991:
  1610     03C7  2BD1               	goto	l2898
  1611     03C8                     u4990:
  1612     03C8                     l2896:
  1613                           
  1614                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  1615     03C8  30FF               	movlw	255
  1616     03C9  1683               	bsf	3,5	;RP0=1, select bank1
  1617     03CA  1303               	bcf	3,6	;RP1=0, select bank1
  1618     03CB  07B7               	addwf	sprintf@eexp^(0+128),f
  1619     03CC  1803               	skipnc
  1620     03CD  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  1621     03CE  30FF               	movlw	255
  1622     03CF  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  1623     03D0  2BF4               	goto	l2902
  1624     03D1                     l2898:
  1625     03D1  1683               	bsf	3,5	;RP0=1, select bank1
  1626     03D2  1303               	bcf	3,6	;RP1=0, select bank1
  1627     03D3  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  1628     03D4  00F3               	movwf	___flge@ff1+3
  1629     03D5  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  1630     03D6  00F2               	movwf	___flge@ff1+2
  1631     03D7  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  1632     03D8  00F1               	movwf	___flge@ff1+1
  1633     03D9  0839               	movf	sprintf@tmpval^(0+128),w
  1634     03DA  00F0               	movwf	___flge@ff1
  1635     03DB  3041               	movlw	65
  1636     03DC  00F7               	movwf	___flge@ff2+3
  1637     03DD  3020               	movlw	32
  1638     03DE  00F6               	movwf	___flge@ff2+2
  1639     03DF  3000               	movlw	0
  1640     03E0  00F5               	movwf	___flge@ff2+1
  1641     03E1  3000               	movlw	0
  1642     03E2  00F4               	movwf	___flge@ff2
  1643     03E3  120A  158A  2002  120A  118A  	fcall	___flge
  1644     03E8  1C03               	btfss	3,0
  1645     03E9  2BEB               	goto	u5001
  1646     03EA  2BEC               	goto	u5000
  1647     03EB                     u5001:
  1648     03EB  2BF4               	goto	l2902
  1649     03EC                     u5000:
  1650     03EC                     l2900:
  1651                           
  1652                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  1653     03EC  3001               	movlw	1
  1654     03ED  1683               	bsf	3,5	;RP0=1, select bank1
  1655     03EE  1303               	bcf	3,6	;RP1=0, select bank1
  1656     03EF  07B7               	addwf	sprintf@eexp^(0+128),f
  1657     03F0  1803               	skipnc
  1658     03F1  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  1659     03F2  3000               	movlw	0
  1660     03F3  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  1661     03F4                     l2902:
  1662     03F4                     l2904:	
  1663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  1664                           
  1665                           
  1666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  1667     03F4  3006               	movlw	6
  1668     03F5  120A  118A  204F  120A  118A  	fcall	_fround
  1669     03FA  1283               	bcf	3,5	;RP0=0, select bank0
  1670     03FB  1303               	bcf	3,6	;RP1=0, select bank0
  1671     03FC  0841               	movf	?_fround+3,w
  1672     03FD  00D5               	movwf	___fladd@b+3
  1673     03FE  0840               	movf	?_fround+2,w
  1674     03FF  00D4               	movwf	___fladd@b+2
  1675     0400  083F               	movf	?_fround+1,w
  1676     0401  00D3               	movwf	___fladd@b+1
  1677     0402  083E               	movf	?_fround,w
  1678     0403  00D2               	movwf	___fladd@b
  1679     0404  1683               	bsf	3,5	;RP0=1, select bank1
  1680     0405  1303               	bcf	3,6	;RP1=0, select bank1
  1681     0406  0841               	movf	(sprintf@fval+3)^(0+128),w
  1682     0407  1283               	bcf	3,5	;RP0=0, select bank0
  1683     0408  1303               	bcf	3,6	;RP1=0, select bank0
  1684     0409  00D9               	movwf	___fladd@a+3
  1685     040A  1683               	bsf	3,5	;RP0=1, select bank1
  1686     040B  1303               	bcf	3,6	;RP1=0, select bank1
  1687     040C  0840               	movf	(sprintf@fval+2)^(0+128),w
  1688     040D  1283               	bcf	3,5	;RP0=0, select bank0
  1689     040E  1303               	bcf	3,6	;RP1=0, select bank0
  1690     040F  00D8               	movwf	___fladd@a+2
  1691     0410  1683               	bsf	3,5	;RP0=1, select bank1
  1692     0411  1303               	bcf	3,6	;RP1=0, select bank1
  1693     0412  083F               	movf	(sprintf@fval+1)^(0+128),w
  1694     0413  1283               	bcf	3,5	;RP0=0, select bank0
  1695     0414  1303               	bcf	3,6	;RP1=0, select bank0
  1696     0415  00D7               	movwf	___fladd@a+1
  1697     0416  1683               	bsf	3,5	;RP0=1, select bank1
  1698     0417  1303               	bcf	3,6	;RP1=0, select bank1
  1699     0418  083E               	movf	sprintf@fval^(0+128),w
  1700     0419  1283               	bcf	3,5	;RP0=0, select bank0
  1701     041A  1303               	bcf	3,6	;RP1=0, select bank0
  1702     041B  00D6               	movwf	___fladd@a
  1703     041C  160A  118A  25A8  120A  118A  	fcall	___fladd
  1704     0421  1283               	bcf	3,5	;RP0=0, select bank0
  1705     0422  1303               	bcf	3,6	;RP1=0, select bank0
  1706     0423  0855               	movf	?___fladd+3,w
  1707     0424  1683               	bsf	3,5	;RP0=1, select bank1
  1708     0425  1303               	bcf	3,6	;RP1=0, select bank1
  1709     0426  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1710     0427  1283               	bcf	3,5	;RP0=0, select bank0
  1711     0428  1303               	bcf	3,6	;RP1=0, select bank0
  1712     0429  0854               	movf	?___fladd+2,w
  1713     042A  1683               	bsf	3,5	;RP0=1, select bank1
  1714     042B  1303               	bcf	3,6	;RP1=0, select bank1
  1715     042C  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1716     042D  1283               	bcf	3,5	;RP0=0, select bank0
  1717     042E  1303               	bcf	3,6	;RP1=0, select bank0
  1718     042F  0853               	movf	?___fladd+1,w
  1719     0430  1683               	bsf	3,5	;RP0=1, select bank1
  1720     0431  1303               	bcf	3,6	;RP1=0, select bank1
  1721     0432  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1722     0433  1283               	bcf	3,5	;RP0=0, select bank0
  1723     0434  1303               	bcf	3,6	;RP1=0, select bank0
  1724     0435  0852               	movf	?___fladd,w
  1725     0436  1683               	bsf	3,5	;RP0=1, select bank1
  1726     0437  1303               	bcf	3,6	;RP1=0, select bank1
  1727     0438  00BE               	movwf	sprintf@fval^(0+128)
  1728     0439                     l2906:
  1729                           
  1730                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  1731     0439  0838               	movf	(sprintf@eexp+1)^(0+128),w
  1732     043A  3A80               	xorlw	128
  1733     043B  00FF               	movwf	btemp+1
  1734     043C  3080               	movlw	128
  1735     043D  027F               	subwf	btemp+1,w
  1736     043E  1D03               	skipz
  1737     043F  2C42               	goto	u5015
  1738     0440  300A               	movlw	10
  1739     0441  0237               	subwf	sprintf@eexp^(0+128),w
  1740     0442                     u5015:
  1741     0442  1803               	skipnc
  1742     0443  2C45               	goto	u5011
  1743     0444  2C46               	goto	u5010
  1744     0445                     u5011:
  1745     0445  2C97               	goto	l2914
  1746     0446                     u5010:
  1747     0446                     l2908:
  1748     0446  1683               	bsf	3,5	;RP0=1, select bank1
  1749     0447  1303               	bcf	3,6	;RP1=0, select bank1
  1750     0448  0841               	movf	(sprintf@fval+3)^(0+128),w
  1751     0449  00F3               	movwf	___fleq@ff1+3
  1752     044A  0840               	movf	(sprintf@fval+2)^(0+128),w
  1753     044B  00F2               	movwf	___fleq@ff1+2
  1754     044C  083F               	movf	(sprintf@fval+1)^(0+128),w
  1755     044D  00F1               	movwf	___fleq@ff1+1
  1756     044E  083E               	movf	sprintf@fval^(0+128),w
  1757     044F  00F0               	movwf	___fleq@ff1
  1758     0450  3000               	movlw	0
  1759     0451  00F7               	movwf	___fleq@ff2+3
  1760     0452  3000               	movlw	0
  1761     0453  00F6               	movwf	___fleq@ff2+2
  1762     0454  3000               	movlw	0
  1763     0455  00F5               	movwf	___fleq@ff2+1
  1764     0456  3000               	movlw	0
  1765     0457  00F4               	movwf	___fleq@ff2
  1766     0458  160A  118A  213A  120A  118A  	fcall	___fleq
  1767     045D  1803               	btfsc	3,0
  1768     045E  2C60               	goto	u5021
  1769     045F  2C61               	goto	u5020
  1770     0460                     u5021:
  1771     0460  2D09               	goto	l2928
  1772     0461                     u5020:
  1773     0461                     l2910:
  1774     0461  1683               	bsf	3,5	;RP0=1, select bank1
  1775     0462  1303               	bcf	3,6	;RP1=0, select bank1
  1776     0463  0841               	movf	(sprintf@fval+3)^(0+128),w
  1777     0464  1283               	bcf	3,5	;RP0=0, select bank0
  1778     0465  1303               	bcf	3,6	;RP1=0, select bank0
  1779     0466  00D4               	movwf	___fltol@f1+3
  1780     0467  1683               	bsf	3,5	;RP0=1, select bank1
  1781     0468  1303               	bcf	3,6	;RP1=0, select bank1
  1782     0469  0840               	movf	(sprintf@fval+2)^(0+128),w
  1783     046A  1283               	bcf	3,5	;RP0=0, select bank0
  1784     046B  1303               	bcf	3,6	;RP1=0, select bank0
  1785     046C  00D3               	movwf	___fltol@f1+2
  1786     046D  1683               	bsf	3,5	;RP0=1, select bank1
  1787     046E  1303               	bcf	3,6	;RP1=0, select bank1
  1788     046F  083F               	movf	(sprintf@fval+1)^(0+128),w
  1789     0470  1283               	bcf	3,5	;RP0=0, select bank0
  1790     0471  1303               	bcf	3,6	;RP1=0, select bank0
  1791     0472  00D2               	movwf	___fltol@f1+1
  1792     0473  1683               	bsf	3,5	;RP0=1, select bank1
  1793     0474  1303               	bcf	3,6	;RP1=0, select bank1
  1794     0475  083E               	movf	sprintf@fval^(0+128),w
  1795     0476  1283               	bcf	3,5	;RP0=0, select bank0
  1796     0477  1303               	bcf	3,6	;RP1=0, select bank0
  1797     0478  00D1               	movwf	___fltol@f1
  1798     0479  160A  118A  23C1  120A  118A  	fcall	___fltol
  1799     047E  1283               	bcf	3,5	;RP0=0, select bank0
  1800     047F  1303               	bcf	3,6	;RP1=0, select bank0
  1801     0480  0854               	movf	?___fltol+3,w
  1802     0481  0453               	iorwf	?___fltol+2,w
  1803     0482  0452               	iorwf	?___fltol+1,w
  1804     0483  0451               	iorwf	?___fltol,w
  1805     0484  1D03               	skipz
  1806     0485  2C87               	goto	u5031
  1807     0486  2C88               	goto	u5030
  1808     0487                     u5031:
  1809     0487  2D09               	goto	l2928
  1810     0488                     u5030:
  1811     0488                     l2912:
  1812     0488  1683               	bsf	3,5	;RP0=1, select bank1
  1813     0489  1303               	bcf	3,6	;RP1=0, select bank1
  1814     048A  0838               	movf	(sprintf@eexp+1)^(0+128),w
  1815     048B  3A80               	xorlw	128
  1816     048C  00FF               	movwf	btemp+1
  1817     048D  3080               	movlw	128
  1818     048E  027F               	subwf	btemp+1,w
  1819     048F  1D03               	skipz
  1820     0490  2C93               	goto	u5045
  1821     0491  3002               	movlw	2
  1822     0492  0237               	subwf	sprintf@eexp^(0+128),w
  1823     0493                     u5045:
  1824     0493  1C03               	skipc
  1825     0494  2C96               	goto	u5041
  1826     0495  2C97               	goto	u5040
  1827     0496                     u5041:
  1828     0496  2D09               	goto	l2928
  1829     0497                     u5040:
  1830     0497                     l2914:
  1831                           
  1832                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  1833     0497  1683               	bsf	3,5	;RP0=1, select bank1
  1834     0498  1303               	bcf	3,6	;RP1=0, select bank1
  1835     0499  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  1836     049A  00F3               	movwf	___flge@ff1+3
  1837     049B  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  1838     049C  00F2               	movwf	___flge@ff1+2
  1839     049D  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  1840     049E  00F1               	movwf	___flge@ff1+1
  1841     049F  0839               	movf	sprintf@tmpval^(0+128),w
  1842     04A0  00F0               	movwf	___flge@ff1
  1843     04A1  3040               	movlw	64
  1844     04A2  00F7               	movwf	___flge@ff2+3
  1845     04A3  3089               	movlw	137
  1846     04A4  00F6               	movwf	___flge@ff2+2
  1847     04A5  3070               	movlw	112
  1848     04A6  00F5               	movwf	___flge@ff2+1
  1849     04A7  305F               	movlw	95
  1850     04A8  00F4               	movwf	___flge@ff2
  1851     04A9  120A  158A  2002  120A  118A  	fcall	___flge
  1852     04AE  1803               	btfsc	3,0
  1853     04AF  2CB1               	goto	u5051
  1854     04B0  2CB2               	goto	u5050
  1855     04B1                     u5051:
  1856     04B1  2CBB               	goto	l2918
  1857     04B2                     u5050:
  1858     04B2                     l2916:
  1859                           
  1860                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  1861     04B2  30F7               	movlw	247
  1862     04B3  1683               	bsf	3,5	;RP0=1, select bank1
  1863     04B4  1303               	bcf	3,6	;RP1=0, select bank1
  1864     04B5  07B7               	addwf	sprintf@eexp^(0+128),f
  1865     04B6  1803               	skipnc
  1866     04B7  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  1867     04B8  30FF               	movlw	255
  1868     04B9  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  1869                           
  1870                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1148:      }else{
  1871     04BA  2CC3               	goto	l2920
  1872     04BB                     l2918:
  1873                           
  1874                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  1875     04BB  30F8               	movlw	248
  1876     04BC  1683               	bsf	3,5	;RP0=1, select bank1
  1877     04BD  1303               	bcf	3,6	;RP1=0, select bank1
  1878     04BE  07B7               	addwf	sprintf@eexp^(0+128),f
  1879     04BF  1803               	skipnc
  1880     04C0  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  1881     04C1  30FF               	movlw	255
  1882     04C2  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  1883     04C3                     l2920:
  1884                           
  1885                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  1886     04C3  0837               	movf	sprintf@eexp^(0+128),w
  1887     04C4  120A  158A  24A1  120A  118A  	fcall	_scale
  1888     04C9  1283               	bcf	3,5	;RP0=0, select bank0
  1889     04CA  1303               	bcf	3,6	;RP1=0, select bank0
  1890     04CB  0841               	movf	?_scale+3,w
  1891     04CC  1683               	bsf	3,5	;RP0=1, select bank1
  1892     04CD  1303               	bcf	3,6	;RP1=0, select bank1
  1893     04CE  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  1894     04CF  1283               	bcf	3,5	;RP0=0, select bank0
  1895     04D0  1303               	bcf	3,6	;RP1=0, select bank0
  1896     04D1  0840               	movf	?_scale+2,w
  1897     04D2  1683               	bsf	3,5	;RP0=1, select bank1
  1898     04D3  1303               	bcf	3,6	;RP1=0, select bank1
  1899     04D4  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  1900     04D5  1283               	bcf	3,5	;RP0=0, select bank0
  1901     04D6  1303               	bcf	3,6	;RP1=0, select bank0
  1902     04D7  083F               	movf	?_scale+1,w
  1903     04D8  1683               	bsf	3,5	;RP0=1, select bank1
  1904     04D9  1303               	bcf	3,6	;RP1=0, select bank1
  1905     04DA  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  1906     04DB  1283               	bcf	3,5	;RP0=0, select bank0
  1907     04DC  1303               	bcf	3,6	;RP1=0, select bank0
  1908     04DD  083E               	movf	?_scale,w
  1909     04DE  1683               	bsf	3,5	;RP0=1, select bank1
  1910     04DF  1303               	bcf	3,6	;RP1=0, select bank1
  1911     04E0  00B9               	movwf	sprintf@tmpval^(0+128)
  1912     04E1                     l2922:
  1913     04E1  0841               	movf	(sprintf@fval+3)^(0+128),w
  1914     04E2  00F3               	movwf	__div_to_l_@f1+3
  1915     04E3  0840               	movf	(sprintf@fval+2)^(0+128),w
  1916     04E4  00F2               	movwf	__div_to_l_@f1+2
  1917     04E5  083F               	movf	(sprintf@fval+1)^(0+128),w
  1918     04E6  00F1               	movwf	__div_to_l_@f1+1
  1919     04E7  083E               	movf	sprintf@fval^(0+128),w
  1920     04E8  00F0               	movwf	__div_to_l_@f1
  1921     04E9  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  1922     04EA  00F7               	movwf	__div_to_l_@f2+3
  1923     04EB  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  1924     04EC  00F6               	movwf	__div_to_l_@f2+2
  1925     04ED  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  1926     04EE  00F5               	movwf	__div_to_l_@f2+1
  1927     04EF  0839               	movf	sprintf@tmpval^(0+128),w
  1928     04F0  00F4               	movwf	__div_to_l_@f2
  1929     04F1  120A  158A  20A4  120A  118A  	fcall	__div_to_l_
  1930     04F6  0873               	movf	?__div_to_l_+3,w
  1931     04F7  1683               	bsf	3,5	;RP0=1, select bank1
  1932     04F8  1303               	bcf	3,6	;RP1=0, select bank1
  1933     04F9  00B6               	movwf	(sprintf@val+3)^(0+128)
  1934     04FA  0872               	movf	?__div_to_l_+2,w
  1935     04FB  00B5               	movwf	(sprintf@val+2)^(0+128)
  1936     04FC  0871               	movf	?__div_to_l_+1,w
  1937     04FD  00B4               	movwf	(sprintf@val+1)^(0+128)
  1938     04FE  0870               	movf	?__div_to_l_,w
  1939     04FF  00B3               	movwf	sprintf@val^(0+128)
  1940     0500                     l2926:
  1941                           
  1942                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  1943     0500  3000               	movlw	0
  1944     0501  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1945     0502  3000               	movlw	0
  1946     0503  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1947     0504  3000               	movlw	0
  1948     0505  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1949     0506  3000               	movlw	0
  1950     0507  00BE               	movwf	sprintf@fval^(0+128)
  1951                           
  1952                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  1953     0508  2D8D               	goto	l2934
  1954     0509                     l2928:
  1955                           
  1956                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  1957     0509  1683               	bsf	3,5	;RP0=1, select bank1
  1958     050A  1303               	bcf	3,6	;RP1=0, select bank1
  1959     050B  0841               	movf	(sprintf@fval+3)^(0+128),w
  1960     050C  1283               	bcf	3,5	;RP0=0, select bank0
  1961     050D  1303               	bcf	3,6	;RP1=0, select bank0
  1962     050E  00D4               	movwf	___fltol@f1+3
  1963     050F  1683               	bsf	3,5	;RP0=1, select bank1
  1964     0510  1303               	bcf	3,6	;RP1=0, select bank1
  1965     0511  0840               	movf	(sprintf@fval+2)^(0+128),w
  1966     0512  1283               	bcf	3,5	;RP0=0, select bank0
  1967     0513  1303               	bcf	3,6	;RP1=0, select bank0
  1968     0514  00D3               	movwf	___fltol@f1+2
  1969     0515  1683               	bsf	3,5	;RP0=1, select bank1
  1970     0516  1303               	bcf	3,6	;RP1=0, select bank1
  1971     0517  083F               	movf	(sprintf@fval+1)^(0+128),w
  1972     0518  1283               	bcf	3,5	;RP0=0, select bank0
  1973     0519  1303               	bcf	3,6	;RP1=0, select bank0
  1974     051A  00D2               	movwf	___fltol@f1+1
  1975     051B  1683               	bsf	3,5	;RP0=1, select bank1
  1976     051C  1303               	bcf	3,6	;RP1=0, select bank1
  1977     051D  083E               	movf	sprintf@fval^(0+128),w
  1978     051E  1283               	bcf	3,5	;RP0=0, select bank0
  1979     051F  1303               	bcf	3,6	;RP1=0, select bank0
  1980     0520  00D1               	movwf	___fltol@f1
  1981     0521  160A  118A  23C1  120A  118A  	fcall	___fltol
  1982     0526  1283               	bcf	3,5	;RP0=0, select bank0
  1983     0527  1303               	bcf	3,6	;RP1=0, select bank0
  1984     0528  0854               	movf	?___fltol+3,w
  1985     0529  1683               	bsf	3,5	;RP0=1, select bank1
  1986     052A  1303               	bcf	3,6	;RP1=0, select bank1
  1987     052B  00B6               	movwf	(sprintf@val+3)^(0+128)
  1988     052C  1283               	bcf	3,5	;RP0=0, select bank0
  1989     052D  1303               	bcf	3,6	;RP1=0, select bank0
  1990     052E  0853               	movf	?___fltol+2,w
  1991     052F  1683               	bsf	3,5	;RP0=1, select bank1
  1992     0530  1303               	bcf	3,6	;RP1=0, select bank1
  1993     0531  00B5               	movwf	(sprintf@val+2)^(0+128)
  1994     0532  1283               	bcf	3,5	;RP0=0, select bank0
  1995     0533  1303               	bcf	3,6	;RP1=0, select bank0
  1996     0534  0852               	movf	?___fltol+1,w
  1997     0535  1683               	bsf	3,5	;RP0=1, select bank1
  1998     0536  1303               	bcf	3,6	;RP1=0, select bank1
  1999     0537  00B4               	movwf	(sprintf@val+1)^(0+128)
  2000     0538  1283               	bcf	3,5	;RP0=0, select bank0
  2001     0539  1303               	bcf	3,6	;RP1=0, select bank0
  2002     053A  0851               	movf	?___fltol,w
  2003     053B  1683               	bsf	3,5	;RP0=1, select bank1
  2004     053C  1303               	bcf	3,6	;RP1=0, select bank1
  2005     053D  00B3               	movwf	sprintf@val^(0+128)
  2006     053E                     l2930:
  2007                           
  2008                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2009     053E  0836               	movf	(sprintf@val+3)^(0+128),w
  2010     053F  00F3               	movwf	___xxtofl@val+3
  2011     0540  0835               	movf	(sprintf@val+2)^(0+128),w
  2012     0541  00F2               	movwf	___xxtofl@val+2
  2013     0542  0834               	movf	(sprintf@val+1)^(0+128),w
  2014     0543  00F1               	movwf	___xxtofl@val+1
  2015     0544  0833               	movf	sprintf@val^(0+128),w
  2016     0545  00F0               	movwf	___xxtofl@val
  2017     0546  3000               	movlw	0
  2018     0547  160A  118A  24F0  120A  118A  	fcall	___xxtofl
  2019     054C  0873               	movf	?___xxtofl+3,w
  2020     054D  1283               	bcf	3,5	;RP0=0, select bank0
  2021     054E  1303               	bcf	3,6	;RP1=0, select bank0
  2022     054F  00E9               	movwf	___flsub@a+3
  2023     0550  0872               	movf	?___xxtofl+2,w
  2024     0551  00E8               	movwf	___flsub@a+2
  2025     0552  0871               	movf	?___xxtofl+1,w
  2026     0553  00E7               	movwf	___flsub@a+1
  2027     0554  0870               	movf	?___xxtofl,w
  2028     0555  00E6               	movwf	___flsub@a
  2029     0556  1683               	bsf	3,5	;RP0=1, select bank1
  2030     0557  1303               	bcf	3,6	;RP1=0, select bank1
  2031     0558  0841               	movf	(sprintf@fval+3)^(0+128),w
  2032     0559  1283               	bcf	3,5	;RP0=0, select bank0
  2033     055A  1303               	bcf	3,6	;RP1=0, select bank0
  2034     055B  00ED               	movwf	___flsub@b+3
  2035     055C  1683               	bsf	3,5	;RP0=1, select bank1
  2036     055D  1303               	bcf	3,6	;RP1=0, select bank1
  2037     055E  0840               	movf	(sprintf@fval+2)^(0+128),w
  2038     055F  1283               	bcf	3,5	;RP0=0, select bank0
  2039     0560  1303               	bcf	3,6	;RP1=0, select bank0
  2040     0561  00EC               	movwf	___flsub@b+2
  2041     0562  1683               	bsf	3,5	;RP0=1, select bank1
  2042     0563  1303               	bcf	3,6	;RP1=0, select bank1
  2043     0564  083F               	movf	(sprintf@fval+1)^(0+128),w
  2044     0565  1283               	bcf	3,5	;RP0=0, select bank0
  2045     0566  1303               	bcf	3,6	;RP1=0, select bank0
  2046     0567  00EB               	movwf	___flsub@b+1
  2047     0568  1683               	bsf	3,5	;RP0=1, select bank1
  2048     0569  1303               	bcf	3,6	;RP1=0, select bank1
  2049     056A  083E               	movf	sprintf@fval^(0+128),w
  2050     056B  1283               	bcf	3,5	;RP0=0, select bank0
  2051     056C  1303               	bcf	3,6	;RP1=0, select bank0
  2052     056D  00EA               	movwf	___flsub@b
  2053     056E  160A  158A  2719  120A  118A  	fcall	___flsub
  2054     0573  1283               	bcf	3,5	;RP0=0, select bank0
  2055     0574  1303               	bcf	3,6	;RP1=0, select bank0
  2056     0575  0869               	movf	?___flsub+3,w
  2057     0576  1683               	bsf	3,5	;RP0=1, select bank1
  2058     0577  1303               	bcf	3,6	;RP1=0, select bank1
  2059     0578  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2060     0579  1283               	bcf	3,5	;RP0=0, select bank0
  2061     057A  1303               	bcf	3,6	;RP1=0, select bank0
  2062     057B  0868               	movf	?___flsub+2,w
  2063     057C  1683               	bsf	3,5	;RP0=1, select bank1
  2064     057D  1303               	bcf	3,6	;RP1=0, select bank1
  2065     057E  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2066     057F  1283               	bcf	3,5	;RP0=0, select bank0
  2067     0580  1303               	bcf	3,6	;RP1=0, select bank0
  2068     0581  0867               	movf	?___flsub+1,w
  2069     0582  1683               	bsf	3,5	;RP0=1, select bank1
  2070     0583  1303               	bcf	3,6	;RP1=0, select bank1
  2071     0584  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2072     0585  1283               	bcf	3,5	;RP0=0, select bank0
  2073     0586  1303               	bcf	3,6	;RP1=0, select bank0
  2074     0587  0866               	movf	?___flsub,w
  2075     0588  1683               	bsf	3,5	;RP0=1, select bank1
  2076     0589  1303               	bcf	3,6	;RP1=0, select bank1
  2077     058A  00BE               	movwf	sprintf@fval^(0+128)
  2078     058B                     l2932:
  2079                           
  2080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2081     058B  01B7               	clrf	sprintf@eexp^(0+128)
  2082     058C  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  2083     058D                     l2934:
  2084                           
  2085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2086     058D  01C2               	clrf	sprintf@c^(0+128)
  2087     058E  0AC2               	incf	sprintf@c^(0+128),f
  2088     058F                     l2940:
  2089                           
  2090                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2091     058F  0842               	movf	sprintf@c^(0+128),w
  2092     0590  00A5               	movwf	??_sprintf^(0+128)
  2093     0591  3001               	movlw	1
  2094     0592                     u5065:
  2095     0592  1003               	clrc
  2096     0593  0DA5               	rlf	??_sprintf^(0+128),f
  2097     0594  3EFF               	addlw	-1
  2098     0595  1D03               	skipz
  2099     0596  2D92               	goto	u5065
  2100     0597  1003               	clrc
  2101     0598  0D25               	rlf	??_sprintf^(0+128),w
  2102     0599  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2103     059A  0084               	movwf	4
  2104     059B  160A  118A  200A  120A  118A  	fcall	stringdir
  2105     05A0  00A6               	movwf	(??_sprintf+1)^(0+128)
  2106     05A1  160A  118A  200A  120A  118A  	fcall	stringdir
  2107     05A6  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  2108     05A7  160A  118A  200A  120A  118A  	fcall	stringdir
  2109     05AC  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  2110     05AD  160A  118A  200A  120A  118A  	fcall	stringdir
  2111     05B2  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  2112     05B3  0829               	movf	(??_sprintf+4)^(0+128),w
  2113     05B4  0236               	subwf	(sprintf@val+3)^(0+128),w
  2114     05B5  1D03               	skipz
  2115     05B6  2DC1               	goto	u5075
  2116     05B7  0828               	movf	(??_sprintf+3)^(0+128),w
  2117     05B8  0235               	subwf	(sprintf@val+2)^(0+128),w
  2118     05B9  1D03               	skipz
  2119     05BA  2DC1               	goto	u5075
  2120     05BB  0827               	movf	(??_sprintf+2)^(0+128),w
  2121     05BC  0234               	subwf	(sprintf@val+1)^(0+128),w
  2122     05BD  1D03               	skipz
  2123     05BE  2DC1               	goto	u5075
  2124     05BF  0826               	movf	(??_sprintf+1)^(0+128),w
  2125     05C0  0233               	subwf	sprintf@val^(0+128),w
  2126     05C1                     u5075:
  2127     05C1  1803               	skipnc
  2128     05C2  2DC4               	goto	u5071
  2129     05C3  2DC5               	goto	u5070
  2130     05C4                     u5071:
  2131     05C4  2DC6               	goto	l2944
  2132     05C5                     u5070:
  2133     05C5  2DD0               	goto	l2946
  2134     05C6                     l2944:
  2135     05C6  3001               	movlw	1
  2136     05C7  00A5               	movwf	??_sprintf^(0+128)
  2137     05C8  0825               	movf	??_sprintf^(0+128),w
  2138     05C9  07C2               	addwf	sprintf@c^(0+128),f
  2139     05CA  300A               	movlw	10
  2140     05CB  0642               	xorwf	sprintf@c^(0+128),w
  2141     05CC  1D03               	btfss	3,2
  2142     05CD  2DCF               	goto	u5081
  2143     05CE  2DD0               	goto	u5080
  2144     05CF                     u5081:
  2145     05CF  2D8F               	goto	l2940
  2146     05D0                     u5080:
  2147     05D0                     l2946:
  2148                           
  2149                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  2150     05D0  3003               	movlw	3
  2151     05D1  052F               	andwf	sprintf@flag^(0+128),w
  2152     05D2  00A5               	movwf	??_sprintf^(0+128)
  2153     05D3  3000               	movlw	0
  2154     05D4  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2155     05D5  00A6               	movwf	(??_sprintf+1)^(0+128)
  2156     05D6  0825               	movf	??_sprintf^(0+128),w
  2157     05D7  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2158     05D8  1903               	btfsc	3,2
  2159     05D9  2DDB               	goto	u5091
  2160     05DA  2DDC               	goto	u5090
  2161     05DB                     u5091:
  2162     05DB  2E4A               	goto	l215
  2163     05DC                     u5090:
  2164     05DC                     l2948:
  2165                           
  2166                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2167     05DC  083D               	movf	sprintf@sp^(0+128),w
  2168     05DD  0084               	movwf	4
  2169     05DE  302D               	movlw	45
  2170     05DF  1383               	bcf	3,7	;select IRP bank0
  2171     05E0  0080               	movwf	0
  2172     05E1                     l2950:
  2173     05E1  3001               	movlw	1
  2174     05E2  00A5               	movwf	??_sprintf^(0+128)
  2175     05E3  0825               	movf	??_sprintf^(0+128),w
  2176     05E4  07BD               	addwf	sprintf@sp^(0+128),f
  2177     05E5  2E4A               	goto	l215
  2178     05E6                     l2952:
  2179                           
  2180                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2181     05E6  0842               	movf	sprintf@c^(0+128),w
  2182     05E7  00A5               	movwf	??_sprintf^(0+128)
  2183     05E8  3001               	movlw	1
  2184     05E9                     u5105:
  2185     05E9  1003               	clrc
  2186     05EA  0DA5               	rlf	??_sprintf^(0+128),f
  2187     05EB  3EFF               	addlw	-1
  2188     05EC  1D03               	skipz
  2189     05ED  2DE9               	goto	u5105
  2190     05EE  1003               	clrc
  2191     05EF  0D25               	rlf	??_sprintf^(0+128),w
  2192     05F0  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2193     05F1  0084               	movwf	4
  2194     05F2  160A  118A  200A  120A  118A  	fcall	stringdir
  2195     05F7  00F0               	movwf	___lldiv@divisor
  2196     05F8  160A  118A  200A  120A  118A  	fcall	stringdir
  2197     05FD  00F1               	movwf	___lldiv@divisor+1
  2198     05FE  160A  118A  200A  120A  118A  	fcall	stringdir
  2199     0603  00F2               	movwf	___lldiv@divisor+2
  2200     0604  160A  118A  200A  120A  118A  	fcall	stringdir
  2201     0609  00F3               	movwf	___lldiv@divisor+3
  2202     060A  0836               	movf	(sprintf@val+3)^(0+128),w
  2203     060B  00F7               	movwf	___lldiv@dividend+3
  2204     060C  0835               	movf	(sprintf@val+2)^(0+128),w
  2205     060D  00F6               	movwf	___lldiv@dividend+2
  2206     060E  0834               	movf	(sprintf@val+1)^(0+128),w
  2207     060F  00F5               	movwf	___lldiv@dividend+1
  2208     0610  0833               	movf	sprintf@val^(0+128),w
  2209     0611  00F4               	movwf	___lldiv@dividend
  2210     0612  160A  118A  22F2  120A  118A  	fcall	___lldiv
  2211     0617  0873               	movf	?___lldiv+3,w
  2212     0618  1683               	bsf	3,5	;RP0=1, select bank1
  2213     0619  1303               	bcf	3,6	;RP1=0, select bank1
  2214     061A  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2215     061B  0872               	movf	?___lldiv+2,w
  2216     061C  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2217     061D  0871               	movf	?___lldiv+1,w
  2218     061E  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2219     061F  0870               	movf	?___lldiv,w
  2220     0620  00B9               	movwf	sprintf@tmpval^(0+128)
  2221     0621                     l2954:
  2222                           
  2223                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2224     0621  3000               	movlw	0
  2225     0622  00F3               	movwf	___llmod@divisor+3
  2226     0623  3000               	movlw	0
  2227     0624  00F2               	movwf	___llmod@divisor+2
  2228     0625  3000               	movlw	0
  2229     0626  00F1               	movwf	___llmod@divisor+1
  2230     0627  300A               	movlw	10
  2231     0628  00F0               	movwf	___llmod@divisor
  2232     0629  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2233     062A  00F7               	movwf	___llmod@dividend+3
  2234     062B  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2235     062C  00F6               	movwf	___llmod@dividend+2
  2236     062D  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2237     062E  00F5               	movwf	___llmod@dividend+1
  2238     062F  0839               	movf	sprintf@tmpval^(0+128),w
  2239     0630  00F4               	movwf	___llmod@dividend
  2240     0631  160A  118A  2188  120A  118A  	fcall	___llmod
  2241     0636  0873               	movf	?___llmod+3,w
  2242     0637  1683               	bsf	3,5	;RP0=1, select bank1
  2243     0638  1303               	bcf	3,6	;RP1=0, select bank1
  2244     0639  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2245     063A  0872               	movf	?___llmod+2,w
  2246     063B  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2247     063C  0871               	movf	?___llmod+1,w
  2248     063D  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2249     063E  0870               	movf	?___llmod,w
  2250     063F  00B9               	movwf	sprintf@tmpval^(0+128)
  2251     0640                     l2956:
  2252                           
  2253                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  2254     0640  083D               	movf	sprintf@sp^(0+128),w
  2255     0641  0084               	movwf	4
  2256     0642  0839               	movf	sprintf@tmpval^(0+128),w
  2257     0643  3E30               	addlw	48
  2258     0644  1383               	bcf	3,7	;select IRP bank0
  2259     0645  0080               	movwf	0
  2260     0646  3001               	movlw	1
  2261     0647  00A5               	movwf	??_sprintf^(0+128)
  2262     0648  0825               	movf	??_sprintf^(0+128),w
  2263     0649  07BD               	addwf	sprintf@sp^(0+128),f
  2264     064A                     l215:	
  2265                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1232:    }
  2266                           
  2267                           
  2268                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  2269     064A  3001               	movlw	1
  2270     064B  02C2               	subwf	sprintf@c^(0+128),f
  2271     064C  0A42               	incf	sprintf@c^(0+128),w
  2272     064D  1D03               	btfss	3,2
  2273     064E  2E50               	goto	u5111
  2274     064F  2E51               	goto	u5110
  2275     0650                     u5111:
  2276     0650  2DE6               	goto	l2952
  2277     0651                     u5110:
  2278     0651  2E63               	goto	l2964
  2279     0652                     l2958:
  2280                           
  2281                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  2282     0652  1683               	bsf	3,5	;RP0=1, select bank1
  2283     0653  1303               	bcf	3,6	;RP1=0, select bank1
  2284     0654  083D               	movf	sprintf@sp^(0+128),w
  2285     0655  0084               	movwf	4
  2286     0656  3030               	movlw	48
  2287     0657  1383               	bcf	3,7	;select IRP bank0
  2288     0658  0080               	movwf	0
  2289     0659                     l2960:
  2290     0659  3001               	movlw	1
  2291     065A  00A5               	movwf	??_sprintf^(0+128)
  2292     065B  0825               	movf	??_sprintf^(0+128),w
  2293     065C  07BD               	addwf	sprintf@sp^(0+128),f
  2294     065D                     l2962:
  2295                           
  2296                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  2297     065D  30FF               	movlw	255
  2298     065E  07B7               	addwf	sprintf@eexp^(0+128),f
  2299     065F  1803               	skipnc
  2300     0660  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2301     0661  30FF               	movlw	255
  2302     0662  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2303     0663                     l2964:
  2304                           
  2305                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  2306     0663  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2307     0664  3A80               	xorlw	128
  2308     0665  00FF               	movwf	btemp+1
  2309     0666  3080               	movlw	128
  2310     0667  027F               	subwf	btemp+1,w
  2311     0668  1D03               	skipz
  2312     0669  2E6C               	goto	u5125
  2313     066A  3001               	movlw	1
  2314     066B  0237               	subwf	sprintf@eexp^(0+128),w
  2315     066C                     u5125:
  2316     066C  1803               	skipnc
  2317     066D  2E6F               	goto	u5121
  2318     066E  2E70               	goto	u5120
  2319     066F                     u5121:
  2320     066F  2E52               	goto	l2958
  2321     0670                     u5120:
  2322     0670                     l2966:
  2323                           
  2324                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2325     0670  1683               	bsf	3,5	;RP0=1, select bank1
  2326     0671  1303               	bcf	3,6	;RP1=0, select bank1
  2327     0672  0832               	movf	(sprintf@prec+1)^(0+128),w
  2328     0673  3A80               	xorlw	128
  2329     0674  00FF               	movwf	btemp+1
  2330     0675  3080               	movlw	128
  2331     0676  027F               	subwf	btemp+1,w
  2332     0677  1D03               	skipz
  2333     0678  2E7B               	goto	u5135
  2334     0679  3009               	movlw	9
  2335     067A  0231               	subwf	sprintf@prec^(0+128),w
  2336     067B                     u5135:
  2337     067B  1C03               	skipc
  2338     067C  2E7E               	goto	u5131
  2339     067D  2E7F               	goto	u5130
  2340     067E                     u5131:
  2341     067E  2E84               	goto	l2970
  2342     067F                     u5130:
  2343     067F                     l2968:
  2344                           
  2345                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  2346     067F  3008               	movlw	8
  2347     0680  1683               	bsf	3,5	;RP0=1, select bank1
  2348     0681  1303               	bcf	3,6	;RP1=0, select bank1
  2349     0682  00C2               	movwf	sprintf@c^(0+128)
  2350     0683  2E88               	goto	l222
  2351     0684                     l2970:
  2352                           
  2353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  2354     0684  1683               	bsf	3,5	;RP0=1, select bank1
  2355     0685  1303               	bcf	3,6	;RP1=0, select bank1
  2356     0686  0831               	movf	sprintf@prec^(0+128),w
  2357     0687  00C2               	movwf	sprintf@c^(0+128)
  2358     0688                     l222:
  2359                           
  2360                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  2361     0688  0842               	movf	sprintf@c^(0+128),w
  2362     0689  00A5               	movwf	??_sprintf^(0+128)
  2363     068A  01A6               	clrf	(??_sprintf^(0+128)+1)
  2364     068B  0825               	movf	??_sprintf^(0+128),w
  2365     068C  02B1               	subwf	sprintf@prec^(0+128),f
  2366     068D  0826               	movf	(??_sprintf+1)^(0+128),w
  2367     068E  1C03               	skipc
  2368     068F  03B2               	decf	(sprintf@prec+1)^(0+128),f
  2369     0690  02B2               	subwf	(sprintf@prec+1)^(0+128),f
  2370     0691                     l2972:
  2371                           
  2372                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  2373     0691  0842               	movf	sprintf@c^(0+128),w
  2374     0692  1903               	btfsc	3,2
  2375     0693  2E95               	goto	u5141
  2376     0694  2E96               	goto	u5140
  2377     0695                     u5141:
  2378     0695  2E9F               	goto	l2978
  2379     0696                     u5140:
  2380     0696                     l2974:
  2381                           
  2382                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  2383     0696  083D               	movf	sprintf@sp^(0+128),w
  2384     0697  0084               	movwf	4
  2385     0698  302E               	movlw	46
  2386     0699  1383               	bcf	3,7	;select IRP bank0
  2387     069A  0080               	movwf	0
  2388     069B                     l2976:
  2389     069B  3001               	movlw	1
  2390     069C  00A5               	movwf	??_sprintf^(0+128)
  2391     069D  0825               	movf	??_sprintf^(0+128),w
  2392     069E  07BD               	addwf	sprintf@sp^(0+128),f
  2393     069F                     l2978:
  2394                           
  2395                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  2396     069F  0842               	movf	sprintf@c^(0+128),w
  2397     06A0  120A  158A  24A1  120A  118A  	fcall	_scale
  2398     06A5  1283               	bcf	3,5	;RP0=0, select bank0
  2399     06A6  1303               	bcf	3,6	;RP1=0, select bank0
  2400     06A7  0841               	movf	?_scale+3,w
  2401     06A8  1683               	bsf	3,5	;RP0=1, select bank1
  2402     06A9  1303               	bcf	3,6	;RP1=0, select bank1
  2403     06AA  00AD               	movwf	(_sprintf$770+3)^(0+128)
  2404     06AB  1283               	bcf	3,5	;RP0=0, select bank0
  2405     06AC  1303               	bcf	3,6	;RP1=0, select bank0
  2406     06AD  0840               	movf	?_scale+2,w
  2407     06AE  1683               	bsf	3,5	;RP0=1, select bank1
  2408     06AF  1303               	bcf	3,6	;RP1=0, select bank1
  2409     06B0  00AC               	movwf	(_sprintf$770+2)^(0+128)
  2410     06B1  1283               	bcf	3,5	;RP0=0, select bank0
  2411     06B2  1303               	bcf	3,6	;RP1=0, select bank0
  2412     06B3  083F               	movf	?_scale+1,w
  2413     06B4  1683               	bsf	3,5	;RP0=1, select bank1
  2414     06B5  1303               	bcf	3,6	;RP1=0, select bank1
  2415     06B6  00AB               	movwf	(_sprintf$770+1)^(0+128)
  2416     06B7  1283               	bcf	3,5	;RP0=0, select bank0
  2417     06B8  1303               	bcf	3,6	;RP1=0, select bank0
  2418     06B9  083E               	movf	?_scale,w
  2419     06BA  1683               	bsf	3,5	;RP0=1, select bank1
  2420     06BB  1303               	bcf	3,6	;RP1=0, select bank1
  2421     06BC  00AA               	movwf	_sprintf$770^(0+128)
  2422     06BD                     l2980:
  2423                           
  2424                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  2425     06BD  082D               	movf	(_sprintf$770+3)^(0+128),w
  2426     06BE  1283               	bcf	3,5	;RP0=0, select bank0
  2427     06BF  1303               	bcf	3,6	;RP1=0, select bank0
  2428     06C0  00AB               	movwf	___flmul@a+3
  2429     06C1  1683               	bsf	3,5	;RP0=1, select bank1
  2430     06C2  1303               	bcf	3,6	;RP1=0, select bank1
  2431     06C3  082C               	movf	(_sprintf$770+2)^(0+128),w
  2432     06C4  1283               	bcf	3,5	;RP0=0, select bank0
  2433     06C5  1303               	bcf	3,6	;RP1=0, select bank0
  2434     06C6  00AA               	movwf	___flmul@a+2
  2435     06C7  1683               	bsf	3,5	;RP0=1, select bank1
  2436     06C8  1303               	bcf	3,6	;RP1=0, select bank1
  2437     06C9  082B               	movf	(_sprintf$770+1)^(0+128),w
  2438     06CA  1283               	bcf	3,5	;RP0=0, select bank0
  2439     06CB  1303               	bcf	3,6	;RP1=0, select bank0
  2440     06CC  00A9               	movwf	___flmul@a+1
  2441     06CD  1683               	bsf	3,5	;RP0=1, select bank1
  2442     06CE  1303               	bcf	3,6	;RP1=0, select bank1
  2443     06CF  082A               	movf	_sprintf$770^(0+128),w
  2444     06D0  1283               	bcf	3,5	;RP0=0, select bank0
  2445     06D1  1303               	bcf	3,6	;RP1=0, select bank0
  2446     06D2  00A8               	movwf	___flmul@a
  2447     06D3  1683               	bsf	3,5	;RP0=1, select bank1
  2448     06D4  1303               	bcf	3,6	;RP1=0, select bank1
  2449     06D5  0841               	movf	(sprintf@fval+3)^(0+128),w
  2450     06D6  1283               	bcf	3,5	;RP0=0, select bank0
  2451     06D7  1303               	bcf	3,6	;RP1=0, select bank0
  2452     06D8  00A7               	movwf	___flmul@b+3
  2453     06D9  1683               	bsf	3,5	;RP0=1, select bank1
  2454     06DA  1303               	bcf	3,6	;RP1=0, select bank1
  2455     06DB  0840               	movf	(sprintf@fval+2)^(0+128),w
  2456     06DC  1283               	bcf	3,5	;RP0=0, select bank0
  2457     06DD  1303               	bcf	3,6	;RP1=0, select bank0
  2458     06DE  00A6               	movwf	___flmul@b+2
  2459     06DF  1683               	bsf	3,5	;RP0=1, select bank1
  2460     06E0  1303               	bcf	3,6	;RP1=0, select bank1
  2461     06E1  083F               	movf	(sprintf@fval+1)^(0+128),w
  2462     06E2  1283               	bcf	3,5	;RP0=0, select bank0
  2463     06E3  1303               	bcf	3,6	;RP1=0, select bank0
  2464     06E4  00A5               	movwf	___flmul@b+1
  2465     06E5  1683               	bsf	3,5	;RP0=1, select bank1
  2466     06E6  1303               	bcf	3,6	;RP1=0, select bank1
  2467     06E7  083E               	movf	sprintf@fval^(0+128),w
  2468     06E8  1283               	bcf	3,5	;RP0=0, select bank0
  2469     06E9  1303               	bcf	3,6	;RP1=0, select bank0
  2470     06EA  00A4               	movwf	___flmul@b
  2471     06EB  120A  158A  215C  120A  118A  	fcall	___flmul
  2472     06F0  1283               	bcf	3,5	;RP0=0, select bank0
  2473     06F1  1303               	bcf	3,6	;RP1=0, select bank0
  2474     06F2  0827               	movf	?___flmul+3,w
  2475     06F3  00D4               	movwf	___fltol@f1+3
  2476     06F4  0826               	movf	?___flmul+2,w
  2477     06F5  00D3               	movwf	___fltol@f1+2
  2478     06F6  0825               	movf	?___flmul+1,w
  2479     06F7  00D2               	movwf	___fltol@f1+1
  2480     06F8  0824               	movf	?___flmul,w
  2481     06F9  00D1               	movwf	___fltol@f1
  2482     06FA  160A  118A  23C1  120A  118A  	fcall	___fltol
  2483     06FF  1283               	bcf	3,5	;RP0=0, select bank0
  2484     0700  1303               	bcf	3,6	;RP1=0, select bank0
  2485     0701  0854               	movf	?___fltol+3,w
  2486     0702  1683               	bsf	3,5	;RP0=1, select bank1
  2487     0703  1303               	bcf	3,6	;RP1=0, select bank1
  2488     0704  00B6               	movwf	(sprintf@val+3)^(0+128)
  2489     0705  1283               	bcf	3,5	;RP0=0, select bank0
  2490     0706  1303               	bcf	3,6	;RP1=0, select bank0
  2491     0707  0853               	movf	?___fltol+2,w
  2492     0708  1683               	bsf	3,5	;RP0=1, select bank1
  2493     0709  1303               	bcf	3,6	;RP1=0, select bank1
  2494     070A  00B5               	movwf	(sprintf@val+2)^(0+128)
  2495     070B  1283               	bcf	3,5	;RP0=0, select bank0
  2496     070C  1303               	bcf	3,6	;RP1=0, select bank0
  2497     070D  0852               	movf	?___fltol+1,w
  2498     070E  1683               	bsf	3,5	;RP0=1, select bank1
  2499     070F  1303               	bcf	3,6	;RP1=0, select bank1
  2500     0710  00B4               	movwf	(sprintf@val+1)^(0+128)
  2501     0711  1283               	bcf	3,5	;RP0=0, select bank0
  2502     0712  1303               	bcf	3,6	;RP1=0, select bank0
  2503     0713  0851               	movf	?___fltol,w
  2504     0714  1683               	bsf	3,5	;RP0=1, select bank1
  2505     0715  1303               	bcf	3,6	;RP1=0, select bank1
  2506     0716  00B3               	movwf	sprintf@val^(0+128)
  2507                           
  2508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  2509     0717  2FB7               	goto	l2990
  2510     0718                     l2982:
  2511                           
  2512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  2513     0718  0842               	movf	sprintf@c^(0+128),w
  2514     0719  00A5               	movwf	??_sprintf^(0+128)
  2515     071A  3001               	movlw	1
  2516     071B                     u5155:
  2517     071B  1003               	clrc
  2518     071C  0DA5               	rlf	??_sprintf^(0+128),f
  2519     071D  3EFF               	addlw	-1
  2520     071E  1D03               	skipz
  2521     071F  2F1B               	goto	u5155
  2522     0720  1003               	clrc
  2523     0721  0D25               	rlf	??_sprintf^(0+128),w
  2524     0722  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2525     0723  0084               	movwf	4
  2526     0724  160A  118A  200A  120A  118A  	fcall	stringdir
  2527     0729  00F0               	movwf	___lldiv@divisor
  2528     072A  160A  118A  200A  120A  118A  	fcall	stringdir
  2529     072F  00F1               	movwf	___lldiv@divisor+1
  2530     0730  160A  118A  200A  120A  118A  	fcall	stringdir
  2531     0735  00F2               	movwf	___lldiv@divisor+2
  2532     0736  160A  118A  200A  120A  118A  	fcall	stringdir
  2533     073B  00F3               	movwf	___lldiv@divisor+3
  2534     073C  0836               	movf	(sprintf@val+3)^(0+128),w
  2535     073D  00F7               	movwf	___lldiv@dividend+3
  2536     073E  0835               	movf	(sprintf@val+2)^(0+128),w
  2537     073F  00F6               	movwf	___lldiv@dividend+2
  2538     0740  0834               	movf	(sprintf@val+1)^(0+128),w
  2539     0741  00F5               	movwf	___lldiv@dividend+1
  2540     0742  0833               	movf	sprintf@val^(0+128),w
  2541     0743  00F4               	movwf	___lldiv@dividend
  2542     0744  160A  118A  22F2  120A  118A  	fcall	___lldiv
  2543     0749  0873               	movf	?___lldiv+3,w
  2544     074A  1683               	bsf	3,5	;RP0=1, select bank1
  2545     074B  1303               	bcf	3,6	;RP1=0, select bank1
  2546     074C  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2547     074D  0872               	movf	?___lldiv+2,w
  2548     074E  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2549     074F  0871               	movf	?___lldiv+1,w
  2550     0750  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2551     0751  0870               	movf	?___lldiv,w
  2552     0752  00B9               	movwf	sprintf@tmpval^(0+128)
  2553     0753                     l2984:
  2554                           
  2555                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  2556     0753  3000               	movlw	0
  2557     0754  00F3               	movwf	___llmod@divisor+3
  2558     0755  3000               	movlw	0
  2559     0756  00F2               	movwf	___llmod@divisor+2
  2560     0757  3000               	movlw	0
  2561     0758  00F1               	movwf	___llmod@divisor+1
  2562     0759  300A               	movlw	10
  2563     075A  00F0               	movwf	___llmod@divisor
  2564     075B  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2565     075C  00F7               	movwf	___llmod@dividend+3
  2566     075D  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2567     075E  00F6               	movwf	___llmod@dividend+2
  2568     075F  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2569     0760  00F5               	movwf	___llmod@dividend+1
  2570     0761  0839               	movf	sprintf@tmpval^(0+128),w
  2571     0762  00F4               	movwf	___llmod@dividend
  2572     0763  160A  118A  2188  120A  118A  	fcall	___llmod
  2573     0768  0873               	movf	?___llmod+3,w
  2574     0769  1683               	bsf	3,5	;RP0=1, select bank1
  2575     076A  1303               	bcf	3,6	;RP1=0, select bank1
  2576     076B  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2577     076C  0872               	movf	?___llmod+2,w
  2578     076D  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2579     076E  0871               	movf	?___llmod+1,w
  2580     076F  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2581     0770  0870               	movf	?___llmod,w
  2582     0771  00B9               	movwf	sprintf@tmpval^(0+128)
  2583     0772                     l2986:
  2584                           
  2585                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  2586     0772  083D               	movf	sprintf@sp^(0+128),w
  2587     0773  0084               	movwf	4
  2588     0774  0839               	movf	sprintf@tmpval^(0+128),w
  2589     0775  3E30               	addlw	48
  2590     0776  1383               	bcf	3,7	;select IRP bank0
  2591     0777  0080               	movwf	0
  2592     0778  3001               	movlw	1
  2593     0779  00A5               	movwf	??_sprintf^(0+128)
  2594     077A  0825               	movf	??_sprintf^(0+128),w
  2595     077B  07BD               	addwf	sprintf@sp^(0+128),f
  2596     077C                     l2988:
  2597                           
  2598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  2599     077C  0842               	movf	sprintf@c^(0+128),w
  2600     077D  00A5               	movwf	??_sprintf^(0+128)
  2601     077E  3001               	movlw	1
  2602     077F                     u5165:
  2603     077F  1003               	clrc
  2604     0780  0DA5               	rlf	??_sprintf^(0+128),f
  2605     0781  3EFF               	addlw	-1
  2606     0782  1D03               	skipz
  2607     0783  2F7F               	goto	u5165
  2608     0784  1003               	clrc
  2609     0785  0D25               	rlf	??_sprintf^(0+128),w
  2610     0786  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2611     0787  0084               	movwf	4
  2612     0788  160A  118A  200A  120A  118A  	fcall	stringdir
  2613     078D  00F0               	movwf	___llmod@divisor
  2614     078E  160A  118A  200A  120A  118A  	fcall	stringdir
  2615     0793  00F1               	movwf	___llmod@divisor+1
  2616     0794  160A  118A  200A  120A  118A  	fcall	stringdir
  2617     0799  00F2               	movwf	___llmod@divisor+2
  2618     079A  160A  118A  200A  120A  118A  	fcall	stringdir
  2619     079F  00F3               	movwf	___llmod@divisor+3
  2620     07A0  0836               	movf	(sprintf@val+3)^(0+128),w
  2621     07A1  00F7               	movwf	___llmod@dividend+3
  2622     07A2  0835               	movf	(sprintf@val+2)^(0+128),w
  2623     07A3  00F6               	movwf	___llmod@dividend+2
  2624     07A4  0834               	movf	(sprintf@val+1)^(0+128),w
  2625     07A5  00F5               	movwf	___llmod@dividend+1
  2626     07A6  0833               	movf	sprintf@val^(0+128),w
  2627     07A7  00F4               	movwf	___llmod@dividend
  2628     07A8  160A  118A  2188  120A  118A  	fcall	___llmod
  2629     07AD  0873               	movf	?___llmod+3,w
  2630     07AE  1683               	bsf	3,5	;RP0=1, select bank1
  2631     07AF  1303               	bcf	3,6	;RP1=0, select bank1
  2632     07B0  00B6               	movwf	(sprintf@val+3)^(0+128)
  2633     07B1  0872               	movf	?___llmod+2,w
  2634     07B2  00B5               	movwf	(sprintf@val+2)^(0+128)
  2635     07B3  0871               	movf	?___llmod+1,w
  2636     07B4  00B4               	movwf	(sprintf@val+1)^(0+128)
  2637     07B5  0870               	movf	?___llmod,w
  2638     07B6  00B3               	movwf	sprintf@val^(0+128)
  2639     07B7                     l2990:
  2640                           
  2641                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  2642     07B7  3001               	movlw	1
  2643     07B8  02C2               	subwf	sprintf@c^(0+128),f
  2644     07B9  0A42               	incf	sprintf@c^(0+128),w
  2645     07BA  1D03               	btfss	3,2
  2646     07BB  2FBD               	goto	u5171
  2647     07BC  2FBE               	goto	u5170
  2648     07BD                     u5171:
  2649     07BD  2F18               	goto	l2982
  2650     07BE                     u5170:
  2651     07BE  2FCE               	goto	l2998
  2652     07BF                     l2992:
  2653                           
  2654                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  2655     07BF  083D               	movf	sprintf@sp^(0+128),w
  2656     07C0  0084               	movwf	4
  2657     07C1  3030               	movlw	48
  2658     07C2  1383               	bcf	3,7	;select IRP bank0
  2659     07C3  0080               	movwf	0
  2660     07C4                     l2994:
  2661     07C4  3001               	movlw	1
  2662     07C5  00A5               	movwf	??_sprintf^(0+128)
  2663     07C6  0825               	movf	??_sprintf^(0+128),w
  2664     07C7  07BD               	addwf	sprintf@sp^(0+128),f
  2665     07C8                     l2996:
  2666                           
  2667                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  2668     07C8  30FF               	movlw	255
  2669     07C9  07B1               	addwf	sprintf@prec^(0+128),f
  2670     07CA  1803               	skipnc
  2671     07CB  0AB2               	incf	(sprintf@prec+1)^(0+128),f
  2672     07CC  30FF               	movlw	255
  2673     07CD  07B2               	addwf	(sprintf@prec+1)^(0+128),f
  2674     07CE                     l2998:
  2675                           
  2676                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  2677     07CE  0831               	movf	sprintf@prec^(0+128),w
  2678     07CF  0432               	iorwf	(sprintf@prec+1)^(0+128),w
  2679     07D0  1D03               	btfss	3,2
  2680     07D1  2FD3               	goto	u5181
  2681     07D2  2FD4               	goto	u5180
  2682     07D3                     u5181:
  2683     07D3  2FBF               	goto	l2992
  2684     07D4                     u5180:
  2685     07D4  2FE7               	goto	l3006
  2686     07D5                     l3000:
  2687                           
  2688                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2689     07D5  3003               	movlw	3
  2690     07D6  052F               	andwf	sprintf@flag^(0+128),w
  2691     07D7  00A5               	movwf	??_sprintf^(0+128)
  2692     07D8  3000               	movlw	0
  2693     07D9  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2694     07DA  00A6               	movwf	(??_sprintf+1)^(0+128)
  2695     07DB  0825               	movf	??_sprintf^(0+128),w
  2696     07DC  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2697     07DD  1903               	btfsc	3,2
  2698     07DE  2FE0               	goto	u5191
  2699     07DF  2FE1               	goto	u5190
  2700     07E0                     u5191:
  2701     07E0  2FE7               	goto	l3006
  2702     07E1                     u5190:
  2703     07E1                     l3002:
  2704                           
  2705                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2706     07E1  083D               	movf	sprintf@sp^(0+128),w
  2707     07E2  0084               	movwf	4
  2708     07E3  302D               	movlw	45
  2709     07E4  1383               	bcf	3,7	;select IRP bank0
  2710     07E5  0080               	movwf	0
  2711     07E6  2A6B               	goto	l2852
  2712     07E7                     l3006:
  2713                           
  2714                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2715     07E7  3001               	movlw	1
  2716     07E8  07A0               	addwf	sprintf@f^(0+128),f
  2717     07E9  30FF               	movlw	-1
  2718     07EA  0720               	addwf	sprintf@f^(0+128),w
  2719     07EB  0084               	movwf	4
  2720     07EC  160A  118A  200A  120A  118A  	fcall	stringdir
  2721     07F1  00C2               	movwf	sprintf@c^(0+128)
  2722     07F2  0842               	movf	sprintf@c^(0+128),w
  2723     07F3  1D03               	btfss	3,2
  2724     07F4  2FF6               	goto	u5201
  2725     07F5  2FF7               	goto	u5200
  2726     07F6                     u5201:
  2727     07F6  2A60               	goto	l2848
  2728     07F7                     u5200:
  2729     07F7                     l3008:
  2730                           
  2731                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2732     07F7  083D               	movf	sprintf@sp^(0+128),w
  2733     07F8  0084               	movwf	4
  2734     07F9  1383               	bcf	3,7	;select IRP bank0
  2735     07FA  0180               	clrf	0
  2736     07FB                     l232:
  2737     07FB  0008               	return
  2738     07FC                     __end_of_sprintf:
  2739                           
  2740                           	psect	text2
  2741     0CA1                     __ptext2:	
  2742 ;; *************** function _scale *****************
  2743 ;; Defined at:
  2744 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;  scl             1    wreg     char 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;  scl             1   48[BANK0 ] char 
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  4   30[BANK0 ] char 
  2751 ;; Registers used:
  2752 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2758 ;;      Params:         0       4       0       0       0
  2759 ;;      Locals:         0       5       0       0       0
  2760 ;;      Temps:          0      10       0       0       0
  2761 ;;      Totals:         0      19       0       0       0
  2762 ;;Total ram usage:       19 bytes
  2763 ;; Hardware stack levels used: 1
  2764 ;; Hardware stack levels required when called: 2
  2765 ;; This function calls:
  2766 ;;		___awdiv
  2767 ;;		___awmod
  2768 ;;		___flmul
  2769 ;; This function is called by:
  2770 ;;		_sprintf
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774     0CA1                     _scale:	
  2775                           ;psect for function _scale
  2776                           
  2777                           
  2778                           ;incstack = 0
  2779                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2780                           ;scale@scl stored from wreg
  2781     0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  2782     0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  2783     0CA3  00D0               	movwf	scale@scl
  2784     0CA4                     l2478:
  2785                           
  2786                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2787     0CA4  1FD0               	btfss	scale@scl,7
  2788     0CA5  2CA7               	goto	u3921
  2789     0CA6  2CA8               	goto	u3920
  2790     0CA7                     u3921:
  2791     0CA7  2E55               	goto	l2500
  2792     0CA8                     u3920:
  2793     0CA8                     l2480:
  2794                           
  2795                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2796     0CA8  09D0               	comf	scale@scl,f
  2797     0CA9  0AD0               	incf	scale@scl,f
  2798     0CAA                     l2482:
  2799                           
  2800                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2801     0CAA  0850               	movf	scale@scl,w
  2802     0CAB  3A80               	xorlw	128
  2803     0CAC  3E12               	addlw	-238
  2804     0CAD  1C03               	skipc
  2805     0CAE  2CB0               	goto	u3931
  2806     0CAF  2CB1               	goto	u3930
  2807     0CB0                     u3931:
  2808     0CB0  2D99               	goto	l2490
  2809     0CB1                     u3930:
  2810     0CB1                     l2484:
  2811                           
  2812                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2813     0CB1  300A               	movlw	10
  2814     0CB2  00F7               	movwf	___awdiv@divisor
  2815     0CB3  3000               	movlw	0
  2816     0CB4  00F8               	movwf	___awdiv@divisor+1
  2817     0CB5  0850               	movf	scale@scl,w
  2818     0CB6  00F2               	movwf	___awmod@dividend
  2819     0CB7  01F3               	clrf	___awmod@dividend+1
  2820     0CB8  1BF2               	btfsc	___awmod@dividend,7
  2821     0CB9  03F3               	decf	___awmod@dividend+1,f
  2822     0CBA  3064               	movlw	100
  2823     0CBB  00F0               	movwf	___awmod@divisor
  2824     0CBC  3000               	movlw	0
  2825     0CBD  00F1               	movwf	___awmod@divisor+1
  2826     0CBE  160A  118A  21DC  120A  158A  	fcall	___awmod
  2827     0CC3  0871               	movf	?___awmod+1,w
  2828     0CC4  00FA               	movwf	___awdiv@dividend+1
  2829     0CC5  0870               	movf	?___awmod,w
  2830     0CC6  00F9               	movwf	___awdiv@dividend
  2831     0CC7  160A  118A  2358  120A  158A  	fcall	___awdiv
  2832     0CCC  0877               	movf	?___awdiv,w
  2833     0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  2834     0CCE  1303               	bcf	3,6	;RP1=0, select bank0
  2835     0CCF  00C2               	movwf	??_scale
  2836     0CD0  3001               	movlw	1
  2837     0CD1                     u3945:
  2838     0CD1  1003               	clrc
  2839     0CD2  0DC2               	rlf	??_scale,f
  2840     0CD3  3EFF               	addlw	-1
  2841     0CD4  1D03               	skipz
  2842     0CD5  2CD1               	goto	u3945
  2843     0CD6  1003               	clrc
  2844     0CD7  0D42               	rlf	??_scale,w
  2845     0CD8  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2846     0CD9  0084               	movwf	4
  2847     0CDA  160A  118A  200A  120A  158A  	fcall	stringdir
  2848     0CDF  00C3               	movwf	??_scale+1
  2849     0CE0  160A  118A  200A  120A  158A  	fcall	stringdir
  2850     0CE5  00C4               	movwf	??_scale+2
  2851     0CE6  160A  118A  200A  120A  158A  	fcall	stringdir
  2852     0CEB  00C5               	movwf	??_scale+3
  2853     0CEC  160A  118A  200A  120A  158A  	fcall	stringdir
  2854     0CF1  00C6               	movwf	??_scale+4
  2855     0CF2  0846               	movf	??_scale+4,w
  2856     0CF3  00A7               	movwf	___flmul@b+3
  2857     0CF4  0845               	movf	??_scale+3,w
  2858     0CF5  00A6               	movwf	___flmul@b+2
  2859     0CF6  0844               	movf	??_scale+2,w
  2860     0CF7  00A5               	movwf	___flmul@b+1
  2861     0CF8  0843               	movf	??_scale+1,w
  2862     0CF9  00A4               	movwf	___flmul@b
  2863     0CFA  3064               	movlw	100
  2864     0CFB  00F7               	movwf	___awdiv@divisor
  2865     0CFC  3000               	movlw	0
  2866     0CFD  00F8               	movwf	___awdiv@divisor+1
  2867     0CFE  0850               	movf	scale@scl,w
  2868     0CFF  00F9               	movwf	___awdiv@dividend
  2869     0D00  01FA               	clrf	___awdiv@dividend+1
  2870     0D01  1BF9               	btfsc	___awdiv@dividend,7
  2871     0D02  03FA               	decf	___awdiv@dividend+1,f
  2872     0D03  160A  118A  2358  120A  158A  	fcall	___awdiv
  2873     0D08  0877               	movf	?___awdiv,w
  2874     0D09  1283               	bcf	3,5	;RP0=0, select bank0
  2875     0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  2876     0D0B  00C7               	movwf	??_scale+5
  2877     0D0C  3001               	movlw	1
  2878     0D0D                     u3955:
  2879     0D0D  1003               	clrc
  2880     0D0E  0DC7               	rlf	??_scale+5,f
  2881     0D0F  3EFF               	addlw	-1
  2882     0D10  1D03               	skipz
  2883     0D11  2D0D               	goto	u3955
  2884     0D12  1003               	clrc
  2885     0D13  0D47               	rlf	??_scale+5,w
  2886     0D14  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2887     0D15  0084               	movwf	4
  2888     0D16  160A  118A  200A  120A  158A  	fcall	stringdir
  2889     0D1B  00C8               	movwf	??_scale+6
  2890     0D1C  160A  118A  200A  120A  158A  	fcall	stringdir
  2891     0D21  00C9               	movwf	??_scale+7
  2892     0D22  160A  118A  200A  120A  158A  	fcall	stringdir
  2893     0D27  00CA               	movwf	??_scale+8
  2894     0D28  160A  118A  200A  120A  158A  	fcall	stringdir
  2895     0D2D  00CB               	movwf	??_scale+9
  2896     0D2E  084B               	movf	??_scale+9,w
  2897     0D2F  00AB               	movwf	___flmul@a+3
  2898     0D30  084A               	movf	??_scale+8,w
  2899     0D31  00AA               	movwf	___flmul@a+2
  2900     0D32  0849               	movf	??_scale+7,w
  2901     0D33  00A9               	movwf	___flmul@a+1
  2902     0D34  0848               	movf	??_scale+6,w
  2903     0D35  00A8               	movwf	___flmul@a
  2904     0D36  120A  158A  215C  120A  158A  	fcall	___flmul
  2905     0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  2906     0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  2907     0D3D  0827               	movf	?___flmul+3,w
  2908     0D3E  00CF               	movwf	_scale$769+3
  2909     0D3F  0826               	movf	?___flmul+2,w
  2910     0D40  00CE               	movwf	_scale$769+2
  2911     0D41  0825               	movf	?___flmul+1,w
  2912     0D42  00CD               	movwf	_scale$769+1
  2913     0D43  0824               	movf	?___flmul,w
  2914     0D44  00CC               	movwf	_scale$769
  2915                           
  2916                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2917     0D45  300A               	movlw	10
  2918     0D46  00F0               	movwf	___awmod@divisor
  2919     0D47  3000               	movlw	0
  2920     0D48  00F1               	movwf	___awmod@divisor+1
  2921     0D49  0850               	movf	scale@scl,w
  2922     0D4A  00F2               	movwf	___awmod@dividend
  2923     0D4B  01F3               	clrf	___awmod@dividend+1
  2924     0D4C  1BF2               	btfsc	___awmod@dividend,7
  2925     0D4D  03F3               	decf	___awmod@dividend+1,f
  2926     0D4E  160A  118A  21DC  120A  158A  	fcall	___awmod
  2927     0D53  0870               	movf	?___awmod,w
  2928     0D54  1283               	bcf	3,5	;RP0=0, select bank0
  2929     0D55  1303               	bcf	3,6	;RP1=0, select bank0
  2930     0D56  00C2               	movwf	??_scale
  2931     0D57  3001               	movlw	1
  2932     0D58                     u3965:
  2933     0D58  1003               	clrc
  2934     0D59  0DC2               	rlf	??_scale,f
  2935     0D5A  3EFF               	addlw	-1
  2936     0D5B  1D03               	skipz
  2937     0D5C  2D58               	goto	u3965
  2938     0D5D  1003               	clrc
  2939     0D5E  0D42               	rlf	??_scale,w
  2940     0D5F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2941     0D60  0084               	movwf	4
  2942     0D61  160A  118A  200A  120A  158A  	fcall	stringdir
  2943     0D66  00C3               	movwf	??_scale+1
  2944     0D67  160A  118A  200A  120A  158A  	fcall	stringdir
  2945     0D6C  00C4               	movwf	??_scale+2
  2946     0D6D  160A  118A  200A  120A  158A  	fcall	stringdir
  2947     0D72  00C5               	movwf	??_scale+3
  2948     0D73  160A  118A  200A  120A  158A  	fcall	stringdir
  2949     0D78  00C6               	movwf	??_scale+4
  2950     0D79  0846               	movf	??_scale+4,w
  2951     0D7A  00A7               	movwf	___flmul@b+3
  2952     0D7B  0845               	movf	??_scale+3,w
  2953     0D7C  00A6               	movwf	___flmul@b+2
  2954     0D7D  0844               	movf	??_scale+2,w
  2955     0D7E  00A5               	movwf	___flmul@b+1
  2956     0D7F  0843               	movf	??_scale+1,w
  2957     0D80  00A4               	movwf	___flmul@b
  2958     0D81  084F               	movf	_scale$769+3,w
  2959     0D82  00AB               	movwf	___flmul@a+3
  2960     0D83  084E               	movf	_scale$769+2,w
  2961     0D84  00AA               	movwf	___flmul@a+2
  2962     0D85  084D               	movf	_scale$769+1,w
  2963     0D86  00A9               	movwf	___flmul@a+1
  2964     0D87  084C               	movf	_scale$769,w
  2965     0D88  00A8               	movwf	___flmul@a
  2966     0D89  120A  158A  215C  120A  158A  	fcall	___flmul
  2967     0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  2968     0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  2969     0D90  0827               	movf	?___flmul+3,w
  2970     0D91  00C1               	movwf	?_scale+3
  2971     0D92  0826               	movf	?___flmul+2,w
  2972     0D93  00C0               	movwf	?_scale+2
  2973     0D94  0825               	movf	?___flmul+1,w
  2974     0D95  00BF               	movwf	?_scale+1
  2975     0D96  0824               	movf	?___flmul,w
  2976     0D97  00BE               	movwf	?_scale
  2977     0D98  2FFF               	goto	l176
  2978     0D99                     l2490:
  2979     0D99  0850               	movf	scale@scl,w
  2980     0D9A  3A80               	xorlw	128
  2981     0D9B  3E75               	addlw	-139
  2982     0D9C  1C03               	skipc
  2983     0D9D  2D9F               	goto	u3971
  2984     0D9E  2DA0               	goto	u3970
  2985     0D9F                     u3971:
  2986     0D9F  2E28               	goto	l2496
  2987     0DA0                     u3970:
  2988     0DA0                     l2492:
  2989                           
  2990                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2991     0DA0  300A               	movlw	10
  2992     0DA1  00F0               	movwf	___awmod@divisor
  2993     0DA2  3000               	movlw	0
  2994     0DA3  00F1               	movwf	___awmod@divisor+1
  2995     0DA4  0850               	movf	scale@scl,w
  2996     0DA5  00F2               	movwf	___awmod@dividend
  2997     0DA6  01F3               	clrf	___awmod@dividend+1
  2998     0DA7  1BF2               	btfsc	___awmod@dividend,7
  2999     0DA8  03F3               	decf	___awmod@dividend+1,f
  3000     0DA9  160A  118A  21DC  120A  158A  	fcall	___awmod
  3001     0DAE  0870               	movf	?___awmod,w
  3002     0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  3003     0DB0  1303               	bcf	3,6	;RP1=0, select bank0
  3004     0DB1  00C2               	movwf	??_scale
  3005     0DB2  3001               	movlw	1
  3006     0DB3                     u3985:
  3007     0DB3  1003               	clrc
  3008     0DB4  0DC2               	rlf	??_scale,f
  3009     0DB5  3EFF               	addlw	-1
  3010     0DB6  1D03               	skipz
  3011     0DB7  2DB3               	goto	u3985
  3012     0DB8  1003               	clrc
  3013     0DB9  0D42               	rlf	??_scale,w
  3014     0DBA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3015     0DBB  0084               	movwf	4
  3016     0DBC  160A  118A  200A  120A  158A  	fcall	stringdir
  3017     0DC1  00C3               	movwf	??_scale+1
  3018     0DC2  160A  118A  200A  120A  158A  	fcall	stringdir
  3019     0DC7  00C4               	movwf	??_scale+2
  3020     0DC8  160A  118A  200A  120A  158A  	fcall	stringdir
  3021     0DCD  00C5               	movwf	??_scale+3
  3022     0DCE  160A  118A  200A  120A  158A  	fcall	stringdir
  3023     0DD3  00C6               	movwf	??_scale+4
  3024     0DD4  0846               	movf	??_scale+4,w
  3025     0DD5  00A7               	movwf	___flmul@b+3
  3026     0DD6  0845               	movf	??_scale+3,w
  3027     0DD7  00A6               	movwf	___flmul@b+2
  3028     0DD8  0844               	movf	??_scale+2,w
  3029     0DD9  00A5               	movwf	___flmul@b+1
  3030     0DDA  0843               	movf	??_scale+1,w
  3031     0DDB  00A4               	movwf	___flmul@b
  3032     0DDC  300A               	movlw	10
  3033     0DDD  00F7               	movwf	___awdiv@divisor
  3034     0DDE  3000               	movlw	0
  3035     0DDF  00F8               	movwf	___awdiv@divisor+1
  3036     0DE0  0850               	movf	scale@scl,w
  3037     0DE1  00F9               	movwf	___awdiv@dividend
  3038     0DE2  01FA               	clrf	___awdiv@dividend+1
  3039     0DE3  1BF9               	btfsc	___awdiv@dividend,7
  3040     0DE4  03FA               	decf	___awdiv@dividend+1,f
  3041     0DE5  160A  118A  2358  120A  158A  	fcall	___awdiv
  3042     0DEA  0877               	movf	?___awdiv,w
  3043     0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  3044     0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  3045     0DED  00C7               	movwf	??_scale+5
  3046     0DEE  3001               	movlw	1
  3047     0DEF                     u3995:
  3048     0DEF  1003               	clrc
  3049     0DF0  0DC7               	rlf	??_scale+5,f
  3050     0DF1  3EFF               	addlw	-1
  3051     0DF2  1D03               	skipz
  3052     0DF3  2DEF               	goto	u3995
  3053     0DF4  1003               	clrc
  3054     0DF5  0D47               	rlf	??_scale+5,w
  3055     0DF6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3056     0DF7  0084               	movwf	4
  3057     0DF8  160A  118A  200A  120A  158A  	fcall	stringdir
  3058     0DFD  00C8               	movwf	??_scale+6
  3059     0DFE  160A  118A  200A  120A  158A  	fcall	stringdir
  3060     0E03  00C9               	movwf	??_scale+7
  3061     0E04  160A  118A  200A  120A  158A  	fcall	stringdir
  3062     0E09  00CA               	movwf	??_scale+8
  3063     0E0A  160A  118A  200A  120A  158A  	fcall	stringdir
  3064     0E0F  00CB               	movwf	??_scale+9
  3065     0E10  084B               	movf	??_scale+9,w
  3066     0E11  00AB               	movwf	___flmul@a+3
  3067     0E12  084A               	movf	??_scale+8,w
  3068     0E13  00AA               	movwf	___flmul@a+2
  3069     0E14  0849               	movf	??_scale+7,w
  3070     0E15  00A9               	movwf	___flmul@a+1
  3071     0E16  0848               	movf	??_scale+6,w
  3072     0E17  00A8               	movwf	___flmul@a
  3073     0E18  120A  158A  215C  120A  158A  	fcall	___flmul
  3074     0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  3075     0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  3076     0E1F  0827               	movf	?___flmul+3,w
  3077     0E20  00C1               	movwf	?_scale+3
  3078     0E21  0826               	movf	?___flmul+2,w
  3079     0E22  00C0               	movwf	?_scale+2
  3080     0E23  0825               	movf	?___flmul+1,w
  3081     0E24  00BF               	movwf	?_scale+1
  3082     0E25  0824               	movf	?___flmul,w
  3083     0E26  00BE               	movwf	?_scale
  3084     0E27  2FFF               	goto	l176
  3085     0E28                     l2496:
  3086                           
  3087                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3088     0E28  0850               	movf	scale@scl,w
  3089     0E29  00C2               	movwf	??_scale
  3090     0E2A  3001               	movlw	1
  3091     0E2B                     u4005:
  3092     0E2B  1003               	clrc
  3093     0E2C  0DC2               	rlf	??_scale,f
  3094     0E2D  3EFF               	addlw	-1
  3095     0E2E  1D03               	skipz
  3096     0E2F  2E2B               	goto	u4005
  3097     0E30  1003               	clrc
  3098     0E31  0D42               	rlf	??_scale,w
  3099     0E32  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3100     0E33  0084               	movwf	4
  3101     0E34  160A  118A  200A  120A  158A  	fcall	stringdir
  3102     0E39  00C3               	movwf	??_scale+1
  3103     0E3A  160A  118A  200A  120A  158A  	fcall	stringdir
  3104     0E3F  00C4               	movwf	??_scale+2
  3105     0E40  160A  118A  200A  120A  158A  	fcall	stringdir
  3106     0E45  00C5               	movwf	??_scale+3
  3107     0E46  160A  118A  200A  120A  158A  	fcall	stringdir
  3108     0E4B  00C6               	movwf	??_scale+4
  3109     0E4C  0846               	movf	??_scale+4,w
  3110     0E4D  00C1               	movwf	?_scale+3
  3111     0E4E  0845               	movf	??_scale+3,w
  3112     0E4F  00C0               	movwf	?_scale+2
  3113     0E50  0844               	movf	??_scale+2,w
  3114     0E51  00BF               	movwf	?_scale+1
  3115     0E52  0843               	movf	??_scale+1,w
  3116     0E53  00BE               	movwf	?_scale
  3117     0E54  2FFF               	goto	l176
  3118     0E55                     l2500:
  3119                           
  3120                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3121     0E55  0850               	movf	scale@scl,w
  3122     0E56  3A80               	xorlw	128
  3123     0E57  3E12               	addlw	-238
  3124     0E58  1C03               	skipc
  3125     0E59  2E5B               	goto	u4011
  3126     0E5A  2E5C               	goto	u4010
  3127     0E5B                     u4011:
  3128     0E5B  2F44               	goto	l2508
  3129     0E5C                     u4010:
  3130     0E5C                     l2502:
  3131                           
  3132                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3133     0E5C  300A               	movlw	10
  3134     0E5D  00F7               	movwf	___awdiv@divisor
  3135     0E5E  3000               	movlw	0
  3136     0E5F  00F8               	movwf	___awdiv@divisor+1
  3137     0E60  0850               	movf	scale@scl,w
  3138     0E61  00F2               	movwf	___awmod@dividend
  3139     0E62  01F3               	clrf	___awmod@dividend+1
  3140     0E63  1BF2               	btfsc	___awmod@dividend,7
  3141     0E64  03F3               	decf	___awmod@dividend+1,f
  3142     0E65  3064               	movlw	100
  3143     0E66  00F0               	movwf	___awmod@divisor
  3144     0E67  3000               	movlw	0
  3145     0E68  00F1               	movwf	___awmod@divisor+1
  3146     0E69  160A  118A  21DC  120A  158A  	fcall	___awmod
  3147     0E6E  0871               	movf	?___awmod+1,w
  3148     0E6F  00FA               	movwf	___awdiv@dividend+1
  3149     0E70  0870               	movf	?___awmod,w
  3150     0E71  00F9               	movwf	___awdiv@dividend
  3151     0E72  160A  118A  2358  120A  158A  	fcall	___awdiv
  3152     0E77  0877               	movf	?___awdiv,w
  3153     0E78  1283               	bcf	3,5	;RP0=0, select bank0
  3154     0E79  1303               	bcf	3,6	;RP1=0, select bank0
  3155     0E7A  00C2               	movwf	??_scale
  3156     0E7B  3001               	movlw	1
  3157     0E7C                     u4025:
  3158     0E7C  1003               	clrc
  3159     0E7D  0DC2               	rlf	??_scale,f
  3160     0E7E  3EFF               	addlw	-1
  3161     0E7F  1D03               	skipz
  3162     0E80  2E7C               	goto	u4025
  3163     0E81  1003               	clrc
  3164     0E82  0D42               	rlf	??_scale,w
  3165     0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3166     0E84  0084               	movwf	4
  3167     0E85  160A  118A  200A  120A  158A  	fcall	stringdir
  3168     0E8A  00C3               	movwf	??_scale+1
  3169     0E8B  160A  118A  200A  120A  158A  	fcall	stringdir
  3170     0E90  00C4               	movwf	??_scale+2
  3171     0E91  160A  118A  200A  120A  158A  	fcall	stringdir
  3172     0E96  00C5               	movwf	??_scale+3
  3173     0E97  160A  118A  200A  120A  158A  	fcall	stringdir
  3174     0E9C  00C6               	movwf	??_scale+4
  3175     0E9D  0846               	movf	??_scale+4,w
  3176     0E9E  00A7               	movwf	___flmul@b+3
  3177     0E9F  0845               	movf	??_scale+3,w
  3178     0EA0  00A6               	movwf	___flmul@b+2
  3179     0EA1  0844               	movf	??_scale+2,w
  3180     0EA2  00A5               	movwf	___flmul@b+1
  3181     0EA3  0843               	movf	??_scale+1,w
  3182     0EA4  00A4               	movwf	___flmul@b
  3183     0EA5  3064               	movlw	100
  3184     0EA6  00F7               	movwf	___awdiv@divisor
  3185     0EA7  3000               	movlw	0
  3186     0EA8  00F8               	movwf	___awdiv@divisor+1
  3187     0EA9  0850               	movf	scale@scl,w
  3188     0EAA  00F9               	movwf	___awdiv@dividend
  3189     0EAB  01FA               	clrf	___awdiv@dividend+1
  3190     0EAC  1BF9               	btfsc	___awdiv@dividend,7
  3191     0EAD  03FA               	decf	___awdiv@dividend+1,f
  3192     0EAE  160A  118A  2358  120A  158A  	fcall	___awdiv
  3193     0EB3  0877               	movf	?___awdiv,w
  3194     0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  3195     0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  3196     0EB6  00C7               	movwf	??_scale+5
  3197     0EB7  3001               	movlw	1
  3198     0EB8                     u4035:
  3199     0EB8  1003               	clrc
  3200     0EB9  0DC7               	rlf	??_scale+5,f
  3201     0EBA  3EFF               	addlw	-1
  3202     0EBB  1D03               	skipz
  3203     0EBC  2EB8               	goto	u4035
  3204     0EBD  1003               	clrc
  3205     0EBE  0D47               	rlf	??_scale+5,w
  3206     0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3207     0EC0  0084               	movwf	4
  3208     0EC1  160A  118A  200A  120A  158A  	fcall	stringdir
  3209     0EC6  00C8               	movwf	??_scale+6
  3210     0EC7  160A  118A  200A  120A  158A  	fcall	stringdir
  3211     0ECC  00C9               	movwf	??_scale+7
  3212     0ECD  160A  118A  200A  120A  158A  	fcall	stringdir
  3213     0ED2  00CA               	movwf	??_scale+8
  3214     0ED3  160A  118A  200A  120A  158A  	fcall	stringdir
  3215     0ED8  00CB               	movwf	??_scale+9
  3216     0ED9  084B               	movf	??_scale+9,w
  3217     0EDA  00AB               	movwf	___flmul@a+3
  3218     0EDB  084A               	movf	??_scale+8,w
  3219     0EDC  00AA               	movwf	___flmul@a+2
  3220     0EDD  0849               	movf	??_scale+7,w
  3221     0EDE  00A9               	movwf	___flmul@a+1
  3222     0EDF  0848               	movf	??_scale+6,w
  3223     0EE0  00A8               	movwf	___flmul@a
  3224     0EE1  120A  158A  215C  120A  158A  	fcall	___flmul
  3225     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3226     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3227     0EE8  0827               	movf	?___flmul+3,w
  3228     0EE9  00CF               	movwf	_scale$769+3
  3229     0EEA  0826               	movf	?___flmul+2,w
  3230     0EEB  00CE               	movwf	_scale$769+2
  3231     0EEC  0825               	movf	?___flmul+1,w
  3232     0EED  00CD               	movwf	_scale$769+1
  3233     0EEE  0824               	movf	?___flmul,w
  3234     0EEF  00CC               	movwf	_scale$769
  3235                           
  3236                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3237     0EF0  300A               	movlw	10
  3238     0EF1  00F0               	movwf	___awmod@divisor
  3239     0EF2  3000               	movlw	0
  3240     0EF3  00F1               	movwf	___awmod@divisor+1
  3241     0EF4  0850               	movf	scale@scl,w
  3242     0EF5  00F2               	movwf	___awmod@dividend
  3243     0EF6  01F3               	clrf	___awmod@dividend+1
  3244     0EF7  1BF2               	btfsc	___awmod@dividend,7
  3245     0EF8  03F3               	decf	___awmod@dividend+1,f
  3246     0EF9  160A  118A  21DC  120A  158A  	fcall	___awmod
  3247     0EFE  0870               	movf	?___awmod,w
  3248     0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3249     0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3250     0F01  00C2               	movwf	??_scale
  3251     0F02  3001               	movlw	1
  3252     0F03                     u4045:
  3253     0F03  1003               	clrc
  3254     0F04  0DC2               	rlf	??_scale,f
  3255     0F05  3EFF               	addlw	-1
  3256     0F06  1D03               	skipz
  3257     0F07  2F03               	goto	u4045
  3258     0F08  1003               	clrc
  3259     0F09  0D42               	rlf	??_scale,w
  3260     0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3261     0F0B  0084               	movwf	4
  3262     0F0C  160A  118A  200A  120A  158A  	fcall	stringdir
  3263     0F11  00C3               	movwf	??_scale+1
  3264     0F12  160A  118A  200A  120A  158A  	fcall	stringdir
  3265     0F17  00C4               	movwf	??_scale+2
  3266     0F18  160A  118A  200A  120A  158A  	fcall	stringdir
  3267     0F1D  00C5               	movwf	??_scale+3
  3268     0F1E  160A  118A  200A  120A  158A  	fcall	stringdir
  3269     0F23  00C6               	movwf	??_scale+4
  3270     0F24  0846               	movf	??_scale+4,w
  3271     0F25  00A7               	movwf	___flmul@b+3
  3272     0F26  0845               	movf	??_scale+3,w
  3273     0F27  00A6               	movwf	___flmul@b+2
  3274     0F28  0844               	movf	??_scale+2,w
  3275     0F29  00A5               	movwf	___flmul@b+1
  3276     0F2A  0843               	movf	??_scale+1,w
  3277     0F2B  00A4               	movwf	___flmul@b
  3278     0F2C  084F               	movf	_scale$769+3,w
  3279     0F2D  00AB               	movwf	___flmul@a+3
  3280     0F2E  084E               	movf	_scale$769+2,w
  3281     0F2F  00AA               	movwf	___flmul@a+2
  3282     0F30  084D               	movf	_scale$769+1,w
  3283     0F31  00A9               	movwf	___flmul@a+1
  3284     0F32  084C               	movf	_scale$769,w
  3285     0F33  00A8               	movwf	___flmul@a
  3286     0F34  120A  158A  215C  120A  158A  	fcall	___flmul
  3287     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3288     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3289     0F3B  0827               	movf	?___flmul+3,w
  3290     0F3C  00C1               	movwf	?_scale+3
  3291     0F3D  0826               	movf	?___flmul+2,w
  3292     0F3E  00C0               	movwf	?_scale+2
  3293     0F3F  0825               	movf	?___flmul+1,w
  3294     0F40  00BF               	movwf	?_scale+1
  3295     0F41  0824               	movf	?___flmul,w
  3296     0F42  00BE               	movwf	?_scale
  3297     0F43  2FFF               	goto	l176
  3298     0F44                     l2508:
  3299     0F44  0850               	movf	scale@scl,w
  3300     0F45  3A80               	xorlw	128
  3301     0F46  3E75               	addlw	-139
  3302     0F47  1C03               	skipc
  3303     0F48  2F4A               	goto	u4051
  3304     0F49  2F4B               	goto	u4050
  3305     0F4A                     u4051:
  3306     0F4A  2FD3               	goto	l2514
  3307     0F4B                     u4050:
  3308     0F4B                     l2510:
  3309                           
  3310                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3311     0F4B  300A               	movlw	10
  3312     0F4C  00F0               	movwf	___awmod@divisor
  3313     0F4D  3000               	movlw	0
  3314     0F4E  00F1               	movwf	___awmod@divisor+1
  3315     0F4F  0850               	movf	scale@scl,w
  3316     0F50  00F2               	movwf	___awmod@dividend
  3317     0F51  01F3               	clrf	___awmod@dividend+1
  3318     0F52  1BF2               	btfsc	___awmod@dividend,7
  3319     0F53  03F3               	decf	___awmod@dividend+1,f
  3320     0F54  160A  118A  21DC  120A  158A  	fcall	___awmod
  3321     0F59  0870               	movf	?___awmod,w
  3322     0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3323     0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3324     0F5C  00C2               	movwf	??_scale
  3325     0F5D  3001               	movlw	1
  3326     0F5E                     u4065:
  3327     0F5E  1003               	clrc
  3328     0F5F  0DC2               	rlf	??_scale,f
  3329     0F60  3EFF               	addlw	-1
  3330     0F61  1D03               	skipz
  3331     0F62  2F5E               	goto	u4065
  3332     0F63  1003               	clrc
  3333     0F64  0D42               	rlf	??_scale,w
  3334     0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3335     0F66  0084               	movwf	4
  3336     0F67  160A  118A  200A  120A  158A  	fcall	stringdir
  3337     0F6C  00C3               	movwf	??_scale+1
  3338     0F6D  160A  118A  200A  120A  158A  	fcall	stringdir
  3339     0F72  00C4               	movwf	??_scale+2
  3340     0F73  160A  118A  200A  120A  158A  	fcall	stringdir
  3341     0F78  00C5               	movwf	??_scale+3
  3342     0F79  160A  118A  200A  120A  158A  	fcall	stringdir
  3343     0F7E  00C6               	movwf	??_scale+4
  3344     0F7F  0846               	movf	??_scale+4,w
  3345     0F80  00A7               	movwf	___flmul@b+3
  3346     0F81  0845               	movf	??_scale+3,w
  3347     0F82  00A6               	movwf	___flmul@b+2
  3348     0F83  0844               	movf	??_scale+2,w
  3349     0F84  00A5               	movwf	___flmul@b+1
  3350     0F85  0843               	movf	??_scale+1,w
  3351     0F86  00A4               	movwf	___flmul@b
  3352     0F87  300A               	movlw	10
  3353     0F88  00F7               	movwf	___awdiv@divisor
  3354     0F89  3000               	movlw	0
  3355     0F8A  00F8               	movwf	___awdiv@divisor+1
  3356     0F8B  0850               	movf	scale@scl,w
  3357     0F8C  00F9               	movwf	___awdiv@dividend
  3358     0F8D  01FA               	clrf	___awdiv@dividend+1
  3359     0F8E  1BF9               	btfsc	___awdiv@dividend,7
  3360     0F8F  03FA               	decf	___awdiv@dividend+1,f
  3361     0F90  160A  118A  2358  120A  158A  	fcall	___awdiv
  3362     0F95  0877               	movf	?___awdiv,w
  3363     0F96  1283               	bcf	3,5	;RP0=0, select bank0
  3364     0F97  1303               	bcf	3,6	;RP1=0, select bank0
  3365     0F98  00C7               	movwf	??_scale+5
  3366     0F99  3001               	movlw	1
  3367     0F9A                     u4075:
  3368     0F9A  1003               	clrc
  3369     0F9B  0DC7               	rlf	??_scale+5,f
  3370     0F9C  3EFF               	addlw	-1
  3371     0F9D  1D03               	skipz
  3372     0F9E  2F9A               	goto	u4075
  3373     0F9F  1003               	clrc
  3374     0FA0  0D47               	rlf	??_scale+5,w
  3375     0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3376     0FA2  0084               	movwf	4
  3377     0FA3  160A  118A  200A  120A  158A  	fcall	stringdir
  3378     0FA8  00C8               	movwf	??_scale+6
  3379     0FA9  160A  118A  200A  120A  158A  	fcall	stringdir
  3380     0FAE  00C9               	movwf	??_scale+7
  3381     0FAF  160A  118A  200A  120A  158A  	fcall	stringdir
  3382     0FB4  00CA               	movwf	??_scale+8
  3383     0FB5  160A  118A  200A  120A  158A  	fcall	stringdir
  3384     0FBA  00CB               	movwf	??_scale+9
  3385     0FBB  084B               	movf	??_scale+9,w
  3386     0FBC  00AB               	movwf	___flmul@a+3
  3387     0FBD  084A               	movf	??_scale+8,w
  3388     0FBE  00AA               	movwf	___flmul@a+2
  3389     0FBF  0849               	movf	??_scale+7,w
  3390     0FC0  00A9               	movwf	___flmul@a+1
  3391     0FC1  0848               	movf	??_scale+6,w
  3392     0FC2  00A8               	movwf	___flmul@a
  3393     0FC3  120A  158A  215C  120A  158A  	fcall	___flmul
  3394     0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3395     0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3396     0FCA  0827               	movf	?___flmul+3,w
  3397     0FCB  00C1               	movwf	?_scale+3
  3398     0FCC  0826               	movf	?___flmul+2,w
  3399     0FCD  00C0               	movwf	?_scale+2
  3400     0FCE  0825               	movf	?___flmul+1,w
  3401     0FCF  00BF               	movwf	?_scale+1
  3402     0FD0  0824               	movf	?___flmul,w
  3403     0FD1  00BE               	movwf	?_scale
  3404     0FD2  2FFF               	goto	l176
  3405     0FD3                     l2514:
  3406                           
  3407                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3408     0FD3  0850               	movf	scale@scl,w
  3409     0FD4  00C2               	movwf	??_scale
  3410     0FD5  3001               	movlw	1
  3411     0FD6                     u4085:
  3412     0FD6  1003               	clrc
  3413     0FD7  0DC2               	rlf	??_scale,f
  3414     0FD8  3EFF               	addlw	-1
  3415     0FD9  1D03               	skipz
  3416     0FDA  2FD6               	goto	u4085
  3417     0FDB  1003               	clrc
  3418     0FDC  0D42               	rlf	??_scale,w
  3419     0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3420     0FDE  0084               	movwf	4
  3421     0FDF  160A  118A  200A  120A  158A  	fcall	stringdir
  3422     0FE4  00C3               	movwf	??_scale+1
  3423     0FE5  160A  118A  200A  120A  158A  	fcall	stringdir
  3424     0FEA  00C4               	movwf	??_scale+2
  3425     0FEB  160A  118A  200A  120A  158A  	fcall	stringdir
  3426     0FF0  00C5               	movwf	??_scale+3
  3427     0FF1  160A  118A  200A  120A  158A  	fcall	stringdir
  3428     0FF6  00C6               	movwf	??_scale+4
  3429     0FF7  0846               	movf	??_scale+4,w
  3430     0FF8  00C1               	movwf	?_scale+3
  3431     0FF9  0845               	movf	??_scale+3,w
  3432     0FFA  00C0               	movwf	?_scale+2
  3433     0FFB  0844               	movf	??_scale+2,w
  3434     0FFC  00BF               	movwf	?_scale+1
  3435     0FFD  0843               	movf	??_scale+1,w
  3436     0FFE  00BE               	movwf	?_scale
  3437     0FFF                     l176:
  3438     0FFF  0008               	return
  3439     1000                     __end_of_scale:
  3440                           
  3441                           	psect	text3
  3442     11DC                     __ptext3:	
  3443 ;; *************** function ___awmod *****************
  3444 ;; Defined at:
  3445 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;  divisor         2    0[COMMON] int 
  3448 ;;  dividend        2    2[COMMON] int 
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;  sign            1    6[COMMON] unsigned char 
  3451 ;;  counter         1    5[COMMON] unsigned char 
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  2    0[COMMON] int 
  3454 ;; Registers used:
  3455 ;;		wreg, status,2, status,0
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3461 ;;      Params:         4       0       0       0       0
  3462 ;;      Locals:         2       0       0       0       0
  3463 ;;      Temps:          1       0       0       0       0
  3464 ;;      Totals:         7       0       0       0       0
  3465 ;;Total ram usage:        7 bytes
  3466 ;; Hardware stack levels used: 1
  3467 ;; This function calls:
  3468 ;;		Nothing
  3469 ;; This function is called by:
  3470 ;;		_scale
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474     11DC                     ___awmod:	
  3475                           ;psect for function ___awmod
  3476                           
  3477     11DC                     l2010:	
  3478                           ;incstack = 0
  3479                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3480                           
  3481     11DC  01F6               	clrf	___awmod@sign
  3482     11DD                     l2012:
  3483     11DD  1FF3               	btfss	___awmod@dividend+1,7
  3484     11DE  29E0               	goto	u2781
  3485     11DF  29E1               	goto	u2780
  3486     11E0                     u2781:
  3487     11E0  29E8               	goto	l2018
  3488     11E1                     u2780:
  3489     11E1                     l2014:
  3490     11E1  09F2               	comf	___awmod@dividend,f
  3491     11E2  09F3               	comf	___awmod@dividend+1,f
  3492     11E3  0AF2               	incf	___awmod@dividend,f
  3493     11E4  1903               	skipnz
  3494     11E5  0AF3               	incf	___awmod@dividend+1,f
  3495     11E6                     l2016:
  3496     11E6  01F6               	clrf	___awmod@sign
  3497     11E7  0AF6               	incf	___awmod@sign,f
  3498     11E8                     l2018:
  3499     11E8  1FF1               	btfss	___awmod@divisor+1,7
  3500     11E9  29EB               	goto	u2791
  3501     11EA  29EC               	goto	u2790
  3502     11EB                     u2791:
  3503     11EB  29F1               	goto	l2022
  3504     11EC                     u2790:
  3505     11EC                     l2020:
  3506     11EC  09F0               	comf	___awmod@divisor,f
  3507     11ED  09F1               	comf	___awmod@divisor+1,f
  3508     11EE  0AF0               	incf	___awmod@divisor,f
  3509     11EF  1903               	skipnz
  3510     11F0  0AF1               	incf	___awmod@divisor+1,f
  3511     11F1                     l2022:
  3512     11F1  0870               	movf	___awmod@divisor,w
  3513     11F2  0471               	iorwf	___awmod@divisor+1,w
  3514     11F3  1903               	btfsc	3,2
  3515     11F4  29F6               	goto	u2801
  3516     11F5  29F7               	goto	u2800
  3517     11F6                     u2801:
  3518     11F6  2A26               	goto	l2040
  3519     11F7                     u2800:
  3520     11F7                     l2024:
  3521     11F7  01F5               	clrf	___awmod@counter
  3522     11F8  0AF5               	incf	___awmod@counter,f
  3523     11F9  2A05               	goto	l2030
  3524     11FA                     l2026:
  3525     11FA  3001               	movlw	1
  3526     11FB                     u2815:
  3527     11FB  1003               	clrc
  3528     11FC  0DF0               	rlf	___awmod@divisor,f
  3529     11FD  0DF1               	rlf	___awmod@divisor+1,f
  3530     11FE  3EFF               	addlw	-1
  3531     11FF  1D03               	skipz
  3532     1200  29FB               	goto	u2815
  3533     1201                     l2028:
  3534     1201  3001               	movlw	1
  3535     1202  00F4               	movwf	??___awmod
  3536     1203  0874               	movf	??___awmod,w
  3537     1204  07F5               	addwf	___awmod@counter,f
  3538     1205                     l2030:
  3539     1205  1FF1               	btfss	___awmod@divisor+1,7
  3540     1206  2A08               	goto	u2821
  3541     1207  2A09               	goto	u2820
  3542     1208                     u2821:
  3543     1208  29FA               	goto	l2026
  3544     1209                     u2820:
  3545     1209                     l2032:
  3546     1209  0871               	movf	___awmod@divisor+1,w
  3547     120A  0273               	subwf	___awmod@dividend+1,w
  3548     120B  1D03               	skipz
  3549     120C  2A0F               	goto	u2835
  3550     120D  0870               	movf	___awmod@divisor,w
  3551     120E  0272               	subwf	___awmod@dividend,w
  3552     120F                     u2835:
  3553     120F  1C03               	skipc
  3554     1210  2A12               	goto	u2831
  3555     1211  2A13               	goto	u2830
  3556     1212                     u2831:
  3557     1212  2A19               	goto	l2036
  3558     1213                     u2830:
  3559     1213                     l2034:
  3560     1213  0870               	movf	___awmod@divisor,w
  3561     1214  02F2               	subwf	___awmod@dividend,f
  3562     1215  0871               	movf	___awmod@divisor+1,w
  3563     1216  1C03               	skipc
  3564     1217  03F3               	decf	___awmod@dividend+1,f
  3565     1218  02F3               	subwf	___awmod@dividend+1,f
  3566     1219                     l2036:
  3567     1219  3001               	movlw	1
  3568     121A                     u2845:
  3569     121A  1003               	clrc
  3570     121B  0CF1               	rrf	___awmod@divisor+1,f
  3571     121C  0CF0               	rrf	___awmod@divisor,f
  3572     121D  3EFF               	addlw	-1
  3573     121E  1D03               	skipz
  3574     121F  2A1A               	goto	u2845
  3575     1220                     l2038:
  3576     1220  3001               	movlw	1
  3577     1221  02F5               	subwf	___awmod@counter,f
  3578     1222  1D03               	btfss	3,2
  3579     1223  2A25               	goto	u2851
  3580     1224  2A26               	goto	u2850
  3581     1225                     u2851:
  3582     1225  2A09               	goto	l2032
  3583     1226                     u2850:
  3584     1226                     l2040:
  3585     1226  0876               	movf	___awmod@sign,w
  3586     1227  1903               	btfsc	3,2
  3587     1228  2A2A               	goto	u2861
  3588     1229  2A2B               	goto	u2860
  3589     122A                     u2861:
  3590     122A  2A30               	goto	l2044
  3591     122B                     u2860:
  3592     122B                     l2042:
  3593     122B  09F2               	comf	___awmod@dividend,f
  3594     122C  09F3               	comf	___awmod@dividend+1,f
  3595     122D  0AF2               	incf	___awmod@dividend,f
  3596     122E  1903               	skipnz
  3597     122F  0AF3               	incf	___awmod@dividend+1,f
  3598     1230                     l2044:
  3599     1230  0873               	movf	___awmod@dividend+1,w
  3600     1231  00F1               	movwf	?___awmod+1
  3601     1232  0872               	movf	___awmod@dividend,w
  3602     1233  00F0               	movwf	?___awmod
  3603     1234                     l402:
  3604     1234  0008               	return
  3605     1235                     __end_of___awmod:
  3606                           
  3607                           	psect	text4
  3608     1358                     __ptext4:	
  3609 ;; *************** function ___awdiv *****************
  3610 ;; Defined at:
  3611 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;  divisor         2    7[COMMON] int 
  3614 ;;  dividend        2    9[COMMON] int 
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;  quotient        2    2[BANK0 ] int 
  3617 ;;  sign            1    1[BANK0 ] unsigned char 
  3618 ;;  counter         1    0[BANK0 ] unsigned char 
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  2    7[COMMON] int 
  3621 ;; Registers used:
  3622 ;;		wreg, status,2, status,0
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 0/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3628 ;;      Params:         4       0       0       0       0
  3629 ;;      Locals:         0       4       0       0       0
  3630 ;;      Temps:          1       0       0       0       0
  3631 ;;      Totals:         5       4       0       0       0
  3632 ;;Total ram usage:        9 bytes
  3633 ;; Hardware stack levels used: 1
  3634 ;; This function calls:
  3635 ;;		Nothing
  3636 ;; This function is called by:
  3637 ;;		_scale
  3638 ;;		_sprintf
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642     1358                     ___awdiv:	
  3643                           ;psect for function ___awdiv
  3644                           
  3645     1358                     l1966:	
  3646                           ;incstack = 0
  3647                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3648                           
  3649     1358  1283               	bcf	3,5	;RP0=0, select bank0
  3650     1359  1303               	bcf	3,6	;RP1=0, select bank0
  3651     135A  01A1               	clrf	___awdiv@sign
  3652     135B                     l1968:
  3653     135B  1FF8               	btfss	___awdiv@divisor+1,7
  3654     135C  2B5E               	goto	u2681
  3655     135D  2B5F               	goto	u2680
  3656     135E                     u2681:
  3657     135E  2B66               	goto	l1974
  3658     135F                     u2680:
  3659     135F                     l1970:
  3660     135F  09F7               	comf	___awdiv@divisor,f
  3661     1360  09F8               	comf	___awdiv@divisor+1,f
  3662     1361  0AF7               	incf	___awdiv@divisor,f
  3663     1362  1903               	skipnz
  3664     1363  0AF8               	incf	___awdiv@divisor+1,f
  3665     1364                     l1972:
  3666     1364  01A1               	clrf	___awdiv@sign
  3667     1365  0AA1               	incf	___awdiv@sign,f
  3668     1366                     l1974:
  3669     1366  1FFA               	btfss	___awdiv@dividend+1,7
  3670     1367  2B69               	goto	u2691
  3671     1368  2B6A               	goto	u2690
  3672     1369                     u2691:
  3673     1369  2B73               	goto	l1980
  3674     136A                     u2690:
  3675     136A                     l1976:
  3676     136A  09F9               	comf	___awdiv@dividend,f
  3677     136B  09FA               	comf	___awdiv@dividend+1,f
  3678     136C  0AF9               	incf	___awdiv@dividend,f
  3679     136D  1903               	skipnz
  3680     136E  0AFA               	incf	___awdiv@dividend+1,f
  3681     136F                     l1978:
  3682     136F  3001               	movlw	1
  3683     1370  00FB               	movwf	??___awdiv
  3684     1371  087B               	movf	??___awdiv,w
  3685     1372  06A1               	xorwf	___awdiv@sign,f
  3686     1373                     l1980:
  3687     1373  01A2               	clrf	___awdiv@quotient
  3688     1374  01A3               	clrf	___awdiv@quotient+1
  3689     1375                     l1982:
  3690     1375  0877               	movf	___awdiv@divisor,w
  3691     1376  0478               	iorwf	___awdiv@divisor+1,w
  3692     1377  1903               	btfsc	3,2
  3693     1378  2B7A               	goto	u2701
  3694     1379  2B7B               	goto	u2700
  3695     137A                     u2701:
  3696     137A  2BB2               	goto	l2002
  3697     137B                     u2700:
  3698     137B                     l1984:
  3699     137B  01A0               	clrf	___awdiv@counter
  3700     137C  0AA0               	incf	___awdiv@counter,f
  3701     137D  2B89               	goto	l1990
  3702     137E                     l1986:
  3703     137E  3001               	movlw	1
  3704     137F                     u2715:
  3705     137F  1003               	clrc
  3706     1380  0DF7               	rlf	___awdiv@divisor,f
  3707     1381  0DF8               	rlf	___awdiv@divisor+1,f
  3708     1382  3EFF               	addlw	-1
  3709     1383  1D03               	skipz
  3710     1384  2B7F               	goto	u2715
  3711     1385                     l1988:
  3712     1385  3001               	movlw	1
  3713     1386  00FB               	movwf	??___awdiv
  3714     1387  087B               	movf	??___awdiv,w
  3715     1388  07A0               	addwf	___awdiv@counter,f
  3716     1389                     l1990:
  3717     1389  1FF8               	btfss	___awdiv@divisor+1,7
  3718     138A  2B8C               	goto	u2721
  3719     138B  2B8D               	goto	u2720
  3720     138C                     u2721:
  3721     138C  2B7E               	goto	l1986
  3722     138D                     u2720:
  3723     138D                     l1992:
  3724     138D  3001               	movlw	1
  3725     138E                     u2735:
  3726     138E  1003               	clrc
  3727     138F  0DA2               	rlf	___awdiv@quotient,f
  3728     1390  0DA3               	rlf	___awdiv@quotient+1,f
  3729     1391  3EFF               	addlw	-1
  3730     1392  1D03               	skipz
  3731     1393  2B8E               	goto	u2735
  3732     1394  0878               	movf	___awdiv@divisor+1,w
  3733     1395  027A               	subwf	___awdiv@dividend+1,w
  3734     1396  1D03               	skipz
  3735     1397  2B9A               	goto	u2745
  3736     1398  0877               	movf	___awdiv@divisor,w
  3737     1399  0279               	subwf	___awdiv@dividend,w
  3738     139A                     u2745:
  3739     139A  1C03               	skipc
  3740     139B  2B9D               	goto	u2741
  3741     139C  2B9E               	goto	u2740
  3742     139D                     u2741:
  3743     139D  2BA5               	goto	l1998
  3744     139E                     u2740:
  3745     139E                     l1994:
  3746     139E  0877               	movf	___awdiv@divisor,w
  3747     139F  02F9               	subwf	___awdiv@dividend,f
  3748     13A0  0878               	movf	___awdiv@divisor+1,w
  3749     13A1  1C03               	skipc
  3750     13A2  03FA               	decf	___awdiv@dividend+1,f
  3751     13A3  02FA               	subwf	___awdiv@dividend+1,f
  3752     13A4                     l1996:
  3753     13A4  1422               	bsf	___awdiv@quotient,0
  3754     13A5                     l1998:
  3755     13A5  3001               	movlw	1
  3756     13A6                     u2755:
  3757     13A6  1003               	clrc
  3758     13A7  0CF8               	rrf	___awdiv@divisor+1,f
  3759     13A8  0CF7               	rrf	___awdiv@divisor,f
  3760     13A9  3EFF               	addlw	-1
  3761     13AA  1D03               	skipz
  3762     13AB  2BA6               	goto	u2755
  3763     13AC                     l2000:
  3764     13AC  3001               	movlw	1
  3765     13AD  02A0               	subwf	___awdiv@counter,f
  3766     13AE  1D03               	btfss	3,2
  3767     13AF  2BB1               	goto	u2761
  3768     13B0  2BB2               	goto	u2760
  3769     13B1                     u2761:
  3770     13B1  2B8D               	goto	l1992
  3771     13B2                     u2760:
  3772     13B2                     l2002:
  3773     13B2  0821               	movf	___awdiv@sign,w
  3774     13B3  1903               	btfsc	3,2
  3775     13B4  2BB6               	goto	u2771
  3776     13B5  2BB7               	goto	u2770
  3777     13B6                     u2771:
  3778     13B6  2BBC               	goto	l2006
  3779     13B7                     u2770:
  3780     13B7                     l2004:
  3781     13B7  09A2               	comf	___awdiv@quotient,f
  3782     13B8  09A3               	comf	___awdiv@quotient+1,f
  3783     13B9  0AA2               	incf	___awdiv@quotient,f
  3784     13BA  1903               	skipnz
  3785     13BB  0AA3               	incf	___awdiv@quotient+1,f
  3786     13BC                     l2006:
  3787     13BC  0823               	movf	___awdiv@quotient+1,w
  3788     13BD  00F8               	movwf	?___awdiv+1
  3789     13BE  0822               	movf	___awdiv@quotient,w
  3790     13BF  00F7               	movwf	?___awdiv
  3791     13C0                     l389:
  3792     13C0  0008               	return
  3793     13C1                     __end_of___awdiv:
  3794                           
  3795                           	psect	text5
  3796     004F                     __ptext5:	
  3797 ;; *************** function _fround *****************
  3798 ;; Defined at:
  3799 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;  prec            1    wreg     unsigned char 
  3802 ;; Auto vars:     Size  Location     Type
  3803 ;;  prec            1   49[BANK0 ] unsigned char 
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  4   30[BANK0 ] unsigned char 
  3806 ;; Registers used:
  3807 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3813 ;;      Params:         0       4       0       0       0
  3814 ;;      Locals:         0       9       0       0       0
  3815 ;;      Temps:          0       7       0       0       0
  3816 ;;      Totals:         0      20       0       0       0
  3817 ;;Total ram usage:       20 bytes
  3818 ;; Hardware stack levels used: 1
  3819 ;; Hardware stack levels required when called: 2
  3820 ;; This function calls:
  3821 ;;		___flmul
  3822 ;;		___lwdiv
  3823 ;;		___lwmod
  3824 ;; This function is called by:
  3825 ;;		_sprintf
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829     004F                     _fround:	
  3830                           ;psect for function _fround
  3831                           
  3832                           
  3833                           ;incstack = 0
  3834                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3835                           ;fround@prec stored from wreg
  3836     004F  1283               	bcf	3,5	;RP0=0, select bank0
  3837     0050  1303               	bcf	3,6	;RP1=0, select bank0
  3838     0051  00D1               	movwf	fround@prec
  3839     0052                     l2460:
  3840                           
  3841                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3842     0052  306E               	movlw	110
  3843     0053  0251               	subwf	fround@prec,w
  3844     0054  1C03               	skipc
  3845     0055  2857               	goto	u3841
  3846     0056  2858               	goto	u3840
  3847     0057                     u3841:
  3848     0057  2965               	goto	l2468
  3849     0058                     u3840:
  3850     0058                     l2462:
  3851                           
  3852                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3853     0058  303F               	movlw	63
  3854     0059  00A7               	movwf	___flmul@b+3
  3855     005A  3000               	movlw	0
  3856     005B  00A6               	movwf	___flmul@b+2
  3857     005C  3000               	movlw	0
  3858     005D  00A5               	movwf	___flmul@b+1
  3859     005E  3000               	movlw	0
  3860     005F  00A4               	movwf	___flmul@b
  3861     0060  3064               	movlw	100
  3862     0061  00F6               	movwf	___lwdiv@divisor
  3863     0062  3000               	movlw	0
  3864     0063  00F7               	movwf	___lwdiv@divisor+1
  3865     0064  0851               	movf	fround@prec,w
  3866     0065  00C2               	movwf	??_fround
  3867     0066  01C3               	clrf	??_fround+1
  3868     0067  0842               	movf	??_fround,w
  3869     0068  00F8               	movwf	___lwdiv@dividend
  3870     0069  0843               	movf	??_fround+1,w
  3871     006A  00F9               	movwf	___lwdiv@dividend+1
  3872     006B  160A  118A  20F6  120A  118A  	fcall	___lwdiv
  3873     0070  0876               	movf	?___lwdiv,w
  3874     0071  1283               	bcf	3,5	;RP0=0, select bank0
  3875     0072  1303               	bcf	3,6	;RP1=0, select bank0
  3876     0073  00C4               	movwf	??_fround+2
  3877     0074  3001               	movlw	1
  3878     0075                     u3855:
  3879     0075  1003               	clrc
  3880     0076  0DC4               	rlf	??_fround+2,f
  3881     0077  3EFF               	addlw	-1
  3882     0078  1D03               	skipz
  3883     0079  2875               	goto	u3855
  3884     007A  1003               	clrc
  3885     007B  0D44               	rlf	??_fround+2,w
  3886     007C  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3887     007D  0084               	movwf	4
  3888     007E  160A  118A  200A  120A  118A  	fcall	stringdir
  3889     0083  00C5               	movwf	??_fround+3
  3890     0084  160A  118A  200A  120A  118A  	fcall	stringdir
  3891     0089  00C6               	movwf	??_fround+4
  3892     008A  160A  118A  200A  120A  118A  	fcall	stringdir
  3893     008F  00C7               	movwf	??_fround+5
  3894     0090  160A  118A  200A  120A  118A  	fcall	stringdir
  3895     0095  00C8               	movwf	??_fround+6
  3896     0096  0848               	movf	??_fround+6,w
  3897     0097  00AB               	movwf	___flmul@a+3
  3898     0098  0847               	movf	??_fround+5,w
  3899     0099  00AA               	movwf	___flmul@a+2
  3900     009A  0846               	movf	??_fround+4,w
  3901     009B  00A9               	movwf	___flmul@a+1
  3902     009C  0845               	movf	??_fround+3,w
  3903     009D  00A8               	movwf	___flmul@a
  3904     009E  120A  158A  215C  120A  118A  	fcall	___flmul
  3905     00A3  1283               	bcf	3,5	;RP0=0, select bank0
  3906     00A4  1303               	bcf	3,6	;RP1=0, select bank0
  3907     00A5  0827               	movf	?___flmul+3,w
  3908     00A6  00D0               	movwf	_fround$767+3
  3909     00A7  0826               	movf	?___flmul+2,w
  3910     00A8  00CF               	movwf	_fround$767+2
  3911     00A9  0825               	movf	?___flmul+1,w
  3912     00AA  00CE               	movwf	_fround$767+1
  3913     00AB  0824               	movf	?___flmul,w
  3914     00AC  00CD               	movwf	_fround$767
  3915                           
  3916                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3917     00AD  300A               	movlw	10
  3918     00AE  00F6               	movwf	___lwdiv@divisor
  3919     00AF  3000               	movlw	0
  3920     00B0  00F7               	movwf	___lwdiv@divisor+1
  3921     00B1  0851               	movf	fround@prec,w
  3922     00B2  00C2               	movwf	??_fround
  3923     00B3  01C3               	clrf	??_fround+1
  3924     00B4  0842               	movf	??_fround,w
  3925     00B5  00F2               	movwf	___lwmod@dividend
  3926     00B6  0843               	movf	??_fround+1,w
  3927     00B7  00F3               	movwf	___lwmod@dividend+1
  3928     00B8  3064               	movlw	100
  3929     00B9  00F0               	movwf	___lwmod@divisor
  3930     00BA  3000               	movlw	0
  3931     00BB  00F1               	movwf	___lwmod@divisor+1
  3932     00BC  160A  118A  20BC  120A  118A  	fcall	___lwmod
  3933     00C1  0871               	movf	?___lwmod+1,w
  3934     00C2  00F9               	movwf	___lwdiv@dividend+1
  3935     00C3  0870               	movf	?___lwmod,w
  3936     00C4  00F8               	movwf	___lwdiv@dividend
  3937     00C5  160A  118A  20F6  120A  118A  	fcall	___lwdiv
  3938     00CA  0876               	movf	?___lwdiv,w
  3939     00CB  1283               	bcf	3,5	;RP0=0, select bank0
  3940     00CC  1303               	bcf	3,6	;RP1=0, select bank0
  3941     00CD  00C4               	movwf	??_fround+2
  3942     00CE  3001               	movlw	1
  3943     00CF                     u3865:
  3944     00CF  1003               	clrc
  3945     00D0  0DC4               	rlf	??_fround+2,f
  3946     00D1  3EFF               	addlw	-1
  3947     00D2  1D03               	skipz
  3948     00D3  28CF               	goto	u3865
  3949     00D4  1003               	clrc
  3950     00D5  0D44               	rlf	??_fround+2,w
  3951     00D6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3952     00D7  0084               	movwf	4
  3953     00D8  160A  118A  200A  120A  118A  	fcall	stringdir
  3954     00DD  00C5               	movwf	??_fround+3
  3955     00DE  160A  118A  200A  120A  118A  	fcall	stringdir
  3956     00E3  00C6               	movwf	??_fround+4
  3957     00E4  160A  118A  200A  120A  118A  	fcall	stringdir
  3958     00E9  00C7               	movwf	??_fround+5
  3959     00EA  160A  118A  200A  120A  118A  	fcall	stringdir
  3960     00EF  00C8               	movwf	??_fround+6
  3961     00F0  0848               	movf	??_fround+6,w
  3962     00F1  00A7               	movwf	___flmul@b+3
  3963     00F2  0847               	movf	??_fround+5,w
  3964     00F3  00A6               	movwf	___flmul@b+2
  3965     00F4  0846               	movf	??_fround+4,w
  3966     00F5  00A5               	movwf	___flmul@b+1
  3967     00F6  0845               	movf	??_fround+3,w
  3968     00F7  00A4               	movwf	___flmul@b
  3969     00F8  0850               	movf	_fround$767+3,w
  3970     00F9  00AB               	movwf	___flmul@a+3
  3971     00FA  084F               	movf	_fround$767+2,w
  3972     00FB  00AA               	movwf	___flmul@a+2
  3973     00FC  084E               	movf	_fround$767+1,w
  3974     00FD  00A9               	movwf	___flmul@a+1
  3975     00FE  084D               	movf	_fround$767,w
  3976     00FF  00A8               	movwf	___flmul@a
  3977     0100  120A  158A  215C  120A  118A  	fcall	___flmul
  3978     0105  1283               	bcf	3,5	;RP0=0, select bank0
  3979     0106  1303               	bcf	3,6	;RP1=0, select bank0
  3980     0107  0827               	movf	?___flmul+3,w
  3981     0108  00CC               	movwf	_fround$768+3
  3982     0109  0826               	movf	?___flmul+2,w
  3983     010A  00CB               	movwf	_fround$768+2
  3984     010B  0825               	movf	?___flmul+1,w
  3985     010C  00CA               	movwf	_fround$768+1
  3986     010D  0824               	movf	?___flmul,w
  3987     010E  00C9               	movwf	_fround$768
  3988                           
  3989                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3990     010F  300A               	movlw	10
  3991     0110  00F0               	movwf	___lwmod@divisor
  3992     0111  3000               	movlw	0
  3993     0112  00F1               	movwf	___lwmod@divisor+1
  3994     0113  0851               	movf	fround@prec,w
  3995     0114  00C2               	movwf	??_fround
  3996     0115  01C3               	clrf	??_fround+1
  3997     0116  0842               	movf	??_fround,w
  3998     0117  00F2               	movwf	___lwmod@dividend
  3999     0118  0843               	movf	??_fround+1,w
  4000     0119  00F3               	movwf	___lwmod@dividend+1
  4001     011A  160A  118A  20BC  120A  118A  	fcall	___lwmod
  4002     011F  0870               	movf	?___lwmod,w
  4003     0120  1283               	bcf	3,5	;RP0=0, select bank0
  4004     0121  1303               	bcf	3,6	;RP1=0, select bank0
  4005     0122  00C4               	movwf	??_fround+2
  4006     0123  3001               	movlw	1
  4007     0124                     u3875:
  4008     0124  1003               	clrc
  4009     0125  0DC4               	rlf	??_fround+2,f
  4010     0126  3EFF               	addlw	-1
  4011     0127  1D03               	skipz
  4012     0128  2924               	goto	u3875
  4013     0129  1003               	clrc
  4014     012A  0D44               	rlf	??_fround+2,w
  4015     012B  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4016     012C  0084               	movwf	4
  4017     012D  160A  118A  200A  120A  118A  	fcall	stringdir
  4018     0132  00C5               	movwf	??_fround+3
  4019     0133  160A  118A  200A  120A  118A  	fcall	stringdir
  4020     0138  00C6               	movwf	??_fround+4
  4021     0139  160A  118A  200A  120A  118A  	fcall	stringdir
  4022     013E  00C7               	movwf	??_fround+5
  4023     013F  160A  118A  200A  120A  118A  	fcall	stringdir
  4024     0144  00C8               	movwf	??_fround+6
  4025     0145  0848               	movf	??_fround+6,w
  4026     0146  00A7               	movwf	___flmul@b+3
  4027     0147  0847               	movf	??_fround+5,w
  4028     0148  00A6               	movwf	___flmul@b+2
  4029     0149  0846               	movf	??_fround+4,w
  4030     014A  00A5               	movwf	___flmul@b+1
  4031     014B  0845               	movf	??_fround+3,w
  4032     014C  00A4               	movwf	___flmul@b
  4033     014D  084C               	movf	_fround$768+3,w
  4034     014E  00AB               	movwf	___flmul@a+3
  4035     014F  084B               	movf	_fround$768+2,w
  4036     0150  00AA               	movwf	___flmul@a+2
  4037     0151  084A               	movf	_fround$768+1,w
  4038     0152  00A9               	movwf	___flmul@a+1
  4039     0153  0849               	movf	_fround$768,w
  4040     0154  00A8               	movwf	___flmul@a
  4041     0155  120A  158A  215C  120A  118A  	fcall	___flmul
  4042     015A  1283               	bcf	3,5	;RP0=0, select bank0
  4043     015B  1303               	bcf	3,6	;RP1=0, select bank0
  4044     015C  0827               	movf	?___flmul+3,w
  4045     015D  00C1               	movwf	?_fround+3
  4046     015E  0826               	movf	?___flmul+2,w
  4047     015F  00C0               	movwf	?_fround+2
  4048     0160  0825               	movf	?___flmul+1,w
  4049     0161  00BF               	movwf	?_fround+1
  4050     0162  0824               	movf	?___flmul,w
  4051     0163  00BE               	movwf	?_fround
  4052     0164  2A59               	goto	l169
  4053     0165                     l2468:
  4054     0165  300B               	movlw	11
  4055     0166  0251               	subwf	fround@prec,w
  4056     0167  1C03               	skipc
  4057     0168  296A               	goto	u3881
  4058     0169  296B               	goto	u3880
  4059     016A                     u3881:
  4060     016A  2A16               	goto	l2474
  4061     016B                     u3880:
  4062     016B                     l2470:
  4063                           
  4064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4065     016B  303F               	movlw	63
  4066     016C  00A7               	movwf	___flmul@b+3
  4067     016D  3000               	movlw	0
  4068     016E  00A6               	movwf	___flmul@b+2
  4069     016F  3000               	movlw	0
  4070     0170  00A5               	movwf	___flmul@b+1
  4071     0171  3000               	movlw	0
  4072     0172  00A4               	movwf	___flmul@b
  4073     0173  300A               	movlw	10
  4074     0174  00F6               	movwf	___lwdiv@divisor
  4075     0175  3000               	movlw	0
  4076     0176  00F7               	movwf	___lwdiv@divisor+1
  4077     0177  0851               	movf	fround@prec,w
  4078     0178  00C2               	movwf	??_fround
  4079     0179  01C3               	clrf	??_fround+1
  4080     017A  0842               	movf	??_fround,w
  4081     017B  00F8               	movwf	___lwdiv@dividend
  4082     017C  0843               	movf	??_fround+1,w
  4083     017D  00F9               	movwf	___lwdiv@dividend+1
  4084     017E  160A  118A  20F6  120A  118A  	fcall	___lwdiv
  4085     0183  0876               	movf	?___lwdiv,w
  4086     0184  1283               	bcf	3,5	;RP0=0, select bank0
  4087     0185  1303               	bcf	3,6	;RP1=0, select bank0
  4088     0186  00C4               	movwf	??_fround+2
  4089     0187  3001               	movlw	1
  4090     0188                     u3895:
  4091     0188  1003               	clrc
  4092     0189  0DC4               	rlf	??_fround+2,f
  4093     018A  3EFF               	addlw	-1
  4094     018B  1D03               	skipz
  4095     018C  2988               	goto	u3895
  4096     018D  1003               	clrc
  4097     018E  0D44               	rlf	??_fround+2,w
  4098     018F  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4099     0190  0084               	movwf	4
  4100     0191  160A  118A  200A  120A  118A  	fcall	stringdir
  4101     0196  00C5               	movwf	??_fround+3
  4102     0197  160A  118A  200A  120A  118A  	fcall	stringdir
  4103     019C  00C6               	movwf	??_fround+4
  4104     019D  160A  118A  200A  120A  118A  	fcall	stringdir
  4105     01A2  00C7               	movwf	??_fround+5
  4106     01A3  160A  118A  200A  120A  118A  	fcall	stringdir
  4107     01A8  00C8               	movwf	??_fround+6
  4108     01A9  0848               	movf	??_fround+6,w
  4109     01AA  00AB               	movwf	___flmul@a+3
  4110     01AB  0847               	movf	??_fround+5,w
  4111     01AC  00AA               	movwf	___flmul@a+2
  4112     01AD  0846               	movf	??_fround+4,w
  4113     01AE  00A9               	movwf	___flmul@a+1
  4114     01AF  0845               	movf	??_fround+3,w
  4115     01B0  00A8               	movwf	___flmul@a
  4116     01B1  120A  158A  215C  120A  118A  	fcall	___flmul
  4117     01B6  1283               	bcf	3,5	;RP0=0, select bank0
  4118     01B7  1303               	bcf	3,6	;RP1=0, select bank0
  4119     01B8  0827               	movf	?___flmul+3,w
  4120     01B9  00D0               	movwf	_fround$767+3
  4121     01BA  0826               	movf	?___flmul+2,w
  4122     01BB  00CF               	movwf	_fround$767+2
  4123     01BC  0825               	movf	?___flmul+1,w
  4124     01BD  00CE               	movwf	_fround$767+1
  4125     01BE  0824               	movf	?___flmul,w
  4126     01BF  00CD               	movwf	_fround$767
  4127                           
  4128                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4129     01C0  300A               	movlw	10
  4130     01C1  00F0               	movwf	___lwmod@divisor
  4131     01C2  3000               	movlw	0
  4132     01C3  00F1               	movwf	___lwmod@divisor+1
  4133     01C4  0851               	movf	fround@prec,w
  4134     01C5  00C2               	movwf	??_fround
  4135     01C6  01C3               	clrf	??_fround+1
  4136     01C7  0842               	movf	??_fround,w
  4137     01C8  00F2               	movwf	___lwmod@dividend
  4138     01C9  0843               	movf	??_fround+1,w
  4139     01CA  00F3               	movwf	___lwmod@dividend+1
  4140     01CB  160A  118A  20BC  120A  118A  	fcall	___lwmod
  4141     01D0  0870               	movf	?___lwmod,w
  4142     01D1  1283               	bcf	3,5	;RP0=0, select bank0
  4143     01D2  1303               	bcf	3,6	;RP1=0, select bank0
  4144     01D3  00C4               	movwf	??_fround+2
  4145     01D4  3001               	movlw	1
  4146     01D5                     u3905:
  4147     01D5  1003               	clrc
  4148     01D6  0DC4               	rlf	??_fround+2,f
  4149     01D7  3EFF               	addlw	-1
  4150     01D8  1D03               	skipz
  4151     01D9  29D5               	goto	u3905
  4152     01DA  1003               	clrc
  4153     01DB  0D44               	rlf	??_fround+2,w
  4154     01DC  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4155     01DD  0084               	movwf	4
  4156     01DE  160A  118A  200A  120A  118A  	fcall	stringdir
  4157     01E3  00C5               	movwf	??_fround+3
  4158     01E4  160A  118A  200A  120A  118A  	fcall	stringdir
  4159     01E9  00C6               	movwf	??_fround+4
  4160     01EA  160A  118A  200A  120A  118A  	fcall	stringdir
  4161     01EF  00C7               	movwf	??_fround+5
  4162     01F0  160A  118A  200A  120A  118A  	fcall	stringdir
  4163     01F5  00C8               	movwf	??_fround+6
  4164     01F6  0848               	movf	??_fround+6,w
  4165     01F7  00A7               	movwf	___flmul@b+3
  4166     01F8  0847               	movf	??_fround+5,w
  4167     01F9  00A6               	movwf	___flmul@b+2
  4168     01FA  0846               	movf	??_fround+4,w
  4169     01FB  00A5               	movwf	___flmul@b+1
  4170     01FC  0845               	movf	??_fround+3,w
  4171     01FD  00A4               	movwf	___flmul@b
  4172     01FE  0850               	movf	_fround$767+3,w
  4173     01FF  00AB               	movwf	___flmul@a+3
  4174     0200  084F               	movf	_fround$767+2,w
  4175     0201  00AA               	movwf	___flmul@a+2
  4176     0202  084E               	movf	_fround$767+1,w
  4177     0203  00A9               	movwf	___flmul@a+1
  4178     0204  084D               	movf	_fround$767,w
  4179     0205  00A8               	movwf	___flmul@a
  4180     0206  120A  158A  215C  120A  118A  	fcall	___flmul
  4181     020B  1283               	bcf	3,5	;RP0=0, select bank0
  4182     020C  1303               	bcf	3,6	;RP1=0, select bank0
  4183     020D  0827               	movf	?___flmul+3,w
  4184     020E  00C1               	movwf	?_fround+3
  4185     020F  0826               	movf	?___flmul+2,w
  4186     0210  00C0               	movwf	?_fround+2
  4187     0211  0825               	movf	?___flmul+1,w
  4188     0212  00BF               	movwf	?_fround+1
  4189     0213  0824               	movf	?___flmul,w
  4190     0214  00BE               	movwf	?_fround
  4191     0215  2A59               	goto	l169
  4192     0216                     l2474:
  4193                           
  4194                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4195     0216  303F               	movlw	63
  4196     0217  00A7               	movwf	___flmul@b+3
  4197     0218  3000               	movlw	0
  4198     0219  00A6               	movwf	___flmul@b+2
  4199     021A  3000               	movlw	0
  4200     021B  00A5               	movwf	___flmul@b+1
  4201     021C  3000               	movlw	0
  4202     021D  00A4               	movwf	___flmul@b
  4203     021E  0851               	movf	fround@prec,w
  4204     021F  00C2               	movwf	??_fround
  4205     0220  3001               	movlw	1
  4206     0221                     u3915:
  4207     0221  1003               	clrc
  4208     0222  0DC2               	rlf	??_fround,f
  4209     0223  3EFF               	addlw	-1
  4210     0224  1D03               	skipz
  4211     0225  2A21               	goto	u3915
  4212     0226  1003               	clrc
  4213     0227  0D42               	rlf	??_fround,w
  4214     0228  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4215     0229  0084               	movwf	4
  4216     022A  160A  118A  200A  120A  118A  	fcall	stringdir
  4217     022F  00C3               	movwf	??_fround+1
  4218     0230  160A  118A  200A  120A  118A  	fcall	stringdir
  4219     0235  00C4               	movwf	??_fround+2
  4220     0236  160A  118A  200A  120A  118A  	fcall	stringdir
  4221     023B  00C5               	movwf	??_fround+3
  4222     023C  160A  118A  200A  120A  118A  	fcall	stringdir
  4223     0241  00C6               	movwf	??_fround+4
  4224     0242  0846               	movf	??_fround+4,w
  4225     0243  00AB               	movwf	___flmul@a+3
  4226     0244  0845               	movf	??_fround+3,w
  4227     0245  00AA               	movwf	___flmul@a+2
  4228     0246  0844               	movf	??_fround+2,w
  4229     0247  00A9               	movwf	___flmul@a+1
  4230     0248  0843               	movf	??_fround+1,w
  4231     0249  00A8               	movwf	___flmul@a
  4232     024A  120A  158A  215C  120A  118A  	fcall	___flmul
  4233     024F  1283               	bcf	3,5	;RP0=0, select bank0
  4234     0250  1303               	bcf	3,6	;RP1=0, select bank0
  4235     0251  0827               	movf	?___flmul+3,w
  4236     0252  00C1               	movwf	?_fround+3
  4237     0253  0826               	movf	?___flmul+2,w
  4238     0254  00C0               	movwf	?_fround+2
  4239     0255  0825               	movf	?___flmul+1,w
  4240     0256  00BF               	movwf	?_fround+1
  4241     0257  0824               	movf	?___flmul,w
  4242     0258  00BE               	movwf	?_fround
  4243     0259                     l169:
  4244     0259  0008               	return
  4245     025A                     __end_of_fround:
  4246                           
  4247                           	psect	text6
  4248     10BC                     __ptext6:	
  4249 ;; *************** function ___lwmod *****************
  4250 ;; Defined at:
  4251 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;  divisor         2    0[COMMON] unsigned int 
  4254 ;;  dividend        2    2[COMMON] unsigned int 
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;  counter         1    5[COMMON] unsigned char 
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  2    0[COMMON] unsigned int 
  4259 ;; Registers used:
  4260 ;;		wreg, status,2, status,0
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4266 ;;      Params:         4       0       0       0       0
  4267 ;;      Locals:         1       0       0       0       0
  4268 ;;      Temps:          1       0       0       0       0
  4269 ;;      Totals:         6       0       0       0       0
  4270 ;;Total ram usage:        6 bytes
  4271 ;; Hardware stack levels used: 1
  4272 ;; This function calls:
  4273 ;;		Nothing
  4274 ;; This function is called by:
  4275 ;;		_fround
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279     10BC                     ___lwmod:	
  4280                           ;psect for function ___lwmod
  4281                           
  4282     10BC                     l2074:	
  4283                           ;incstack = 0
  4284                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4285                           
  4286     10BC  0870               	movf	___lwmod@divisor,w
  4287     10BD  0471               	iorwf	___lwmod@divisor+1,w
  4288     10BE  1903               	btfsc	3,2
  4289     10BF  28C1               	goto	u2941
  4290     10C0  28C2               	goto	u2940
  4291     10C1                     u2941:
  4292     10C1  28F1               	goto	l2092
  4293     10C2                     u2940:
  4294     10C2                     l2076:
  4295     10C2  01F5               	clrf	___lwmod@counter
  4296     10C3  0AF5               	incf	___lwmod@counter,f
  4297     10C4  28D0               	goto	l2082
  4298     10C5                     l2078:
  4299     10C5  3001               	movlw	1
  4300     10C6                     u2955:
  4301     10C6  1003               	clrc
  4302     10C7  0DF0               	rlf	___lwmod@divisor,f
  4303     10C8  0DF1               	rlf	___lwmod@divisor+1,f
  4304     10C9  3EFF               	addlw	-1
  4305     10CA  1D03               	skipz
  4306     10CB  28C6               	goto	u2955
  4307     10CC                     l2080:
  4308     10CC  3001               	movlw	1
  4309     10CD  00F4               	movwf	??___lwmod
  4310     10CE  0874               	movf	??___lwmod,w
  4311     10CF  07F5               	addwf	___lwmod@counter,f
  4312     10D0                     l2082:
  4313     10D0  1FF1               	btfss	___lwmod@divisor+1,7
  4314     10D1  28D3               	goto	u2961
  4315     10D2  28D4               	goto	u2960
  4316     10D3                     u2961:
  4317     10D3  28C5               	goto	l2078
  4318     10D4                     u2960:
  4319     10D4                     l2084:
  4320     10D4  0871               	movf	___lwmod@divisor+1,w
  4321     10D5  0273               	subwf	___lwmod@dividend+1,w
  4322     10D6  1D03               	skipz
  4323     10D7  28DA               	goto	u2975
  4324     10D8  0870               	movf	___lwmod@divisor,w
  4325     10D9  0272               	subwf	___lwmod@dividend,w
  4326     10DA                     u2975:
  4327     10DA  1C03               	skipc
  4328     10DB  28DD               	goto	u2971
  4329     10DC  28DE               	goto	u2970
  4330     10DD                     u2971:
  4331     10DD  28E4               	goto	l2088
  4332     10DE                     u2970:
  4333     10DE                     l2086:
  4334     10DE  0870               	movf	___lwmod@divisor,w
  4335     10DF  02F2               	subwf	___lwmod@dividend,f
  4336     10E0  0871               	movf	___lwmod@divisor+1,w
  4337     10E1  1C03               	skipc
  4338     10E2  03F3               	decf	___lwmod@dividend+1,f
  4339     10E3  02F3               	subwf	___lwmod@dividend+1,f
  4340     10E4                     l2088:
  4341     10E4  3001               	movlw	1
  4342     10E5                     u2985:
  4343     10E5  1003               	clrc
  4344     10E6  0CF1               	rrf	___lwmod@divisor+1,f
  4345     10E7  0CF0               	rrf	___lwmod@divisor,f
  4346     10E8  3EFF               	addlw	-1
  4347     10E9  1D03               	skipz
  4348     10EA  28E5               	goto	u2985
  4349     10EB                     l2090:
  4350     10EB  3001               	movlw	1
  4351     10EC  02F5               	subwf	___lwmod@counter,f
  4352     10ED  1D03               	btfss	3,2
  4353     10EE  28F0               	goto	u2991
  4354     10EF  28F1               	goto	u2990
  4355     10F0                     u2991:
  4356     10F0  28D4               	goto	l2084
  4357     10F1                     u2990:
  4358     10F1                     l2092:
  4359     10F1  0873               	movf	___lwmod@dividend+1,w
  4360     10F2  00F1               	movwf	?___lwmod+1
  4361     10F3  0872               	movf	___lwmod@dividend,w
  4362     10F4  00F0               	movwf	?___lwmod
  4363     10F5                     l552:
  4364     10F5  0008               	return
  4365     10F6                     __end_of___lwmod:
  4366                           
  4367                           	psect	text7
  4368     10F6                     __ptext7:	
  4369 ;; *************** function ___lwdiv *****************
  4370 ;; Defined at:
  4371 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;  divisor         2    6[COMMON] unsigned int 
  4374 ;;  dividend        2    8[COMMON] unsigned int 
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;  quotient        2   11[COMMON] unsigned int 
  4377 ;;  counter         1   13[COMMON] unsigned char 
  4378 ;; Return value:  Size  Location     Type
  4379 ;;                  2    6[COMMON] unsigned int 
  4380 ;; Registers used:
  4381 ;;		wreg, status,2, status,0
  4382 ;; Tracked objects:
  4383 ;;		On entry : 0/0
  4384 ;;		On exit  : 0/0
  4385 ;;		Unchanged: 0/0
  4386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4387 ;;      Params:         4       0       0       0       0
  4388 ;;      Locals:         3       0       0       0       0
  4389 ;;      Temps:          1       0       0       0       0
  4390 ;;      Totals:         8       0       0       0       0
  4391 ;;Total ram usage:        8 bytes
  4392 ;; Hardware stack levels used: 1
  4393 ;; This function calls:
  4394 ;;		Nothing
  4395 ;; This function is called by:
  4396 ;;		_fround
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400     10F6                     ___lwdiv:	
  4401                           ;psect for function ___lwdiv
  4402                           
  4403     10F6                     l2048:	
  4404                           ;incstack = 0
  4405                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4406                           
  4407     10F6  01FB               	clrf	___lwdiv@quotient
  4408     10F7  01FC               	clrf	___lwdiv@quotient+1
  4409     10F8                     l2050:
  4410     10F8  0876               	movf	___lwdiv@divisor,w
  4411     10F9  0477               	iorwf	___lwdiv@divisor+1,w
  4412     10FA  1903               	btfsc	3,2
  4413     10FB  28FD               	goto	u2871
  4414     10FC  28FE               	goto	u2870
  4415     10FD                     u2871:
  4416     10FD  2935               	goto	l2070
  4417     10FE                     u2870:
  4418     10FE                     l2052:
  4419     10FE  01FD               	clrf	___lwdiv@counter
  4420     10FF  0AFD               	incf	___lwdiv@counter,f
  4421     1100  290C               	goto	l2058
  4422     1101                     l2054:
  4423     1101  3001               	movlw	1
  4424     1102                     u2885:
  4425     1102  1003               	clrc
  4426     1103  0DF6               	rlf	___lwdiv@divisor,f
  4427     1104  0DF7               	rlf	___lwdiv@divisor+1,f
  4428     1105  3EFF               	addlw	-1
  4429     1106  1D03               	skipz
  4430     1107  2902               	goto	u2885
  4431     1108                     l2056:
  4432     1108  3001               	movlw	1
  4433     1109  00FA               	movwf	??___lwdiv
  4434     110A  087A               	movf	??___lwdiv,w
  4435     110B  07FD               	addwf	___lwdiv@counter,f
  4436     110C                     l2058:
  4437     110C  1FF7               	btfss	___lwdiv@divisor+1,7
  4438     110D  290F               	goto	u2891
  4439     110E  2910               	goto	u2890
  4440     110F                     u2891:
  4441     110F  2901               	goto	l2054
  4442     1110                     u2890:
  4443     1110                     l2060:
  4444     1110  3001               	movlw	1
  4445     1111                     u2905:
  4446     1111  1003               	clrc
  4447     1112  0DFB               	rlf	___lwdiv@quotient,f
  4448     1113  0DFC               	rlf	___lwdiv@quotient+1,f
  4449     1114  3EFF               	addlw	-1
  4450     1115  1D03               	skipz
  4451     1116  2911               	goto	u2905
  4452     1117  0877               	movf	___lwdiv@divisor+1,w
  4453     1118  0279               	subwf	___lwdiv@dividend+1,w
  4454     1119  1D03               	skipz
  4455     111A  291D               	goto	u2915
  4456     111B  0876               	movf	___lwdiv@divisor,w
  4457     111C  0278               	subwf	___lwdiv@dividend,w
  4458     111D                     u2915:
  4459     111D  1C03               	skipc
  4460     111E  2920               	goto	u2911
  4461     111F  2921               	goto	u2910
  4462     1120                     u2911:
  4463     1120  2928               	goto	l2066
  4464     1121                     u2910:
  4465     1121                     l2062:
  4466     1121  0876               	movf	___lwdiv@divisor,w
  4467     1122  02F8               	subwf	___lwdiv@dividend,f
  4468     1123  0877               	movf	___lwdiv@divisor+1,w
  4469     1124  1C03               	skipc
  4470     1125  03F9               	decf	___lwdiv@dividend+1,f
  4471     1126  02F9               	subwf	___lwdiv@dividend+1,f
  4472     1127                     l2064:
  4473     1127  147B               	bsf	___lwdiv@quotient,0
  4474     1128                     l2066:
  4475     1128  3001               	movlw	1
  4476     1129                     u2925:
  4477     1129  1003               	clrc
  4478     112A  0CF7               	rrf	___lwdiv@divisor+1,f
  4479     112B  0CF6               	rrf	___lwdiv@divisor,f
  4480     112C  3EFF               	addlw	-1
  4481     112D  1D03               	skipz
  4482     112E  2929               	goto	u2925
  4483     112F                     l2068:
  4484     112F  3001               	movlw	1
  4485     1130  02FD               	subwf	___lwdiv@counter,f
  4486     1131  1D03               	btfss	3,2
  4487     1132  2934               	goto	u2931
  4488     1133  2935               	goto	u2930
  4489     1134                     u2931:
  4490     1134  2910               	goto	l2060
  4491     1135                     u2930:
  4492     1135                     l2070:
  4493     1135  087C               	movf	___lwdiv@quotient+1,w
  4494     1136  00F7               	movwf	?___lwdiv+1
  4495     1137  087B               	movf	___lwdiv@quotient,w
  4496     1138  00F6               	movwf	?___lwdiv
  4497     1139                     l542:
  4498     1139  0008               	return
  4499     113A                     __end_of___lwdiv:
  4500                           
  4501                           	psect	text8
  4502     095C                     __ptext8:	
  4503 ;; *************** function ___flmul *****************
  4504 ;; Defined at:
  4505 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;  b               4    4[BANK0 ] unsigned int 
  4508 ;;  a               4    8[BANK0 ] unsigned int 
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;  prod            4   24[BANK0 ] struct .
  4511 ;;  grs             4   18[BANK0 ] unsigned long 
  4512 ;;  temp            2   28[BANK0 ] struct .
  4513 ;;  bexp            1   23[BANK0 ] unsigned char 
  4514 ;;  aexp            1   22[BANK0 ] unsigned char 
  4515 ;;  sign            1   17[BANK0 ] unsigned char 
  4516 ;; Return value:  Size  Location     Type
  4517 ;;                  4    4[BANK0 ] unsigned char 
  4518 ;; Registers used:
  4519 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4525 ;;      Params:         0       8       0       0       0
  4526 ;;      Locals:         0      13       0       0       0
  4527 ;;      Temps:          0       5       0       0       0
  4528 ;;      Totals:         0      26       0       0       0
  4529 ;;Total ram usage:       26 bytes
  4530 ;; Hardware stack levels used: 1
  4531 ;; Hardware stack levels required when called: 1
  4532 ;; This function calls:
  4533 ;;		__Umul8_16
  4534 ;; This function is called by:
  4535 ;;		_fround
  4536 ;;		_scale
  4537 ;;		_sprintf
  4538 ;; This function uses a non-reentrant model
  4539 ;;
  4540                           
  4541     095C                     ___flmul:	
  4542                           ;psect for function ___flmul
  4543                           
  4544     095C                     l2290:	
  4545                           ;incstack = 0
  4546                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4547                           
  4548     095C  1283               	bcf	3,5	;RP0=0, select bank0
  4549     095D  1303               	bcf	3,6	;RP1=0, select bank0
  4550     095E  0827               	movf	___flmul@b+3,w
  4551     095F  3980               	andlw	128
  4552     0960  00B1               	movwf	___flmul@sign
  4553     0961                     l2292:
  4554     0961  0827               	movf	___flmul@b+3,w
  4555     0962  00AC               	movwf	??___flmul
  4556     0963  072C               	addwf	??___flmul,w
  4557     0964  00B7               	movwf	___flmul@bexp
  4558     0965                     l2294:
  4559     0965  1FA6               	btfss	___flmul@b+2,7
  4560     0966  2968               	goto	u3461
  4561     0967  2969               	goto	u3460
  4562     0968                     u3461:
  4563     0968  296A               	goto	l2298
  4564     0969                     u3460:
  4565     0969                     l2296:
  4566     0969  1437               	bsf	___flmul@bexp,0
  4567     096A                     l2298:
  4568     096A  0837               	movf	___flmul@bexp,w
  4569     096B  1903               	btfsc	3,2
  4570     096C  296E               	goto	u3471
  4571     096D  296F               	goto	u3470
  4572     096E                     u3471:
  4573     096E  297E               	goto	l2306
  4574     096F                     u3470:
  4575     096F                     l2300:
  4576     096F  0A37               	incf	___flmul@bexp,w
  4577     0970  1D03               	btfss	3,2
  4578     0971  2973               	goto	u3481
  4579     0972  2974               	goto	u3480
  4580     0973                     u3481:
  4581     0973  297C               	goto	l2304
  4582     0974                     u3480:
  4583     0974                     l2302:
  4584     0974  3000               	movlw	0
  4585     0975  00A7               	movwf	___flmul@b+3
  4586     0976  3000               	movlw	0
  4587     0977  00A6               	movwf	___flmul@b+2
  4588     0978  3000               	movlw	0
  4589     0979  00A5               	movwf	___flmul@b+1
  4590     097A  3000               	movlw	0
  4591     097B  00A4               	movwf	___flmul@b
  4592     097C                     l2304:
  4593     097C  17A6               	bsf	___flmul@b+2,7
  4594     097D  2986               	goto	l2308
  4595     097E                     l2306:
  4596     097E  3000               	movlw	0
  4597     097F  00A7               	movwf	___flmul@b+3
  4598     0980  3000               	movlw	0
  4599     0981  00A6               	movwf	___flmul@b+2
  4600     0982  3000               	movlw	0
  4601     0983  00A5               	movwf	___flmul@b+1
  4602     0984  3000               	movlw	0
  4603     0985  00A4               	movwf	___flmul@b
  4604     0986                     l2308:
  4605     0986  082B               	movf	___flmul@a+3,w
  4606     0987  3980               	andlw	128
  4607     0988  00AC               	movwf	??___flmul
  4608     0989  082C               	movf	??___flmul,w
  4609     098A  06B1               	xorwf	___flmul@sign,f
  4610     098B                     l2310:
  4611     098B  082B               	movf	___flmul@a+3,w
  4612     098C  00AC               	movwf	??___flmul
  4613     098D  072C               	addwf	??___flmul,w
  4614     098E  00B6               	movwf	___flmul@aexp
  4615     098F                     l2312:
  4616     098F  1FAA               	btfss	___flmul@a+2,7
  4617     0990  2992               	goto	u3491
  4618     0991  2993               	goto	u3490
  4619     0992                     u3491:
  4620     0992  2994               	goto	l2316
  4621     0993                     u3490:
  4622     0993                     l2314:
  4623     0993  1436               	bsf	___flmul@aexp,0
  4624     0994                     l2316:
  4625     0994  0836               	movf	___flmul@aexp,w
  4626     0995  1903               	btfsc	3,2
  4627     0996  2998               	goto	u3501
  4628     0997  2999               	goto	u3500
  4629     0998                     u3501:
  4630     0998  29A8               	goto	l2324
  4631     0999                     u3500:
  4632     0999                     l2318:
  4633     0999  0A36               	incf	___flmul@aexp,w
  4634     099A  1D03               	btfss	3,2
  4635     099B  299D               	goto	u3511
  4636     099C  299E               	goto	u3510
  4637     099D                     u3511:
  4638     099D  29A6               	goto	l2322
  4639     099E                     u3510:
  4640     099E                     l2320:
  4641     099E  3000               	movlw	0
  4642     099F  00AB               	movwf	___flmul@a+3
  4643     09A0  3000               	movlw	0
  4644     09A1  00AA               	movwf	___flmul@a+2
  4645     09A2  3000               	movlw	0
  4646     09A3  00A9               	movwf	___flmul@a+1
  4647     09A4  3000               	movlw	0
  4648     09A5  00A8               	movwf	___flmul@a
  4649     09A6                     l2322:
  4650     09A6  17AA               	bsf	___flmul@a+2,7
  4651     09A7  29B0               	goto	l2326
  4652     09A8                     l2324:
  4653     09A8  3000               	movlw	0
  4654     09A9  00AB               	movwf	___flmul@a+3
  4655     09AA  3000               	movlw	0
  4656     09AB  00AA               	movwf	___flmul@a+2
  4657     09AC  3000               	movlw	0
  4658     09AD  00A9               	movwf	___flmul@a+1
  4659     09AE  3000               	movlw	0
  4660     09AF  00A8               	movwf	___flmul@a
  4661     09B0                     l2326:
  4662     09B0  0836               	movf	___flmul@aexp,w
  4663     09B1  1903               	btfsc	3,2
  4664     09B2  29B4               	goto	u3521
  4665     09B3  29B5               	goto	u3520
  4666     09B4                     u3521:
  4667     09B4  29BA               	goto	l2330
  4668     09B5                     u3520:
  4669     09B5                     l2328:
  4670     09B5  0837               	movf	___flmul@bexp,w
  4671     09B6  1D03               	btfss	3,2
  4672     09B7  29B9               	goto	u3531
  4673     09B8  29BA               	goto	u3530
  4674     09B9                     u3531:
  4675     09B9  29C3               	goto	l2334
  4676     09BA                     u3530:
  4677     09BA                     l2330:
  4678     09BA  3000               	movlw	0
  4679     09BB  00A7               	movwf	?___flmul+3
  4680     09BC  3000               	movlw	0
  4681     09BD  00A6               	movwf	?___flmul+2
  4682     09BE  3000               	movlw	0
  4683     09BF  00A5               	movwf	?___flmul+1
  4684     09C0  3000               	movlw	0
  4685     09C1  00A4               	movwf	?___flmul
  4686     09C2  2CA0               	goto	l659
  4687     09C3                     l2334:
  4688     09C3  0824               	movf	___flmul@b,w
  4689     09C4  00F0               	movwf	__Umul8_16@multiplicand
  4690     09C5  082A               	movf	___flmul@a+2,w
  4691     09C6  160A  158A  2762  120A  158A  	fcall	__Umul8_16
  4692     09CB  0871               	movf	?__Umul8_16+1,w
  4693     09CC  1283               	bcf	3,5	;RP0=0, select bank0
  4694     09CD  1303               	bcf	3,6	;RP1=0, select bank0
  4695     09CE  00BD               	movwf	___flmul@temp+1
  4696     09CF  0870               	movf	?__Umul8_16,w
  4697     09D0  00BC               	movwf	___flmul@temp
  4698     09D1                     l2336:
  4699     09D1  083C               	movf	___flmul@temp,w
  4700     09D2  00AC               	movwf	??___flmul
  4701     09D3  01AD               	clrf	??___flmul+1
  4702     09D4  01AE               	clrf	??___flmul+2
  4703     09D5  01AF               	clrf	??___flmul+3
  4704     09D6  082F               	movf	??___flmul+3,w
  4705     09D7  00B5               	movwf	___flmul@grs+3
  4706     09D8  082E               	movf	??___flmul+2,w
  4707     09D9  00B4               	movwf	___flmul@grs+2
  4708     09DA  082D               	movf	??___flmul+1,w
  4709     09DB  00B3               	movwf	___flmul@grs+1
  4710     09DC  082C               	movf	??___flmul,w
  4711     09DD  00B2               	movwf	___flmul@grs
  4712     09DE                     l2338:
  4713     09DE  083D               	movf	___flmul@temp+1,w
  4714     09DF  00AC               	movwf	??___flmul
  4715     09E0  01AD               	clrf	??___flmul+1
  4716     09E1  01AE               	clrf	??___flmul+2
  4717     09E2  01AF               	clrf	??___flmul+3
  4718     09E3  082F               	movf	??___flmul+3,w
  4719     09E4  00BB               	movwf	___flmul@prod+3
  4720     09E5  082E               	movf	??___flmul+2,w
  4721     09E6  00BA               	movwf	___flmul@prod+2
  4722     09E7  082D               	movf	??___flmul+1,w
  4723     09E8  00B9               	movwf	___flmul@prod+1
  4724     09E9  082C               	movf	??___flmul,w
  4725     09EA  00B8               	movwf	___flmul@prod
  4726     09EB  0825               	movf	___flmul@b+1,w
  4727     09EC  00F0               	movwf	__Umul8_16@multiplicand
  4728     09ED  0829               	movf	___flmul@a+1,w
  4729     09EE  160A  158A  2762  120A  158A  	fcall	__Umul8_16
  4730     09F3  0871               	movf	?__Umul8_16+1,w
  4731     09F4  1283               	bcf	3,5	;RP0=0, select bank0
  4732     09F5  1303               	bcf	3,6	;RP1=0, select bank0
  4733     09F6  00BD               	movwf	___flmul@temp+1
  4734     09F7  0870               	movf	?__Umul8_16,w
  4735     09F8  00BC               	movwf	___flmul@temp
  4736     09F9                     l2340:
  4737     09F9  083C               	movf	___flmul@temp,w
  4738     09FA  00AC               	movwf	??___flmul
  4739     09FB  01AD               	clrf	??___flmul+1
  4740     09FC  01AE               	clrf	??___flmul+2
  4741     09FD  01AF               	clrf	??___flmul+3
  4742     09FE  082C               	movf	??___flmul,w
  4743     09FF  07B2               	addwf	___flmul@grs,f
  4744     0A00  082D               	movf	??___flmul+1,w
  4745     0A01  1103               	clrz
  4746     0A02  1803               	skipnc
  4747     0A03  3E01               	addlw	1
  4748     0A04  1903               	skipnz
  4749     0A05  2A07               	goto	u3541
  4750     0A06  07B3               	addwf	___flmul@grs+1,f
  4751     0A07                     u3541:
  4752     0A07  082E               	movf	??___flmul+2,w
  4753     0A08  1103               	clrz
  4754     0A09  1803               	skipnc
  4755     0A0A  3E01               	addlw	1
  4756     0A0B  1903               	skipnz
  4757     0A0C  2A0E               	goto	u3542
  4758     0A0D  07B4               	addwf	___flmul@grs+2,f
  4759     0A0E                     u3542:
  4760     0A0E  082F               	movf	??___flmul+3,w
  4761     0A0F  1103               	clrz
  4762     0A10  1803               	skipnc
  4763     0A11  3E01               	addlw	1
  4764     0A12  1903               	skipnz
  4765     0A13  2A15               	goto	u3543
  4766     0A14  07B5               	addwf	___flmul@grs+3,f
  4767     0A15                     u3543:
  4768     0A15                     l2342:
  4769     0A15  083D               	movf	___flmul@temp+1,w
  4770     0A16  00AC               	movwf	??___flmul
  4771     0A17  01AD               	clrf	??___flmul+1
  4772     0A18  01AE               	clrf	??___flmul+2
  4773     0A19  01AF               	clrf	??___flmul+3
  4774     0A1A  082C               	movf	??___flmul,w
  4775     0A1B  07B8               	addwf	___flmul@prod,f
  4776     0A1C  082D               	movf	??___flmul+1,w
  4777     0A1D  1103               	clrz
  4778     0A1E  1803               	skipnc
  4779     0A1F  3E01               	addlw	1
  4780     0A20  1903               	skipnz
  4781     0A21  2A23               	goto	u3551
  4782     0A22  07B9               	addwf	___flmul@prod+1,f
  4783     0A23                     u3551:
  4784     0A23  082E               	movf	??___flmul+2,w
  4785     0A24  1103               	clrz
  4786     0A25  1803               	skipnc
  4787     0A26  3E01               	addlw	1
  4788     0A27  1903               	skipnz
  4789     0A28  2A2A               	goto	u3552
  4790     0A29  07BA               	addwf	___flmul@prod+2,f
  4791     0A2A                     u3552:
  4792     0A2A  082F               	movf	??___flmul+3,w
  4793     0A2B  1103               	clrz
  4794     0A2C  1803               	skipnc
  4795     0A2D  3E01               	addlw	1
  4796     0A2E  1903               	skipnz
  4797     0A2F  2A31               	goto	u3553
  4798     0A30  07BB               	addwf	___flmul@prod+3,f
  4799     0A31                     u3553:
  4800     0A31  0826               	movf	___flmul@b+2,w
  4801     0A32  00F0               	movwf	__Umul8_16@multiplicand
  4802     0A33  0828               	movf	___flmul@a,w
  4803     0A34  160A  158A  2762  120A  158A  	fcall	__Umul8_16
  4804     0A39  0871               	movf	?__Umul8_16+1,w
  4805     0A3A  1283               	bcf	3,5	;RP0=0, select bank0
  4806     0A3B  1303               	bcf	3,6	;RP1=0, select bank0
  4807     0A3C  00BD               	movwf	___flmul@temp+1
  4808     0A3D  0870               	movf	?__Umul8_16,w
  4809     0A3E  00BC               	movwf	___flmul@temp
  4810     0A3F                     l2344:
  4811     0A3F  083C               	movf	___flmul@temp,w
  4812     0A40  00AC               	movwf	??___flmul
  4813     0A41  01AD               	clrf	??___flmul+1
  4814     0A42  01AE               	clrf	??___flmul+2
  4815     0A43  01AF               	clrf	??___flmul+3
  4816     0A44  082C               	movf	??___flmul,w
  4817     0A45  07B2               	addwf	___flmul@grs,f
  4818     0A46  082D               	movf	??___flmul+1,w
  4819     0A47  1103               	clrz
  4820     0A48  1803               	skipnc
  4821     0A49  3E01               	addlw	1
  4822     0A4A  1903               	skipnz
  4823     0A4B  2A4D               	goto	u3561
  4824     0A4C  07B3               	addwf	___flmul@grs+1,f
  4825     0A4D                     u3561:
  4826     0A4D  082E               	movf	??___flmul+2,w
  4827     0A4E  1103               	clrz
  4828     0A4F  1803               	skipnc
  4829     0A50  3E01               	addlw	1
  4830     0A51  1903               	skipnz
  4831     0A52  2A54               	goto	u3562
  4832     0A53  07B4               	addwf	___flmul@grs+2,f
  4833     0A54                     u3562:
  4834     0A54  082F               	movf	??___flmul+3,w
  4835     0A55  1103               	clrz
  4836     0A56  1803               	skipnc
  4837     0A57  3E01               	addlw	1
  4838     0A58  1903               	skipnz
  4839     0A59  2A5B               	goto	u3563
  4840     0A5A  07B5               	addwf	___flmul@grs+3,f
  4841     0A5B                     u3563:
  4842     0A5B                     l2346:
  4843     0A5B  083D               	movf	___flmul@temp+1,w
  4844     0A5C  00AC               	movwf	??___flmul
  4845     0A5D  01AD               	clrf	??___flmul+1
  4846     0A5E  01AE               	clrf	??___flmul+2
  4847     0A5F  01AF               	clrf	??___flmul+3
  4848     0A60  082C               	movf	??___flmul,w
  4849     0A61  07B8               	addwf	___flmul@prod,f
  4850     0A62  082D               	movf	??___flmul+1,w
  4851     0A63  1103               	clrz
  4852     0A64  1803               	skipnc
  4853     0A65  3E01               	addlw	1
  4854     0A66  1903               	skipnz
  4855     0A67  2A69               	goto	u3571
  4856     0A68  07B9               	addwf	___flmul@prod+1,f
  4857     0A69                     u3571:
  4858     0A69  082E               	movf	??___flmul+2,w
  4859     0A6A  1103               	clrz
  4860     0A6B  1803               	skipnc
  4861     0A6C  3E01               	addlw	1
  4862     0A6D  1903               	skipnz
  4863     0A6E  2A70               	goto	u3572
  4864     0A6F  07BA               	addwf	___flmul@prod+2,f
  4865     0A70                     u3572:
  4866     0A70  082F               	movf	??___flmul+3,w
  4867     0A71  1103               	clrz
  4868     0A72  1803               	skipnc
  4869     0A73  3E01               	addlw	1
  4870     0A74  1903               	skipnz
  4871     0A75  2A77               	goto	u3573
  4872     0A76  07BB               	addwf	___flmul@prod+3,f
  4873     0A77                     u3573:
  4874     0A77                     l2348:
  4875     0A77  3008               	movlw	8
  4876     0A78  00AC               	movwf	??___flmul
  4877     0A79                     u3585:
  4878     0A79  1003               	clrc
  4879     0A7A  0DB2               	rlf	___flmul@grs,f
  4880     0A7B  0DB3               	rlf	___flmul@grs+1,f
  4881     0A7C  0DB4               	rlf	___flmul@grs+2,f
  4882     0A7D  0DB5               	rlf	___flmul@grs+3,f
  4883     0A7E  0BAC               	decfsz	??___flmul,f
  4884     0A7F  2A79               	goto	u3585
  4885     0A80                     l2350:
  4886     0A80  0825               	movf	___flmul@b+1,w
  4887     0A81  00F0               	movwf	__Umul8_16@multiplicand
  4888     0A82  0828               	movf	___flmul@a,w
  4889     0A83  160A  158A  2762  120A  158A  	fcall	__Umul8_16
  4890     0A88  0871               	movf	?__Umul8_16+1,w
  4891     0A89  1283               	bcf	3,5	;RP0=0, select bank0
  4892     0A8A  1303               	bcf	3,6	;RP1=0, select bank0
  4893     0A8B  00BD               	movwf	___flmul@temp+1
  4894     0A8C  0870               	movf	?__Umul8_16,w
  4895     0A8D  00BC               	movwf	___flmul@temp
  4896     0A8E                     l2352:
  4897     0A8E  083C               	movf	___flmul@temp,w
  4898     0A8F  00AC               	movwf	??___flmul
  4899     0A90  083D               	movf	___flmul@temp+1,w
  4900     0A91  00AD               	movwf	??___flmul+1
  4901     0A92  01AE               	clrf	??___flmul+2
  4902     0A93  01AF               	clrf	??___flmul+3
  4903     0A94  082C               	movf	??___flmul,w
  4904     0A95  07B2               	addwf	___flmul@grs,f
  4905     0A96  082D               	movf	??___flmul+1,w
  4906     0A97  1103               	clrz
  4907     0A98  1803               	skipnc
  4908     0A99  3E01               	addlw	1
  4909     0A9A  1903               	skipnz
  4910     0A9B  2A9D               	goto	u3591
  4911     0A9C  07B3               	addwf	___flmul@grs+1,f
  4912     0A9D                     u3591:
  4913     0A9D  082E               	movf	??___flmul+2,w
  4914     0A9E  1103               	clrz
  4915     0A9F  1803               	skipnc
  4916     0AA0  3E01               	addlw	1
  4917     0AA1  1903               	skipnz
  4918     0AA2  2AA4               	goto	u3592
  4919     0AA3  07B4               	addwf	___flmul@grs+2,f
  4920     0AA4                     u3592:
  4921     0AA4  082F               	movf	??___flmul+3,w
  4922     0AA5  1103               	clrz
  4923     0AA6  1803               	skipnc
  4924     0AA7  3E01               	addlw	1
  4925     0AA8  1903               	skipnz
  4926     0AA9  2AAB               	goto	u3593
  4927     0AAA  07B5               	addwf	___flmul@grs+3,f
  4928     0AAB                     u3593:
  4929     0AAB                     l2354:
  4930     0AAB  0824               	movf	___flmul@b,w
  4931     0AAC  00F0               	movwf	__Umul8_16@multiplicand
  4932     0AAD  0829               	movf	___flmul@a+1,w
  4933     0AAE  160A  158A  2762  120A  158A  	fcall	__Umul8_16
  4934     0AB3  0871               	movf	?__Umul8_16+1,w
  4935     0AB4  1283               	bcf	3,5	;RP0=0, select bank0
  4936     0AB5  1303               	bcf	3,6	;RP1=0, select bank0
  4937     0AB6  00BD               	movwf	___flmul@temp+1
  4938     0AB7  0870               	movf	?__Umul8_16,w
  4939     0AB8  00BC               	movwf	___flmul@temp
  4940     0AB9                     l2356:
  4941     0AB9  083C               	movf	___flmul@temp,w
  4942     0ABA  00AC               	movwf	??___flmul
  4943     0ABB  083D               	movf	___flmul@temp+1,w
  4944     0ABC  00AD               	movwf	??___flmul+1
  4945     0ABD  01AE               	clrf	??___flmul+2
  4946     0ABE  01AF               	clrf	??___flmul+3
  4947     0ABF  082C               	movf	??___flmul,w
  4948     0AC0  07B2               	addwf	___flmul@grs,f
  4949     0AC1  082D               	movf	??___flmul+1,w
  4950     0AC2  1103               	clrz
  4951     0AC3  1803               	skipnc
  4952     0AC4  3E01               	addlw	1
  4953     0AC5  1903               	skipnz
  4954     0AC6  2AC8               	goto	u3601
  4955     0AC7  07B3               	addwf	___flmul@grs+1,f
  4956     0AC8                     u3601:
  4957     0AC8  082E               	movf	??___flmul+2,w
  4958     0AC9  1103               	clrz
  4959     0ACA  1803               	skipnc
  4960     0ACB  3E01               	addlw	1
  4961     0ACC  1903               	skipnz
  4962     0ACD  2ACF               	goto	u3602
  4963     0ACE  07B4               	addwf	___flmul@grs+2,f
  4964     0ACF                     u3602:
  4965     0ACF  082F               	movf	??___flmul+3,w
  4966     0AD0  1103               	clrz
  4967     0AD1  1803               	skipnc
  4968     0AD2  3E01               	addlw	1
  4969     0AD3  1903               	skipnz
  4970     0AD4  2AD6               	goto	u3603
  4971     0AD5  07B5               	addwf	___flmul@grs+3,f
  4972     0AD6                     u3603:
  4973     0AD6                     l2358:
  4974     0AD6  3008               	movlw	8
  4975     0AD7  00AC               	movwf	??___flmul
  4976     0AD8                     u3615:
  4977     0AD8  1003               	clrc
  4978     0AD9  0DB2               	rlf	___flmul@grs,f
  4979     0ADA  0DB3               	rlf	___flmul@grs+1,f
  4980     0ADB  0DB4               	rlf	___flmul@grs+2,f
  4981     0ADC  0DB5               	rlf	___flmul@grs+3,f
  4982     0ADD  0BAC               	decfsz	??___flmul,f
  4983     0ADE  2AD8               	goto	u3615
  4984     0ADF  0824               	movf	___flmul@b,w
  4985     0AE0  00F0               	movwf	__Umul8_16@multiplicand
  4986     0AE1  0828               	movf	___flmul@a,w
  4987     0AE2  160A  158A  2762  120A  158A  	fcall	__Umul8_16
  4988     0AE7  0871               	movf	?__Umul8_16+1,w
  4989     0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  4990     0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  4991     0AEA  00BD               	movwf	___flmul@temp+1
  4992     0AEB  0870               	movf	?__Umul8_16,w
  4993     0AEC  00BC               	movwf	___flmul@temp
  4994     0AED                     l2360:
  4995     0AED  083C               	movf	___flmul@temp,w
  4996     0AEE  00AC               	movwf	??___flmul
  4997     0AEF  083D               	movf	___flmul@temp+1,w
  4998     0AF0  00AD               	movwf	??___flmul+1
  4999     0AF1  01AE               	clrf	??___flmul+2
  5000     0AF2  01AF               	clrf	??___flmul+3
  5001     0AF3  082C               	movf	??___flmul,w
  5002     0AF4  07B2               	addwf	___flmul@grs,f
  5003     0AF5  082D               	movf	??___flmul+1,w
  5004     0AF6  1103               	clrz
  5005     0AF7  1803               	skipnc
  5006     0AF8  3E01               	addlw	1
  5007     0AF9  1903               	skipnz
  5008     0AFA  2AFC               	goto	u3621
  5009     0AFB  07B3               	addwf	___flmul@grs+1,f
  5010     0AFC                     u3621:
  5011     0AFC  082E               	movf	??___flmul+2,w
  5012     0AFD  1103               	clrz
  5013     0AFE  1803               	skipnc
  5014     0AFF  3E01               	addlw	1
  5015     0B00  1903               	skipnz
  5016     0B01  2B03               	goto	u3622
  5017     0B02  07B4               	addwf	___flmul@grs+2,f
  5018     0B03                     u3622:
  5019     0B03  082F               	movf	??___flmul+3,w
  5020     0B04  1103               	clrz
  5021     0B05  1803               	skipnc
  5022     0B06  3E01               	addlw	1
  5023     0B07  1903               	skipnz
  5024     0B08  2B0A               	goto	u3623
  5025     0B09  07B5               	addwf	___flmul@grs+3,f
  5026     0B0A                     u3623:
  5027     0B0A                     l2362:
  5028     0B0A  0825               	movf	___flmul@b+1,w
  5029     0B0B  00F0               	movwf	__Umul8_16@multiplicand
  5030     0B0C  082A               	movf	___flmul@a+2,w
  5031     0B0D  160A  158A  2762  120A  158A  	fcall	__Umul8_16
  5032     0B12  0871               	movf	?__Umul8_16+1,w
  5033     0B13  1283               	bcf	3,5	;RP0=0, select bank0
  5034     0B14  1303               	bcf	3,6	;RP1=0, select bank0
  5035     0B15  00BD               	movwf	___flmul@temp+1
  5036     0B16  0870               	movf	?__Umul8_16,w
  5037     0B17  00BC               	movwf	___flmul@temp
  5038     0B18  083C               	movf	___flmul@temp,w
  5039     0B19  00AC               	movwf	??___flmul
  5040     0B1A  083D               	movf	___flmul@temp+1,w
  5041     0B1B  00AD               	movwf	??___flmul+1
  5042     0B1C  01AE               	clrf	??___flmul+2
  5043     0B1D  01AF               	clrf	??___flmul+3
  5044     0B1E  082C               	movf	??___flmul,w
  5045     0B1F  07B8               	addwf	___flmul@prod,f
  5046     0B20  082D               	movf	??___flmul+1,w
  5047     0B21  1103               	clrz
  5048     0B22  1803               	skipnc
  5049     0B23  3E01               	addlw	1
  5050     0B24  1903               	skipnz
  5051     0B25  2B27               	goto	u3631
  5052     0B26  07B9               	addwf	___flmul@prod+1,f
  5053     0B27                     u3631:
  5054     0B27  082E               	movf	??___flmul+2,w
  5055     0B28  1103               	clrz
  5056     0B29  1803               	skipnc
  5057     0B2A  3E01               	addlw	1
  5058     0B2B  1903               	skipnz
  5059     0B2C  2B2E               	goto	u3632
  5060     0B2D  07BA               	addwf	___flmul@prod+2,f
  5061     0B2E                     u3632:
  5062     0B2E  082F               	movf	??___flmul+3,w
  5063     0B2F  1103               	clrz
  5064     0B30  1803               	skipnc
  5065     0B31  3E01               	addlw	1
  5066     0B32  1903               	skipnz
  5067     0B33  2B35               	goto	u3633
  5068     0B34  07BB               	addwf	___flmul@prod+3,f
  5069     0B35                     u3633:
  5070     0B35                     l2364:
  5071     0B35  0826               	movf	___flmul@b+2,w
  5072     0B36  00F0               	movwf	__Umul8_16@multiplicand
  5073     0B37  0829               	movf	___flmul@a+1,w
  5074     0B38  160A  158A  2762  120A  158A  	fcall	__Umul8_16
  5075     0B3D  0871               	movf	?__Umul8_16+1,w
  5076     0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  5077     0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  5078     0B40  00BD               	movwf	___flmul@temp+1
  5079     0B41  0870               	movf	?__Umul8_16,w
  5080     0B42  00BC               	movwf	___flmul@temp
  5081     0B43                     l2366:
  5082     0B43  083C               	movf	___flmul@temp,w
  5083     0B44  00AC               	movwf	??___flmul
  5084     0B45  083D               	movf	___flmul@temp+1,w
  5085     0B46  00AD               	movwf	??___flmul+1
  5086     0B47  01AE               	clrf	??___flmul+2
  5087     0B48  01AF               	clrf	??___flmul+3
  5088     0B49  082C               	movf	??___flmul,w
  5089     0B4A  07B8               	addwf	___flmul@prod,f
  5090     0B4B  082D               	movf	??___flmul+1,w
  5091     0B4C  1103               	clrz
  5092     0B4D  1803               	skipnc
  5093     0B4E  3E01               	addlw	1
  5094     0B4F  1903               	skipnz
  5095     0B50  2B52               	goto	u3641
  5096     0B51  07B9               	addwf	___flmul@prod+1,f
  5097     0B52                     u3641:
  5098     0B52  082E               	movf	??___flmul+2,w
  5099     0B53  1103               	clrz
  5100     0B54  1803               	skipnc
  5101     0B55  3E01               	addlw	1
  5102     0B56  1903               	skipnz
  5103     0B57  2B59               	goto	u3642
  5104     0B58  07BA               	addwf	___flmul@prod+2,f
  5105     0B59                     u3642:
  5106     0B59  082F               	movf	??___flmul+3,w
  5107     0B5A  1103               	clrz
  5108     0B5B  1803               	skipnc
  5109     0B5C  3E01               	addlw	1
  5110     0B5D  1903               	skipnz
  5111     0B5E  2B60               	goto	u3643
  5112     0B5F  07BB               	addwf	___flmul@prod+3,f
  5113     0B60                     u3643:
  5114     0B60  0826               	movf	___flmul@b+2,w
  5115     0B61  00F0               	movwf	__Umul8_16@multiplicand
  5116     0B62  082A               	movf	___flmul@a+2,w
  5117     0B63  160A  158A  2762  120A  158A  	fcall	__Umul8_16
  5118     0B68  0871               	movf	?__Umul8_16+1,w
  5119     0B69  1283               	bcf	3,5	;RP0=0, select bank0
  5120     0B6A  1303               	bcf	3,6	;RP1=0, select bank0
  5121     0B6B  00BD               	movwf	___flmul@temp+1
  5122     0B6C  0870               	movf	?__Umul8_16,w
  5123     0B6D  00BC               	movwf	___flmul@temp
  5124     0B6E                     l2368:
  5125     0B6E  083C               	movf	___flmul@temp,w
  5126     0B6F  00AC               	movwf	??___flmul
  5127     0B70  083D               	movf	___flmul@temp+1,w
  5128     0B71  00AD               	movwf	??___flmul+1
  5129     0B72  01AE               	clrf	??___flmul+2
  5130     0B73  01AF               	clrf	??___flmul+3
  5131     0B74  3008               	movlw	8
  5132     0B75                     u3655:
  5133     0B75  1003               	clrc
  5134     0B76  0DAC               	rlf	??___flmul,f
  5135     0B77  0DAD               	rlf	??___flmul+1,f
  5136     0B78  0DAE               	rlf	??___flmul+2,f
  5137     0B79  0DAF               	rlf	??___flmul+3,f
  5138     0B7A                     u3650:
  5139     0B7A  3EFF               	addlw	-1
  5140     0B7B  1D03               	skipz
  5141     0B7C  2B75               	goto	u3655
  5142     0B7D  082C               	movf	??___flmul,w
  5143     0B7E  07B8               	addwf	___flmul@prod,f
  5144     0B7F  082D               	movf	??___flmul+1,w
  5145     0B80  1103               	clrz
  5146     0B81  1803               	skipnc
  5147     0B82  3E01               	addlw	1
  5148     0B83  1903               	skipnz
  5149     0B84  2B86               	goto	u3661
  5150     0B85  07B9               	addwf	___flmul@prod+1,f
  5151     0B86                     u3661:
  5152     0B86  082E               	movf	??___flmul+2,w
  5153     0B87  1103               	clrz
  5154     0B88  1803               	skipnc
  5155     0B89  3E01               	addlw	1
  5156     0B8A  1903               	skipnz
  5157     0B8B  2B8D               	goto	u3662
  5158     0B8C  07BA               	addwf	___flmul@prod+2,f
  5159     0B8D                     u3662:
  5160     0B8D  082F               	movf	??___flmul+3,w
  5161     0B8E  1103               	clrz
  5162     0B8F  1803               	skipnc
  5163     0B90  3E01               	addlw	1
  5164     0B91  1903               	skipnz
  5165     0B92  2B94               	goto	u3663
  5166     0B93  07BB               	addwf	___flmul@prod+3,f
  5167     0B94                     u3663:
  5168     0B94                     l2370:
  5169     0B94  0832               	movf	___flmul@grs,w
  5170     0B95  00AC               	movwf	??___flmul
  5171     0B96  0833               	movf	___flmul@grs+1,w
  5172     0B97  00AD               	movwf	??___flmul+1
  5173     0B98  0834               	movf	___flmul@grs+2,w
  5174     0B99  00AE               	movwf	??___flmul+2
  5175     0B9A  0835               	movf	___flmul@grs+3,w
  5176     0B9B  00AF               	movwf	??___flmul+3
  5177     0B9C  3018               	movlw	24
  5178     0B9D                     u3675:
  5179     0B9D  1003               	clrc
  5180     0B9E  0CAF               	rrf	??___flmul+3,f
  5181     0B9F  0CAE               	rrf	??___flmul+2,f
  5182     0BA0  0CAD               	rrf	??___flmul+1,f
  5183     0BA1  0CAC               	rrf	??___flmul,f
  5184     0BA2                     u3670:
  5185     0BA2  3EFF               	addlw	-1
  5186     0BA3  1D03               	skipz
  5187     0BA4  2B9D               	goto	u3675
  5188     0BA5  082C               	movf	??___flmul,w
  5189     0BA6  07B8               	addwf	___flmul@prod,f
  5190     0BA7  082D               	movf	??___flmul+1,w
  5191     0BA8  1103               	clrz
  5192     0BA9  1803               	skipnc
  5193     0BAA  3E01               	addlw	1
  5194     0BAB  1903               	skipnz
  5195     0BAC  2BAE               	goto	u3681
  5196     0BAD  07B9               	addwf	___flmul@prod+1,f
  5197     0BAE                     u3681:
  5198     0BAE  082E               	movf	??___flmul+2,w
  5199     0BAF  1103               	clrz
  5200     0BB0  1803               	skipnc
  5201     0BB1  3E01               	addlw	1
  5202     0BB2  1903               	skipnz
  5203     0BB3  2BB5               	goto	u3682
  5204     0BB4  07BA               	addwf	___flmul@prod+2,f
  5205     0BB5                     u3682:
  5206     0BB5  082F               	movf	??___flmul+3,w
  5207     0BB6  1103               	clrz
  5208     0BB7  1803               	skipnc
  5209     0BB8  3E01               	addlw	1
  5210     0BB9  1903               	skipnz
  5211     0BBA  2BBC               	goto	u3683
  5212     0BBB  07BB               	addwf	___flmul@prod+3,f
  5213     0BBC                     u3683:
  5214     0BBC                     l2372:
  5215     0BBC  3008               	movlw	8
  5216     0BBD  00AC               	movwf	??___flmul
  5217     0BBE                     u3695:
  5218     0BBE  1003               	clrc
  5219     0BBF  0DB2               	rlf	___flmul@grs,f
  5220     0BC0  0DB3               	rlf	___flmul@grs+1,f
  5221     0BC1  0DB4               	rlf	___flmul@grs+2,f
  5222     0BC2  0DB5               	rlf	___flmul@grs+3,f
  5223     0BC3  0BAC               	decfsz	??___flmul,f
  5224     0BC4  2BBE               	goto	u3695
  5225     0BC5                     l2374:
  5226     0BC5  0837               	movf	___flmul@bexp,w
  5227     0BC6  0736               	addwf	___flmul@aexp,w
  5228     0BC7  00AC               	movwf	??___flmul
  5229     0BC8  01AD               	clrf	??___flmul+1
  5230     0BC9  0DAD               	rlf	??___flmul+1,f
  5231     0BCA  082C               	movf	??___flmul,w
  5232     0BCB  3E82               	addlw	130
  5233     0BCC  00BC               	movwf	___flmul@temp
  5234     0BCD  082D               	movf	??___flmul+1,w
  5235     0BCE  1803               	skipnc
  5236     0BCF  3E01               	addlw	1
  5237     0BD0  3EFF               	addlw	255
  5238     0BD1  00BD               	movwf	___flmul@temp+1
  5239     0BD2  2BF0               	goto	l2386
  5240     0BD3                     l2376:
  5241     0BD3  3001               	movlw	1
  5242     0BD4  00AC               	movwf	??___flmul
  5243     0BD5                     u3705:
  5244     0BD5  1003               	clrc
  5245     0BD6  0DB8               	rlf	___flmul@prod,f
  5246     0BD7  0DB9               	rlf	___flmul@prod+1,f
  5247     0BD8  0DBA               	rlf	___flmul@prod+2,f
  5248     0BD9  0DBB               	rlf	___flmul@prod+3,f
  5249     0BDA  0BAC               	decfsz	??___flmul,f
  5250     0BDB  2BD5               	goto	u3705
  5251     0BDC                     l2378:
  5252     0BDC  1FB5               	btfss	___flmul@grs+3,7
  5253     0BDD  2BDF               	goto	u3711
  5254     0BDE  2BE0               	goto	u3710
  5255     0BDF                     u3711:
  5256     0BDF  2BE1               	goto	l2382
  5257     0BE0                     u3710:
  5258     0BE0                     l2380:
  5259     0BE0  1438               	bsf	___flmul@prod,0
  5260     0BE1                     l2382:
  5261     0BE1  3001               	movlw	1
  5262     0BE2  00AC               	movwf	??___flmul
  5263     0BE3                     u3725:
  5264     0BE3  1003               	clrc
  5265     0BE4  0DB2               	rlf	___flmul@grs,f
  5266     0BE5  0DB3               	rlf	___flmul@grs+1,f
  5267     0BE6  0DB4               	rlf	___flmul@grs+2,f
  5268     0BE7  0DB5               	rlf	___flmul@grs+3,f
  5269     0BE8  0BAC               	decfsz	??___flmul,f
  5270     0BE9  2BE3               	goto	u3725
  5271     0BEA                     l2384:
  5272     0BEA  30FF               	movlw	255
  5273     0BEB  07BC               	addwf	___flmul@temp,f
  5274     0BEC  1803               	skipnc
  5275     0BED  0ABD               	incf	___flmul@temp+1,f
  5276     0BEE  30FF               	movlw	255
  5277     0BEF  07BD               	addwf	___flmul@temp+1,f
  5278     0BF0                     l2386:
  5279     0BF0  1FBA               	btfss	___flmul@prod+2,7
  5280     0BF1  2BF3               	goto	u3731
  5281     0BF2  2BF4               	goto	u3730
  5282     0BF3                     u3731:
  5283     0BF3  2BD3               	goto	l2376
  5284     0BF4                     u3730:
  5285     0BF4                     l2388:
  5286     0BF4  01B6               	clrf	___flmul@aexp
  5287     0BF5                     l2390:
  5288     0BF5  1FB5               	btfss	___flmul@grs+3,7
  5289     0BF6  2BF8               	goto	u3741
  5290     0BF7  2BF9               	goto	u3740
  5291     0BF8                     u3741:
  5292     0BF8  2C15               	goto	l2398
  5293     0BF9                     u3740:
  5294     0BF9                     l2392:
  5295     0BF9  30FF               	movlw	255
  5296     0BFA  0532               	andwf	___flmul@grs,w
  5297     0BFB  00AC               	movwf	??___flmul
  5298     0BFC  30FF               	movlw	255
  5299     0BFD  0533               	andwf	___flmul@grs+1,w
  5300     0BFE  00AD               	movwf	??___flmul+1
  5301     0BFF  30FF               	movlw	255
  5302     0C00  0534               	andwf	___flmul@grs+2,w
  5303     0C01  00AE               	movwf	??___flmul+2
  5304     0C02  307F               	movlw	127
  5305     0C03  0535               	andwf	___flmul@grs+3,w
  5306     0C04  00AF               	movwf	??___flmul+3
  5307     0C05  082F               	movf	??___flmul+3,w
  5308     0C06  042E               	iorwf	??___flmul+2,w
  5309     0C07  042D               	iorwf	??___flmul+1,w
  5310     0C08  042C               	iorwf	??___flmul,w
  5311     0C09  1903               	skipnz
  5312     0C0A  2C0C               	goto	u3751
  5313     0C0B  2C0D               	goto	u3750
  5314     0C0C                     u3751:
  5315     0C0C  2C10               	goto	l665
  5316     0C0D                     u3750:
  5317     0C0D                     l2394:
  5318     0C0D  01B6               	clrf	___flmul@aexp
  5319     0C0E  0AB6               	incf	___flmul@aexp,f
  5320     0C0F  2C15               	goto	l2398
  5321     0C10                     l665:
  5322     0C10  1C38               	btfss	___flmul@prod,0
  5323     0C11  2C13               	goto	u3761
  5324     0C12  2C14               	goto	u3760
  5325     0C13                     u3761:
  5326     0C13  2C15               	goto	l2398
  5327     0C14                     u3760:
  5328     0C14  2C0D               	goto	l2394
  5329     0C15                     l2398:
  5330     0C15  0836               	movf	___flmul@aexp,w
  5331     0C16  1903               	btfsc	3,2
  5332     0C17  2C19               	goto	u3771
  5333     0C18  2C1A               	goto	u3770
  5334     0C19                     u3771:
  5335     0C19  2C4B               	goto	l2408
  5336     0C1A                     u3770:
  5337     0C1A                     l2400:
  5338     0C1A  3001               	movlw	1
  5339     0C1B  07B8               	addwf	___flmul@prod,f
  5340     0C1C  3000               	movlw	0
  5341     0C1D  1803               	skipnc
  5342     0C1E  3001               	movlw	1
  5343     0C1F  07B9               	addwf	___flmul@prod+1,f
  5344     0C20  3000               	movlw	0
  5345     0C21  1803               	skipnc
  5346     0C22  3001               	movlw	1
  5347     0C23  07BA               	addwf	___flmul@prod+2,f
  5348     0C24  3000               	movlw	0
  5349     0C25  1803               	skipnc
  5350     0C26  3001               	movlw	1
  5351     0C27  07BB               	addwf	___flmul@prod+3,f
  5352     0C28                     l2402:
  5353     0C28  1C3B               	btfss	___flmul@prod+3,0
  5354     0C29  2C2B               	goto	u3781
  5355     0C2A  2C2C               	goto	u3780
  5356     0C2B                     u3781:
  5357     0C2B  2C4B               	goto	l2408
  5358     0C2C                     u3780:
  5359     0C2C                     l2404:
  5360     0C2C  0838               	movf	___flmul@prod,w
  5361     0C2D  00AC               	movwf	??___flmul
  5362     0C2E  0839               	movf	___flmul@prod+1,w
  5363     0C2F  00AD               	movwf	??___flmul+1
  5364     0C30  083A               	movf	___flmul@prod+2,w
  5365     0C31  00AE               	movwf	??___flmul+2
  5366     0C32  083B               	movf	___flmul@prod+3,w
  5367     0C33  00AF               	movwf	??___flmul+3
  5368     0C34  3001               	movlw	1
  5369     0C35  00B0               	movwf	??___flmul+4
  5370     0C36                     u3795:
  5371     0C36  0D2F               	rlf	??___flmul+3,w
  5372     0C37  0CAF               	rrf	??___flmul+3,f
  5373     0C38  0CAE               	rrf	??___flmul+2,f
  5374     0C39  0CAD               	rrf	??___flmul+1,f
  5375     0C3A  0CAC               	rrf	??___flmul,f
  5376     0C3B                     u3790:
  5377     0C3B  0BB0               	decfsz	??___flmul+4,f
  5378     0C3C  2C36               	goto	u3795
  5379     0C3D  082F               	movf	??___flmul+3,w
  5380     0C3E  00BB               	movwf	___flmul@prod+3
  5381     0C3F  082E               	movf	??___flmul+2,w
  5382     0C40  00BA               	movwf	___flmul@prod+2
  5383     0C41  082D               	movf	??___flmul+1,w
  5384     0C42  00B9               	movwf	___flmul@prod+1
  5385     0C43  082C               	movf	??___flmul,w
  5386     0C44  00B8               	movwf	___flmul@prod
  5387     0C45                     l2406:
  5388     0C45  3001               	movlw	1
  5389     0C46  07BC               	addwf	___flmul@temp,f
  5390     0C47  1803               	skipnc
  5391     0C48  0ABD               	incf	___flmul@temp+1,f
  5392     0C49  3000               	movlw	0
  5393     0C4A  07BD               	addwf	___flmul@temp+1,f
  5394     0C4B                     l2408:
  5395     0C4B  083D               	movf	___flmul@temp+1,w
  5396     0C4C  3A80               	xorlw	128
  5397     0C4D  00FF               	movwf	btemp+1
  5398     0C4E  3080               	movlw	128
  5399     0C4F  027F               	subwf	btemp+1,w
  5400     0C50  1D03               	skipz
  5401     0C51  2C54               	goto	u3805
  5402     0C52  30FF               	movlw	255
  5403     0C53  023C               	subwf	___flmul@temp,w
  5404     0C54                     u3805:
  5405     0C54  1C03               	skipc
  5406     0C55  2C57               	goto	u3801
  5407     0C56  2C58               	goto	u3800
  5408     0C57                     u3801:
  5409     0C57  2C63               	goto	l2412
  5410     0C58                     u3800:
  5411     0C58                     l2410:
  5412     0C58  307F               	movlw	127
  5413     0C59  1283               	bcf	3,5	;RP0=0, select bank0
  5414     0C5A  1303               	bcf	3,6	;RP1=0, select bank0
  5415     0C5B  00BB               	movwf	___flmul@prod+3
  5416     0C5C  3080               	movlw	128
  5417     0C5D  00BA               	movwf	___flmul@prod+2
  5418     0C5E  3000               	movlw	0
  5419     0C5F  00B9               	movwf	___flmul@prod+1
  5420     0C60  3000               	movlw	0
  5421     0C61  00B8               	movwf	___flmul@prod
  5422     0C62  2C94               	goto	l671
  5423     0C63                     l2412:
  5424     0C63  1283               	bcf	3,5	;RP0=0, select bank0
  5425     0C64  1303               	bcf	3,6	;RP1=0, select bank0
  5426     0C65  083D               	movf	___flmul@temp+1,w
  5427     0C66  3A80               	xorlw	128
  5428     0C67  00FF               	movwf	btemp+1
  5429     0C68  3080               	movlw	128
  5430     0C69  027F               	subwf	btemp+1,w
  5431     0C6A  1D03               	skipz
  5432     0C6B  2C6E               	goto	u3815
  5433     0C6C  3001               	movlw	1
  5434     0C6D  023C               	subwf	___flmul@temp,w
  5435     0C6E                     u3815:
  5436     0C6E  1803               	skipnc
  5437     0C6F  2C71               	goto	u3811
  5438     0C70  2C72               	goto	u3810
  5439     0C71                     u3811:
  5440     0C71  2C7E               	goto	l2418
  5441     0C72                     u3810:
  5442     0C72                     l2414:
  5443     0C72  3000               	movlw	0
  5444     0C73  1283               	bcf	3,5	;RP0=0, select bank0
  5445     0C74  1303               	bcf	3,6	;RP1=0, select bank0
  5446     0C75  00BB               	movwf	___flmul@prod+3
  5447     0C76  3000               	movlw	0
  5448     0C77  00BA               	movwf	___flmul@prod+2
  5449     0C78  3000               	movlw	0
  5450     0C79  00B9               	movwf	___flmul@prod+1
  5451     0C7A  3000               	movlw	0
  5452     0C7B  00B8               	movwf	___flmul@prod
  5453     0C7C                     l2416:
  5454     0C7C  01B1               	clrf	___flmul@sign
  5455     0C7D  2C94               	goto	l671
  5456     0C7E                     l2418:
  5457     0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  5458     0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  5459     0C80  083C               	movf	___flmul@temp,w
  5460     0C81  00B7               	movwf	___flmul@bexp
  5461     0C82  30FF               	movlw	255
  5462     0C83  05B8               	andwf	___flmul@prod,f
  5463     0C84  30FF               	movlw	255
  5464     0C85  05B9               	andwf	___flmul@prod+1,f
  5465     0C86  307F               	movlw	127
  5466     0C87  05BA               	andwf	___flmul@prod+2,f
  5467     0C88  3000               	movlw	0
  5468     0C89  05BB               	andwf	___flmul@prod+3,f
  5469     0C8A                     l2420:
  5470     0C8A  1C37               	btfss	___flmul@bexp,0
  5471     0C8B  2C8D               	goto	u3821
  5472     0C8C  2C8E               	goto	u3820
  5473     0C8D                     u3821:
  5474     0C8D  2C8F               	goto	l2424
  5475     0C8E                     u3820:
  5476     0C8E                     l2422:
  5477     0C8E  17BA               	bsf	___flmul@prod+2,7
  5478     0C8F                     l2424:
  5479     0C8F  0837               	movf	___flmul@bexp,w
  5480     0C90  00AC               	movwf	??___flmul
  5481     0C91  1003               	clrc
  5482     0C92  0C2C               	rrf	??___flmul,w
  5483     0C93  00BB               	movwf	___flmul@prod+3
  5484     0C94                     l671:
  5485     0C94  0831               	movf	___flmul@sign,w
  5486     0C95  00AC               	movwf	??___flmul
  5487     0C96  082C               	movf	??___flmul,w
  5488     0C97  04BB               	iorwf	___flmul@prod+3,f
  5489     0C98                     l2426:
  5490     0C98  083B               	movf	___flmul@prod+3,w
  5491     0C99  00A7               	movwf	?___flmul+3
  5492     0C9A  083A               	movf	___flmul@prod+2,w
  5493     0C9B  00A6               	movwf	?___flmul+2
  5494     0C9C  0839               	movf	___flmul@prod+1,w
  5495     0C9D  00A5               	movwf	?___flmul+1
  5496     0C9E  0838               	movf	___flmul@prod,w
  5497     0C9F  00A4               	movwf	?___flmul
  5498     0CA0                     l659:
  5499     0CA0  0008               	return
  5500     0CA1                     __end_of___flmul:
  5501                           
  5502                           	psect	text9
  5503     1F62                     __ptext9:	
  5504 ;; *************** function __Umul8_16 *****************
  5505 ;; Defined at:
  5506 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  5507 ;; Parameters:    Size  Location     Type
  5508 ;;  multiplier      1    wreg     unsigned char 
  5509 ;;  multiplicand    1    0[COMMON] unsigned char 
  5510 ;; Auto vars:     Size  Location     Type
  5511 ;;  multiplier      1    8[COMMON] unsigned char 
  5512 ;;  word_mpld       2    6[COMMON] unsigned int 
  5513 ;;  product         2    4[COMMON] unsigned int 
  5514 ;; Return value:  Size  Location     Type
  5515 ;;                  2    0[COMMON] unsigned int 
  5516 ;; Registers used:
  5517 ;;		wreg, status,2, status,0
  5518 ;; Tracked objects:
  5519 ;;		On entry : 0/0
  5520 ;;		On exit  : 0/0
  5521 ;;		Unchanged: 0/0
  5522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5523 ;;      Params:         2       0       0       0       0
  5524 ;;      Locals:         5       0       0       0       0
  5525 ;;      Temps:          2       0       0       0       0
  5526 ;;      Totals:         9       0       0       0       0
  5527 ;;Total ram usage:        9 bytes
  5528 ;; Hardware stack levels used: 1
  5529 ;; This function calls:
  5530 ;;		Nothing
  5531 ;; This function is called by:
  5532 ;;		___flmul
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536     1F62                     __Umul8_16:	
  5537                           ;psect for function __Umul8_16
  5538                           
  5539                           
  5540                           ;incstack = 0
  5541                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5542                           ;__Umul8_16@multiplier stored from wreg
  5543     1F62  00F8               	movwf	__Umul8_16@multiplier
  5544     1F63                     l1942:
  5545     1F63  01F4               	clrf	__Umul8_16@product
  5546     1F64  01F5               	clrf	__Umul8_16@product+1
  5547     1F65                     l1944:
  5548     1F65  0870               	movf	__Umul8_16@multiplicand,w
  5549     1F66  00F2               	movwf	??__Umul8_16
  5550     1F67  01F3               	clrf	??__Umul8_16+1
  5551     1F68  0872               	movf	??__Umul8_16,w
  5552     1F69  00F6               	movwf	__Umul8_16@word_mpld
  5553     1F6A  0873               	movf	??__Umul8_16+1,w
  5554     1F6B  00F7               	movwf	__Umul8_16@word_mpld+1
  5555     1F6C                     l1946:
  5556     1F6C  1C78               	btfss	__Umul8_16@multiplier,0
  5557     1F6D  2F6F               	goto	u2611
  5558     1F6E  2F70               	goto	u2610
  5559     1F6F                     u2611:
  5560     1F6F  2F76               	goto	l678
  5561     1F70                     u2610:
  5562     1F70                     l1948:
  5563     1F70  0876               	movf	__Umul8_16@word_mpld,w
  5564     1F71  07F4               	addwf	__Umul8_16@product,f
  5565     1F72  1803               	skipnc
  5566     1F73  0AF5               	incf	__Umul8_16@product+1,f
  5567     1F74  0877               	movf	__Umul8_16@word_mpld+1,w
  5568     1F75  07F5               	addwf	__Umul8_16@product+1,f
  5569     1F76                     l678:
  5570     1F76  3001               	movlw	1
  5571     1F77                     u2625:
  5572     1F77  1003               	clrc
  5573     1F78  0DF6               	rlf	__Umul8_16@word_mpld,f
  5574     1F79  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5575     1F7A  3EFF               	addlw	-1
  5576     1F7B  1D03               	skipz
  5577     1F7C  2F77               	goto	u2625
  5578     1F7D  1003               	clrc
  5579     1F7E  0CF8               	rrf	__Umul8_16@multiplier,f
  5580     1F7F                     l1950:
  5581     1F7F  0878               	movf	__Umul8_16@multiplier,w
  5582     1F80  1D03               	btfss	3,2
  5583     1F81  2F83               	goto	u2631
  5584     1F82  2F84               	goto	u2630
  5585     1F83                     u2631:
  5586     1F83  2F6C               	goto	l1946
  5587     1F84                     u2630:
  5588     1F84                     l1952:
  5589     1F84  0875               	movf	__Umul8_16@product+1,w
  5590     1F85  00F1               	movwf	?__Umul8_16+1
  5591     1F86  0874               	movf	__Umul8_16@product,w
  5592     1F87  00F0               	movwf	?__Umul8_16
  5593     1F88                     l680:
  5594     1F88  0008               	return
  5595     1F89                     __end_of__Umul8_16:
  5596                           
  5597                           	psect	text10
  5598     1439                     __ptext10:	
  5599 ;; *************** function __tdiv_to_l_ *****************
  5600 ;; Defined at:
  5601 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftdivl.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;  f1              4    0[COMMON] float 
  5604 ;;  f2              4    4[COMMON] float 
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;  quot            4    0[BANK0 ] unsigned long 
  5607 ;;  exp1            1    5[BANK0 ] unsigned char 
  5608 ;;  cntr            1    4[BANK0 ] unsigned char 
  5609 ;; Return value:  Size  Location     Type
  5610 ;;                  4    0[COMMON] unsigned long 
  5611 ;; Registers used:
  5612 ;;		wreg, status,2, status,0
  5613 ;; Tracked objects:
  5614 ;;		On entry : 0/0
  5615 ;;		On exit  : 0/0
  5616 ;;		Unchanged: 0/0
  5617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5618 ;;      Params:         8       0       0       0       0
  5619 ;;      Locals:         0       6       0       0       0
  5620 ;;      Temps:          3       0       0       0       0
  5621 ;;      Totals:        11       6       0       0       0
  5622 ;;Total ram usage:       17 bytes
  5623 ;; Hardware stack levels used: 1
  5624 ;; This function calls:
  5625 ;;		Nothing
  5626 ;; This function is called by:
  5627 ;;		_sprintf
  5628 ;; This function uses a non-reentrant model
  5629 ;;
  5630                           
  5631     1439                     __tdiv_to_l_:	
  5632                           ;psect for function __tdiv_to_l_
  5633                           
  5634     1439                     l2518:	
  5635                           ;incstack = 0
  5636                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5637                           
  5638     1439  0870               	movf	__tdiv_to_l_@f1,w
  5639     143A  00F8               	movwf	??__tdiv_to_l_
  5640     143B  0871               	movf	__tdiv_to_l_@f1+1,w
  5641     143C  00F9               	movwf	??__tdiv_to_l_+1
  5642     143D  0872               	movf	__tdiv_to_l_@f1+2,w
  5643     143E  00FA               	movwf	??__tdiv_to_l_+2
  5644     143F  1003               	clrc
  5645     1440  0D79               	rlf	??__tdiv_to_l_+1,w
  5646     1441  0D7A               	rlf	??__tdiv_to_l_+2,w
  5647     1442  1283               	bcf	3,5	;RP0=0, select bank0
  5648     1443  1303               	bcf	3,6	;RP1=0, select bank0
  5649     1444  00A5               	movwf	__tdiv_to_l_@exp1
  5650     1445  0825               	movf	__tdiv_to_l_@exp1,w
  5651     1446  1D03               	btfss	3,2
  5652     1447  2C49               	goto	u4091
  5653     1448  2C4A               	goto	u4090
  5654     1449                     u4091:
  5655     1449  2C53               	goto	l2524
  5656     144A                     u4090:
  5657     144A                     l2520:
  5658     144A  3000               	movlw	0
  5659     144B  00F3               	movwf	?__tdiv_to_l_+3
  5660     144C  3000               	movlw	0
  5661     144D  00F2               	movwf	?__tdiv_to_l_+2
  5662     144E  3000               	movlw	0
  5663     144F  00F1               	movwf	?__tdiv_to_l_+1
  5664     1450  3000               	movlw	0
  5665     1451  00F0               	movwf	?__tdiv_to_l_
  5666     1452  2CEF               	goto	l453
  5667     1453                     l2524:
  5668     1453  0874               	movf	__tdiv_to_l_@f2,w
  5669     1454  00F8               	movwf	??__tdiv_to_l_
  5670     1455  0875               	movf	__tdiv_to_l_@f2+1,w
  5671     1456  00F9               	movwf	??__tdiv_to_l_+1
  5672     1457  0876               	movf	__tdiv_to_l_@f2+2,w
  5673     1458  00FA               	movwf	??__tdiv_to_l_+2
  5674     1459  1003               	clrc
  5675     145A  0D79               	rlf	??__tdiv_to_l_+1,w
  5676     145B  0D7A               	rlf	??__tdiv_to_l_+2,w
  5677     145C  00A4               	movwf	__tdiv_to_l_@cntr
  5678     145D  0824               	movf	__tdiv_to_l_@cntr,w
  5679     145E  1D03               	btfss	3,2
  5680     145F  2C61               	goto	u4101
  5681     1460  2C62               	goto	u4100
  5682     1461                     u4101:
  5683     1461  2C63               	goto	l454
  5684     1462                     u4100:
  5685     1462  2C4A               	goto	l2520
  5686     1463                     l454:
  5687     1463  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5688     1464                     l2530:
  5689     1464  30FF               	movlw	255
  5690     1465  05F0               	andwf	__tdiv_to_l_@f1,f
  5691     1466  30FF               	movlw	255
  5692     1467  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5693     1468  3000               	movlw	0
  5694     1469  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5695     146A                     l2532:
  5696     146A  17F5               	bsf	__tdiv_to_l_@f2+1,7
  5697     146B  30FF               	movlw	255
  5698     146C  05F4               	andwf	__tdiv_to_l_@f2,f
  5699     146D  30FF               	movlw	255
  5700     146E  05F5               	andwf	__tdiv_to_l_@f2+1,f
  5701     146F  3000               	movlw	0
  5702     1470  05F6               	andwf	__tdiv_to_l_@f2+2,f
  5703     1471  3000               	movlw	0
  5704     1472  00A3               	movwf	__tdiv_to_l_@quot+3
  5705     1473  3000               	movlw	0
  5706     1474  00A2               	movwf	__tdiv_to_l_@quot+2
  5707     1475  3000               	movlw	0
  5708     1476  00A1               	movwf	__tdiv_to_l_@quot+1
  5709     1477  3000               	movlw	0
  5710     1478  00A0               	movwf	__tdiv_to_l_@quot
  5711     1479                     l2534:
  5712     1479  307F               	movlw	127
  5713     147A  02A5               	subwf	__tdiv_to_l_@exp1,f
  5714     147B                     l2536:
  5715     147B  3098               	movlw	152
  5716     147C  0724               	addwf	__tdiv_to_l_@cntr,w
  5717     147D  00F8               	movwf	??__tdiv_to_l_
  5718     147E  0878               	movf	??__tdiv_to_l_,w
  5719     147F  02A5               	subwf	__tdiv_to_l_@exp1,f
  5720     1480  3018               	movlw	24
  5721     1481  00A4               	movwf	__tdiv_to_l_@cntr
  5722     1482                     l2538:
  5723     1482  3001               	movlw	1
  5724     1483  00F8               	movwf	??__tdiv_to_l_
  5725     1484                     u4115:
  5726     1484  1003               	clrc
  5727     1485  0DA0               	rlf	__tdiv_to_l_@quot,f
  5728     1486  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5729     1487  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5730     1488  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5731     1489  0BF8               	decfsz	??__tdiv_to_l_,f
  5732     148A  2C84               	goto	u4115
  5733     148B                     l2540:
  5734     148B  0876               	movf	__tdiv_to_l_@f2+2,w
  5735     148C  0272               	subwf	__tdiv_to_l_@f1+2,w
  5736     148D  1D03               	skipz
  5737     148E  2C95               	goto	u4125
  5738     148F  0875               	movf	__tdiv_to_l_@f2+1,w
  5739     1490  0271               	subwf	__tdiv_to_l_@f1+1,w
  5740     1491  1D03               	skipz
  5741     1492  2C95               	goto	u4125
  5742     1493  0874               	movf	__tdiv_to_l_@f2,w
  5743     1494  0270               	subwf	__tdiv_to_l_@f1,w
  5744     1495                     u4125:
  5745     1495  1C03               	skipc
  5746     1496  2C98               	goto	u4121
  5747     1497  2C99               	goto	u4120
  5748     1498                     u4121:
  5749     1498  2CA4               	goto	l2546
  5750     1499                     u4120:
  5751     1499                     l2542:
  5752     1499  0874               	movf	__tdiv_to_l_@f2,w
  5753     149A  02F0               	subwf	__tdiv_to_l_@f1,f
  5754     149B  0875               	movf	__tdiv_to_l_@f2+1,w
  5755     149C  1C03               	skipc
  5756     149D  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  5757     149E  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5758     149F  0876               	movf	__tdiv_to_l_@f2+2,w
  5759     14A0  1C03               	skipc
  5760     14A1  0A76               	incf	__tdiv_to_l_@f2+2,w
  5761     14A2  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5762     14A3                     l2544:
  5763     14A3  1420               	bsf	__tdiv_to_l_@quot,0
  5764     14A4                     l2546:
  5765     14A4  3001               	movlw	1
  5766     14A5                     u4135:
  5767     14A5  1003               	clrc
  5768     14A6  0DF0               	rlf	__tdiv_to_l_@f1,f
  5769     14A7  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5770     14A8  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5771     14A9  3EFF               	addlw	-1
  5772     14AA  1D03               	skipz
  5773     14AB  2CA5               	goto	u4135
  5774     14AC                     l2548:
  5775     14AC  3001               	movlw	1
  5776     14AD  02A4               	subwf	__tdiv_to_l_@cntr,f
  5777     14AE  1D03               	btfss	3,2
  5778     14AF  2CB1               	goto	u4141
  5779     14B0  2CB2               	goto	u4140
  5780     14B1                     u4141:
  5781     14B1  2C82               	goto	l2538
  5782     14B2                     u4140:
  5783     14B2                     l457:
  5784     14B2  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5785     14B3  2CB5               	goto	u4151
  5786     14B4  2CB6               	goto	u4150
  5787     14B5                     u4151:
  5788     14B5  2CD0               	goto	l2558
  5789     14B6                     u4150:
  5790     14B6                     l2550:
  5791     14B6  0825               	movf	__tdiv_to_l_@exp1,w
  5792     14B7  3A80               	xorlw	128
  5793     14B8  3E97               	addlw	151
  5794     14B9  1803               	skipnc
  5795     14BA  2CBC               	goto	u4161
  5796     14BB  2CBD               	goto	u4160
  5797     14BC                     u4161:
  5798     14BC  2CBE               	goto	l2556
  5799     14BD                     u4160:
  5800     14BD  2C4A               	goto	l2520
  5801     14BE                     l2556:
  5802     14BE  3001               	movlw	1
  5803     14BF                     u4175:
  5804     14BF  1003               	clrc
  5805     14C0  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5806     14C1  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5807     14C2  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5808     14C3  0CA0               	rrf	__tdiv_to_l_@quot,f
  5809     14C4  3EFF               	addlw	-1
  5810     14C5  1D03               	skipz
  5811     14C6  2CBF               	goto	u4175
  5812     14C7  3001               	movlw	1
  5813     14C8  00F8               	movwf	??__tdiv_to_l_
  5814     14C9  0878               	movf	??__tdiv_to_l_,w
  5815     14CA  07A5               	addwf	__tdiv_to_l_@exp1,f
  5816     14CB  1D03               	btfss	3,2
  5817     14CC  2CCE               	goto	u4181
  5818     14CD  2CCF               	goto	u4180
  5819     14CE                     u4181:
  5820     14CE  2CBE               	goto	l2556
  5821     14CF                     u4180:
  5822     14CF  2CE7               	goto	l2566
  5823     14D0                     l2558:
  5824     14D0  3018               	movlw	24
  5825     14D1  0225               	subwf	__tdiv_to_l_@exp1,w
  5826     14D2  1C03               	skipc
  5827     14D3  2CD5               	goto	u4191
  5828     14D4  2CD6               	goto	u4190
  5829     14D5                     u4191:
  5830     14D5  2CE2               	goto	l464
  5831     14D6                     u4190:
  5832     14D6  2C4A               	goto	l2520
  5833     14D7                     l2564:
  5834     14D7  3001               	movlw	1
  5835     14D8  00F8               	movwf	??__tdiv_to_l_
  5836     14D9                     u4205:
  5837     14D9  1003               	clrc
  5838     14DA  0DA0               	rlf	__tdiv_to_l_@quot,f
  5839     14DB  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5840     14DC  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5841     14DD  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5842     14DE  0BF8               	decfsz	??__tdiv_to_l_,f
  5843     14DF  2CD9               	goto	u4205
  5844     14E0  3001               	movlw	1
  5845     14E1  02A5               	subwf	__tdiv_to_l_@exp1,f
  5846     14E2                     l464:
  5847     14E2  0825               	movf	__tdiv_to_l_@exp1,w
  5848     14E3  1D03               	btfss	3,2
  5849     14E4  2CE6               	goto	u4211
  5850     14E5  2CE7               	goto	u4210
  5851     14E6                     u4211:
  5852     14E6  2CD7               	goto	l2564
  5853     14E7                     u4210:
  5854     14E7                     l2566:
  5855     14E7  0823               	movf	__tdiv_to_l_@quot+3,w
  5856     14E8  00F3               	movwf	?__tdiv_to_l_+3
  5857     14E9  0822               	movf	__tdiv_to_l_@quot+2,w
  5858     14EA  00F2               	movwf	?__tdiv_to_l_+2
  5859     14EB  0821               	movf	__tdiv_to_l_@quot+1,w
  5860     14EC  00F1               	movwf	?__tdiv_to_l_+1
  5861     14ED  0820               	movf	__tdiv_to_l_@quot,w
  5862     14EE  00F0               	movwf	?__tdiv_to_l_
  5863     14EF                     l453:
  5864     14EF  0008               	return
  5865     14F0                     __end_of__tdiv_to_l_:
  5866                           
  5867                           	psect	text11
  5868     08A4                     __ptext11:	
  5869 ;; *************** function __div_to_l_ *****************
  5870 ;; Defined at:
  5871 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fldivl.c"
  5872 ;; Parameters:    Size  Location     Type
  5873 ;;  f1              4    0[COMMON] unsigned long 
  5874 ;;  f2              4    4[COMMON] unsigned long 
  5875 ;; Auto vars:     Size  Location     Type
  5876 ;;  quot            4    0[BANK0 ] unsigned long 
  5877 ;;  exp1            1    5[BANK0 ] unsigned char 
  5878 ;;  cntr            1    4[BANK0 ] unsigned char 
  5879 ;; Return value:  Size  Location     Type
  5880 ;;                  4    0[COMMON] unsigned long 
  5881 ;; Registers used:
  5882 ;;		wreg, status,2, status,0
  5883 ;; Tracked objects:
  5884 ;;		On entry : 0/0
  5885 ;;		On exit  : 0/0
  5886 ;;		Unchanged: 0/0
  5887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5888 ;;      Params:         8       0       0       0       0
  5889 ;;      Locals:         0       6       0       0       0
  5890 ;;      Temps:          1       0       0       0       0
  5891 ;;      Totals:         9       6       0       0       0
  5892 ;;Total ram usage:       15 bytes
  5893 ;; Hardware stack levels used: 1
  5894 ;; This function calls:
  5895 ;;		Nothing
  5896 ;; This function is called by:
  5897 ;;		_sprintf
  5898 ;; This function uses a non-reentrant model
  5899 ;;
  5900                           
  5901     08A4                     __div_to_l_:	
  5902                           ;psect for function __div_to_l_
  5903                           
  5904     08A4                     l2570:	
  5905                           ;incstack = 0
  5906                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5907                           
  5908     08A4  1003               	clrc
  5909     08A5  0D72               	rlf	__div_to_l_@f1+2,w
  5910     08A6  0D73               	rlf	__div_to_l_@f1+3,w
  5911     08A7  1283               	bcf	3,5	;RP0=0, select bank0
  5912     08A8  1303               	bcf	3,6	;RP1=0, select bank0
  5913     08A9  00A5               	movwf	__div_to_l_@exp1
  5914     08AA  0825               	movf	__div_to_l_@exp1,w
  5915     08AB  1D03               	btfss	3,2
  5916     08AC  28AE               	goto	u4221
  5917     08AD  28AF               	goto	u4220
  5918     08AE                     u4221:
  5919     08AE  28B8               	goto	l2576
  5920     08AF                     u4220:
  5921     08AF                     l2572:
  5922     08AF  3000               	movlw	0
  5923     08B0  00F3               	movwf	?__div_to_l_+3
  5924     08B1  3000               	movlw	0
  5925     08B2  00F2               	movwf	?__div_to_l_+2
  5926     08B3  3000               	movlw	0
  5927     08B4  00F1               	movwf	?__div_to_l_+1
  5928     08B5  3000               	movlw	0
  5929     08B6  00F0               	movwf	?__div_to_l_
  5930     08B7  295B               	goto	l406
  5931     08B8                     l2576:
  5932     08B8  1003               	clrc
  5933     08B9  0D76               	rlf	__div_to_l_@f2+2,w
  5934     08BA  0D77               	rlf	__div_to_l_@f2+3,w
  5935     08BB  00A4               	movwf	__div_to_l_@cntr
  5936     08BC  0824               	movf	__div_to_l_@cntr,w
  5937     08BD  1D03               	btfss	3,2
  5938     08BE  28C0               	goto	u4231
  5939     08BF  28C1               	goto	u4230
  5940     08C0                     u4231:
  5941     08C0  28C2               	goto	l407
  5942     08C1                     u4230:
  5943     08C1  28AF               	goto	l2572
  5944     08C2                     l407:
  5945     08C2  17F2               	bsf	__div_to_l_@f1+2,7
  5946     08C3                     l2582:
  5947     08C3  30FF               	movlw	255
  5948     08C4  05F0               	andwf	__div_to_l_@f1,f
  5949     08C5  30FF               	movlw	255
  5950     08C6  05F1               	andwf	__div_to_l_@f1+1,f
  5951     08C7  30FF               	movlw	255
  5952     08C8  05F2               	andwf	__div_to_l_@f1+2,f
  5953     08C9  3000               	movlw	0
  5954     08CA  05F3               	andwf	__div_to_l_@f1+3,f
  5955     08CB                     l2584:
  5956     08CB  17F6               	bsf	__div_to_l_@f2+2,7
  5957     08CC  30FF               	movlw	255
  5958     08CD  05F4               	andwf	__div_to_l_@f2,f
  5959     08CE  30FF               	movlw	255
  5960     08CF  05F5               	andwf	__div_to_l_@f2+1,f
  5961     08D0  30FF               	movlw	255
  5962     08D1  05F6               	andwf	__div_to_l_@f2+2,f
  5963     08D2  3000               	movlw	0
  5964     08D3  05F7               	andwf	__div_to_l_@f2+3,f
  5965     08D4  3000               	movlw	0
  5966     08D5  00A3               	movwf	__div_to_l_@quot+3
  5967     08D6  3000               	movlw	0
  5968     08D7  00A2               	movwf	__div_to_l_@quot+2
  5969     08D8  3000               	movlw	0
  5970     08D9  00A1               	movwf	__div_to_l_@quot+1
  5971     08DA  3000               	movlw	0
  5972     08DB  00A0               	movwf	__div_to_l_@quot
  5973     08DC                     l2586:
  5974     08DC  307F               	movlw	127
  5975     08DD  02A5               	subwf	__div_to_l_@exp1,f
  5976     08DE                     l2588:
  5977     08DE  30A0               	movlw	160
  5978     08DF  0724               	addwf	__div_to_l_@cntr,w
  5979     08E0  00F8               	movwf	??__div_to_l_
  5980     08E1  0878               	movf	??__div_to_l_,w
  5981     08E2  02A5               	subwf	__div_to_l_@exp1,f
  5982     08E3  3020               	movlw	32
  5983     08E4  00A4               	movwf	__div_to_l_@cntr
  5984     08E5                     l2590:
  5985     08E5  3001               	movlw	1
  5986     08E6  00F8               	movwf	??__div_to_l_
  5987     08E7                     u4245:
  5988     08E7  1003               	clrc
  5989     08E8  0DA0               	rlf	__div_to_l_@quot,f
  5990     08E9  0DA1               	rlf	__div_to_l_@quot+1,f
  5991     08EA  0DA2               	rlf	__div_to_l_@quot+2,f
  5992     08EB  0DA3               	rlf	__div_to_l_@quot+3,f
  5993     08EC  0BF8               	decfsz	??__div_to_l_,f
  5994     08ED  28E7               	goto	u4245
  5995     08EE                     l2592:
  5996     08EE  0877               	movf	__div_to_l_@f2+3,w
  5997     08EF  0273               	subwf	__div_to_l_@f1+3,w
  5998     08F0  1D03               	skipz
  5999     08F1  28FC               	goto	u4255
  6000     08F2  0876               	movf	__div_to_l_@f2+2,w
  6001     08F3  0272               	subwf	__div_to_l_@f1+2,w
  6002     08F4  1D03               	skipz
  6003     08F5  28FC               	goto	u4255
  6004     08F6  0875               	movf	__div_to_l_@f2+1,w
  6005     08F7  0271               	subwf	__div_to_l_@f1+1,w
  6006     08F8  1D03               	skipz
  6007     08F9  28FC               	goto	u4255
  6008     08FA  0874               	movf	__div_to_l_@f2,w
  6009     08FB  0270               	subwf	__div_to_l_@f1,w
  6010     08FC                     u4255:
  6011     08FC  1C03               	skipc
  6012     08FD  28FF               	goto	u4251
  6013     08FE  2900               	goto	u4250
  6014     08FF                     u4251:
  6015     08FF  290F               	goto	l2598
  6016     0900                     u4250:
  6017     0900                     l2594:
  6018     0900  0874               	movf	__div_to_l_@f2,w
  6019     0901  02F0               	subwf	__div_to_l_@f1,f
  6020     0902  0875               	movf	__div_to_l_@f2+1,w
  6021     0903  1C03               	skipc
  6022     0904  0F75               	incfsz	__div_to_l_@f2+1,w
  6023     0905  02F1               	subwf	__div_to_l_@f1+1,f
  6024     0906  0876               	movf	__div_to_l_@f2+2,w
  6025     0907  1C03               	skipc
  6026     0908  0F76               	incfsz	__div_to_l_@f2+2,w
  6027     0909  02F2               	subwf	__div_to_l_@f1+2,f
  6028     090A  0877               	movf	__div_to_l_@f2+3,w
  6029     090B  1C03               	skipc
  6030     090C  0F77               	incfsz	__div_to_l_@f2+3,w
  6031     090D  02F3               	subwf	__div_to_l_@f1+3,f
  6032     090E                     l2596:
  6033     090E  1420               	bsf	__div_to_l_@quot,0
  6034     090F                     l2598:
  6035     090F  3001               	movlw	1
  6036     0910  00F8               	movwf	??__div_to_l_
  6037     0911                     u4265:
  6038     0911  1003               	clrc
  6039     0912  0DF0               	rlf	__div_to_l_@f1,f
  6040     0913  0DF1               	rlf	__div_to_l_@f1+1,f
  6041     0914  0DF2               	rlf	__div_to_l_@f1+2,f
  6042     0915  0DF3               	rlf	__div_to_l_@f1+3,f
  6043     0916  0BF8               	decfsz	??__div_to_l_,f
  6044     0917  2911               	goto	u4265
  6045     0918                     l2600:
  6046     0918  3001               	movlw	1
  6047     0919  02A4               	subwf	__div_to_l_@cntr,f
  6048     091A  1D03               	btfss	3,2
  6049     091B  291D               	goto	u4271
  6050     091C  291E               	goto	u4270
  6051     091D                     u4271:
  6052     091D  28E5               	goto	l2590
  6053     091E                     u4270:
  6054     091E                     l410:
  6055     091E  1FA5               	btfss	__div_to_l_@exp1,7
  6056     091F  2921               	goto	u4281
  6057     0920  2922               	goto	u4280
  6058     0921                     u4281:
  6059     0921  293C               	goto	l2610
  6060     0922                     u4280:
  6061     0922                     l2602:
  6062     0922  0825               	movf	__div_to_l_@exp1,w
  6063     0923  3A80               	xorlw	128
  6064     0924  3E9F               	addlw	159
  6065     0925  1803               	skipnc
  6066     0926  2928               	goto	u4291
  6067     0927  2929               	goto	u4290
  6068     0928                     u4291:
  6069     0928  292A               	goto	l2608
  6070     0929                     u4290:
  6071     0929  28AF               	goto	l2572
  6072     092A                     l2608:
  6073     092A  3001               	movlw	1
  6074     092B                     u4305:
  6075     092B  1003               	clrc
  6076     092C  0CA3               	rrf	__div_to_l_@quot+3,f
  6077     092D  0CA2               	rrf	__div_to_l_@quot+2,f
  6078     092E  0CA1               	rrf	__div_to_l_@quot+1,f
  6079     092F  0CA0               	rrf	__div_to_l_@quot,f
  6080     0930  3EFF               	addlw	-1
  6081     0931  1D03               	skipz
  6082     0932  292B               	goto	u4305
  6083     0933  3001               	movlw	1
  6084     0934  00F8               	movwf	??__div_to_l_
  6085     0935  0878               	movf	??__div_to_l_,w
  6086     0936  07A5               	addwf	__div_to_l_@exp1,f
  6087     0937  1D03               	btfss	3,2
  6088     0938  293A               	goto	u4311
  6089     0939  293B               	goto	u4310
  6090     093A                     u4311:
  6091     093A  292A               	goto	l2608
  6092     093B                     u4310:
  6093     093B  2953               	goto	l2618
  6094     093C                     l2610:
  6095     093C  3020               	movlw	32
  6096     093D  0225               	subwf	__div_to_l_@exp1,w
  6097     093E  1C03               	skipc
  6098     093F  2941               	goto	u4321
  6099     0940  2942               	goto	u4320
  6100     0941                     u4321:
  6101     0941  294E               	goto	l417
  6102     0942                     u4320:
  6103     0942  28AF               	goto	l2572
  6104     0943                     l2616:
  6105     0943  3001               	movlw	1
  6106     0944  00F8               	movwf	??__div_to_l_
  6107     0945                     u4335:
  6108     0945  1003               	clrc
  6109     0946  0DA0               	rlf	__div_to_l_@quot,f
  6110     0947  0DA1               	rlf	__div_to_l_@quot+1,f
  6111     0948  0DA2               	rlf	__div_to_l_@quot+2,f
  6112     0949  0DA3               	rlf	__div_to_l_@quot+3,f
  6113     094A  0BF8               	decfsz	??__div_to_l_,f
  6114     094B  2945               	goto	u4335
  6115     094C  3001               	movlw	1
  6116     094D  02A5               	subwf	__div_to_l_@exp1,f
  6117     094E                     l417:
  6118     094E  0825               	movf	__div_to_l_@exp1,w
  6119     094F  1D03               	btfss	3,2
  6120     0950  2952               	goto	u4341
  6121     0951  2953               	goto	u4340
  6122     0952                     u4341:
  6123     0952  2943               	goto	l2616
  6124     0953                     u4340:
  6125     0953                     l2618:
  6126     0953  0823               	movf	__div_to_l_@quot+3,w
  6127     0954  00F3               	movwf	?__div_to_l_+3
  6128     0955  0822               	movf	__div_to_l_@quot+2,w
  6129     0956  00F2               	movwf	?__div_to_l_+2
  6130     0957  0821               	movf	__div_to_l_@quot+1,w
  6131     0958  00F1               	movwf	?__div_to_l_+1
  6132     0959  0820               	movf	__div_to_l_@quot,w
  6133     095A  00F0               	movwf	?__div_to_l_
  6134     095B                     l406:
  6135     095B  0008               	return
  6136     095C                     __end_of__div_to_l_:
  6137                           
  6138                           	psect	text12
  6139     14F0                     __ptext12:	
  6140 ;; *************** function ___xxtofl *****************
  6141 ;; Defined at:
  6142 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  6143 ;; Parameters:    Size  Location     Type
  6144 ;;  sign            1    wreg     unsigned char 
  6145 ;;  val             4    0[COMMON] long 
  6146 ;; Auto vars:     Size  Location     Type
  6147 ;;  sign            1    8[COMMON] unsigned char 
  6148 ;;  arg             4   10[COMMON] unsigned long 
  6149 ;;  exp             1    9[COMMON] unsigned char 
  6150 ;; Return value:  Size  Location     Type
  6151 ;;                  4    0[COMMON] unsigned char 
  6152 ;; Registers used:
  6153 ;;		wreg, status,2, status,0
  6154 ;; Tracked objects:
  6155 ;;		On entry : 0/0
  6156 ;;		On exit  : 0/0
  6157 ;;		Unchanged: 0/0
  6158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6159 ;;      Params:         4       0       0       0       0
  6160 ;;      Locals:         6       0       0       0       0
  6161 ;;      Temps:          4       0       0       0       0
  6162 ;;      Totals:        14       0       0       0       0
  6163 ;;Total ram usage:       14 bytes
  6164 ;; Hardware stack levels used: 1
  6165 ;; This function calls:
  6166 ;;		Nothing
  6167 ;; This function is called by:
  6168 ;;		_sprintf
  6169 ;; This function uses a non-reentrant model
  6170 ;;
  6171                           
  6172     14F0                     ___xxtofl:	
  6173                           ;psect for function ___xxtofl
  6174                           
  6175                           
  6176                           ;incstack = 0
  6177                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6178                           ;___xxtofl@sign stored from wreg
  6179     14F0  00F8               	movwf	___xxtofl@sign
  6180     14F1                     l2762:
  6181     14F1  0878               	movf	___xxtofl@sign,w
  6182     14F2  1903               	btfsc	3,2
  6183     14F3  2CF5               	goto	u4731
  6184     14F4  2CF6               	goto	u4730
  6185     14F5                     u4731:
  6186     14F5  2D0A               	goto	l2768
  6187     14F6                     u4730:
  6188     14F6                     l2764:
  6189     14F6  1FF3               	btfss	___xxtofl@val+3,7
  6190     14F7  2CF9               	goto	u4741
  6191     14F8  2CFA               	goto	u4740
  6192     14F9                     u4741:
  6193     14F9  2D0A               	goto	l2768
  6194     14FA                     u4740:
  6195     14FA                     l2766:
  6196     14FA  0970               	comf	___xxtofl@val,w
  6197     14FB  00FA               	movwf	___xxtofl@arg
  6198     14FC  0971               	comf	___xxtofl@val+1,w
  6199     14FD  00FB               	movwf	___xxtofl@arg+1
  6200     14FE  0972               	comf	___xxtofl@val+2,w
  6201     14FF  00FC               	movwf	___xxtofl@arg+2
  6202     1500  0973               	comf	___xxtofl@val+3,w
  6203     1501  00FD               	movwf	___xxtofl@arg+3
  6204     1502  0AFA               	incf	___xxtofl@arg,f
  6205     1503  1903               	skipnz
  6206     1504  0AFB               	incf	___xxtofl@arg+1,f
  6207     1505  1903               	skipnz
  6208     1506  0AFC               	incf	___xxtofl@arg+2,f
  6209     1507  1903               	skipnz
  6210     1508  0AFD               	incf	___xxtofl@arg+3,f
  6211     1509  2D12               	goto	l703
  6212     150A                     l2768:
  6213     150A  0873               	movf	___xxtofl@val+3,w
  6214     150B  00FD               	movwf	___xxtofl@arg+3
  6215     150C  0872               	movf	___xxtofl@val+2,w
  6216     150D  00FC               	movwf	___xxtofl@arg+2
  6217     150E  0871               	movf	___xxtofl@val+1,w
  6218     150F  00FB               	movwf	___xxtofl@arg+1
  6219     1510  0870               	movf	___xxtofl@val,w
  6220     1511  00FA               	movwf	___xxtofl@arg
  6221     1512                     l703:
  6222     1512  0873               	movf	___xxtofl@val+3,w
  6223     1513  0472               	iorwf	___xxtofl@val+2,w
  6224     1514  0471               	iorwf	___xxtofl@val+1,w
  6225     1515  0470               	iorwf	___xxtofl@val,w
  6226     1516  1D03               	skipz
  6227     1517  2D19               	goto	u4751
  6228     1518  2D1A               	goto	u4750
  6229     1519                     u4751:
  6230     1519  2D23               	goto	l2774
  6231     151A                     u4750:
  6232     151A                     l2770:
  6233     151A  3000               	movlw	0
  6234     151B  00F3               	movwf	?___xxtofl+3
  6235     151C  3000               	movlw	0
  6236     151D  00F2               	movwf	?___xxtofl+2
  6237     151E  3000               	movlw	0
  6238     151F  00F1               	movwf	?___xxtofl+1
  6239     1520  3000               	movlw	0
  6240     1521  00F0               	movwf	?___xxtofl
  6241     1522  2DA7               	goto	l705
  6242     1523                     l2774:
  6243     1523  3096               	movlw	150
  6244     1524  00F9               	movwf	___xxtofl@exp
  6245     1525  2D33               	goto	l2778
  6246     1526                     l2776:
  6247     1526  3001               	movlw	1
  6248     1527  00F4               	movwf	??___xxtofl
  6249     1528  0874               	movf	??___xxtofl,w
  6250     1529  07F9               	addwf	___xxtofl@exp,f
  6251     152A  3001               	movlw	1
  6252     152B                     u4765:
  6253     152B  1003               	clrc
  6254     152C  0CFD               	rrf	___xxtofl@arg+3,f
  6255     152D  0CFC               	rrf	___xxtofl@arg+2,f
  6256     152E  0CFB               	rrf	___xxtofl@arg+1,f
  6257     152F  0CFA               	rrf	___xxtofl@arg,f
  6258     1530  3EFF               	addlw	-1
  6259     1531  1D03               	skipz
  6260     1532  2D2B               	goto	u4765
  6261     1533                     l2778:
  6262     1533  30FE               	movlw	254
  6263     1534  057D               	andwf	___xxtofl@arg+3,w
  6264     1535  1D03               	btfss	3,2
  6265     1536  2D38               	goto	u4771
  6266     1537  2D39               	goto	u4770
  6267     1538                     u4771:
  6268     1538  2D26               	goto	l2776
  6269     1539                     u4770:
  6270     1539  2D55               	goto	l709
  6271     153A                     l2780:
  6272     153A  3001               	movlw	1
  6273     153B  00F4               	movwf	??___xxtofl
  6274     153C  0874               	movf	??___xxtofl,w
  6275     153D  07F9               	addwf	___xxtofl@exp,f
  6276     153E                     l2782:
  6277     153E  3001               	movlw	1
  6278     153F  07FA               	addwf	___xxtofl@arg,f
  6279     1540  3000               	movlw	0
  6280     1541  1803               	skipnc
  6281     1542  3001               	movlw	1
  6282     1543  07FB               	addwf	___xxtofl@arg+1,f
  6283     1544  3000               	movlw	0
  6284     1545  1803               	skipnc
  6285     1546  3001               	movlw	1
  6286     1547  07FC               	addwf	___xxtofl@arg+2,f
  6287     1548  3000               	movlw	0
  6288     1549  1803               	skipnc
  6289     154A  3001               	movlw	1
  6290     154B  07FD               	addwf	___xxtofl@arg+3,f
  6291     154C                     l2784:
  6292     154C  3001               	movlw	1
  6293     154D                     u4785:
  6294     154D  1003               	clrc
  6295     154E  0CFD               	rrf	___xxtofl@arg+3,f
  6296     154F  0CFC               	rrf	___xxtofl@arg+2,f
  6297     1550  0CFB               	rrf	___xxtofl@arg+1,f
  6298     1551  0CFA               	rrf	___xxtofl@arg,f
  6299     1552  3EFF               	addlw	-1
  6300     1553  1D03               	skipz
  6301     1554  2D4D               	goto	u4785
  6302     1555                     l709:
  6303     1555  30FF               	movlw	255
  6304     1556  057D               	andwf	___xxtofl@arg+3,w
  6305     1557  1D03               	btfss	3,2
  6306     1558  2D5A               	goto	u4791
  6307     1559  2D5B               	goto	u4790
  6308     155A                     u4791:
  6309     155A  2D3A               	goto	l2780
  6310     155B                     u4790:
  6311     155B  2D67               	goto	l2788
  6312     155C                     l2786:
  6313     155C  3001               	movlw	1
  6314     155D  02F9               	subwf	___xxtofl@exp,f
  6315     155E  3001               	movlw	1
  6316     155F  00F4               	movwf	??___xxtofl
  6317     1560                     u4805:
  6318     1560  1003               	clrc
  6319     1561  0DFA               	rlf	___xxtofl@arg,f
  6320     1562  0DFB               	rlf	___xxtofl@arg+1,f
  6321     1563  0DFC               	rlf	___xxtofl@arg+2,f
  6322     1564  0DFD               	rlf	___xxtofl@arg+3,f
  6323     1565  0BF4               	decfsz	??___xxtofl,f
  6324     1566  2D60               	goto	u4805
  6325     1567                     l2788:
  6326     1567  1BFC               	btfsc	___xxtofl@arg+2,7
  6327     1568  2D6A               	goto	u4811
  6328     1569  2D6B               	goto	u4810
  6329     156A                     u4811:
  6330     156A  2D71               	goto	l716
  6331     156B                     u4810:
  6332     156B                     l2790:
  6333     156B  3002               	movlw	2
  6334     156C  0279               	subwf	___xxtofl@exp,w
  6335     156D  1803               	skipnc
  6336     156E  2D70               	goto	u4821
  6337     156F  2D71               	goto	u4820
  6338     1570                     u4821:
  6339     1570  2D5C               	goto	l2786
  6340     1571                     u4820:
  6341     1571                     l716:
  6342     1571  1879               	btfsc	___xxtofl@exp,0
  6343     1572  2D74               	goto	u4831
  6344     1573  2D75               	goto	u4830
  6345     1574                     u4831:
  6346     1574  2D7D               	goto	l717
  6347     1575                     u4830:
  6348     1575                     l2792:
  6349     1575  30FF               	movlw	255
  6350     1576  05FA               	andwf	___xxtofl@arg,f
  6351     1577  30FF               	movlw	255
  6352     1578  05FB               	andwf	___xxtofl@arg+1,f
  6353     1579  307F               	movlw	127
  6354     157A  05FC               	andwf	___xxtofl@arg+2,f
  6355     157B  30FF               	movlw	255
  6356     157C  05FD               	andwf	___xxtofl@arg+3,f
  6357     157D                     l717:
  6358     157D  1003               	clrc
  6359     157E  0CF9               	rrf	___xxtofl@exp,f
  6360     157F                     l2794:
  6361     157F  0879               	movf	___xxtofl@exp,w
  6362     1580  00F4               	movwf	??___xxtofl
  6363     1581  01F5               	clrf	??___xxtofl+1
  6364     1582  01F6               	clrf	??___xxtofl+2
  6365     1583  01F7               	clrf	??___xxtofl+3
  6366     1584  3018               	movlw	24
  6367     1585                     u4845:
  6368     1585  1003               	clrc
  6369     1586  0DF4               	rlf	??___xxtofl,f
  6370     1587  0DF5               	rlf	??___xxtofl+1,f
  6371     1588  0DF6               	rlf	??___xxtofl+2,f
  6372     1589  0DF7               	rlf	??___xxtofl+3,f
  6373     158A                     u4840:
  6374     158A  3EFF               	addlw	-1
  6375     158B  1D03               	skipz
  6376     158C  2D85               	goto	u4845
  6377     158D  0874               	movf	??___xxtofl,w
  6378     158E  04FA               	iorwf	___xxtofl@arg,f
  6379     158F  0875               	movf	??___xxtofl+1,w
  6380     1590  04FB               	iorwf	___xxtofl@arg+1,f
  6381     1591  0876               	movf	??___xxtofl+2,w
  6382     1592  04FC               	iorwf	___xxtofl@arg+2,f
  6383     1593  0877               	movf	??___xxtofl+3,w
  6384     1594  04FD               	iorwf	___xxtofl@arg+3,f
  6385     1595                     l2796:
  6386     1595  0878               	movf	___xxtofl@sign,w
  6387     1596  1903               	btfsc	3,2
  6388     1597  2D99               	goto	u4851
  6389     1598  2D9A               	goto	u4850
  6390     1599                     u4851:
  6391     1599  2D9F               	goto	l2802
  6392     159A                     u4850:
  6393     159A                     l2798:
  6394     159A  1FF3               	btfss	___xxtofl@val+3,7
  6395     159B  2D9D               	goto	u4861
  6396     159C  2D9E               	goto	u4860
  6397     159D                     u4861:
  6398     159D  2D9F               	goto	l2802
  6399     159E                     u4860:
  6400     159E                     l2800:
  6401     159E  17FD               	bsf	___xxtofl@arg+3,7
  6402     159F                     l2802:
  6403     159F  087D               	movf	___xxtofl@arg+3,w
  6404     15A0  00F3               	movwf	?___xxtofl+3
  6405     15A1  087C               	movf	___xxtofl@arg+2,w
  6406     15A2  00F2               	movwf	?___xxtofl+2
  6407     15A3  087B               	movf	___xxtofl@arg+1,w
  6408     15A4  00F1               	movwf	?___xxtofl+1
  6409     15A5  087A               	movf	___xxtofl@arg,w
  6410     15A6  00F0               	movwf	?___xxtofl
  6411     15A7                     l705:
  6412     15A7  0008               	return
  6413     15A8                     __end_of___xxtofl:
  6414                           
  6415                           	psect	text13
  6416     1F3D                     __ptext13:	
  6417 ;; *************** function ___wmul *****************
  6418 ;; Defined at:
  6419 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  6420 ;; Parameters:    Size  Location     Type
  6421 ;;  multiplier      2    0[COMMON] unsigned int 
  6422 ;;  multiplicand    2    2[COMMON] unsigned int 
  6423 ;; Auto vars:     Size  Location     Type
  6424 ;;  product         2    4[COMMON] unsigned int 
  6425 ;; Return value:  Size  Location     Type
  6426 ;;                  2    0[COMMON] unsigned int 
  6427 ;; Registers used:
  6428 ;;		wreg, status,2, status,0
  6429 ;; Tracked objects:
  6430 ;;		On entry : 0/0
  6431 ;;		On exit  : 0/0
  6432 ;;		Unchanged: 0/0
  6433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6434 ;;      Params:         4       0       0       0       0
  6435 ;;      Locals:         2       0       0       0       0
  6436 ;;      Temps:          0       0       0       0       0
  6437 ;;      Totals:         6       0       0       0       0
  6438 ;;Total ram usage:        6 bytes
  6439 ;; Hardware stack levels used: 1
  6440 ;; This function calls:
  6441 ;;		Nothing
  6442 ;; This function is called by:
  6443 ;;		_sprintf
  6444 ;; This function uses a non-reentrant model
  6445 ;;
  6446                           
  6447     1F3D                     ___wmul:	
  6448                           ;psect for function ___wmul
  6449                           
  6450     1F3D                     l2622:	
  6451                           ;incstack = 0
  6452                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6453                           
  6454     1F3D  01F4               	clrf	___wmul@product
  6455     1F3E  01F5               	clrf	___wmul@product+1
  6456     1F3F                     l2624:
  6457     1F3F  1C70               	btfss	___wmul@multiplier,0
  6458     1F40  2F42               	goto	u4351
  6459     1F41  2F43               	goto	u4350
  6460     1F42                     u4351:
  6461     1F42  2F49               	goto	l236
  6462     1F43                     u4350:
  6463     1F43                     l2626:
  6464     1F43  0872               	movf	___wmul@multiplicand,w
  6465     1F44  07F4               	addwf	___wmul@product,f
  6466     1F45  1803               	skipnc
  6467     1F46  0AF5               	incf	___wmul@product+1,f
  6468     1F47  0873               	movf	___wmul@multiplicand+1,w
  6469     1F48  07F5               	addwf	___wmul@product+1,f
  6470     1F49                     l236:
  6471     1F49  3001               	movlw	1
  6472     1F4A                     u4365:
  6473     1F4A  1003               	clrc
  6474     1F4B  0DF2               	rlf	___wmul@multiplicand,f
  6475     1F4C  0DF3               	rlf	___wmul@multiplicand+1,f
  6476     1F4D  3EFF               	addlw	-1
  6477     1F4E  1D03               	skipz
  6478     1F4F  2F4A               	goto	u4365
  6479     1F50                     l2628:
  6480     1F50  3001               	movlw	1
  6481     1F51                     u4375:
  6482     1F51  1003               	clrc
  6483     1F52  0CF1               	rrf	___wmul@multiplier+1,f
  6484     1F53  0CF0               	rrf	___wmul@multiplier,f
  6485     1F54  3EFF               	addlw	-1
  6486     1F55  1D03               	skipz
  6487     1F56  2F51               	goto	u4375
  6488     1F57                     l2630:
  6489     1F57  0870               	movf	___wmul@multiplier,w
  6490     1F58  0471               	iorwf	___wmul@multiplier+1,w
  6491     1F59  1D03               	btfss	3,2
  6492     1F5A  2F5C               	goto	u4381
  6493     1F5B  2F5D               	goto	u4380
  6494     1F5C                     u4381:
  6495     1F5C  2F3F               	goto	l2624
  6496     1F5D                     u4380:
  6497     1F5D                     l2632:
  6498     1F5D  0875               	movf	___wmul@product+1,w
  6499     1F5E  00F1               	movwf	?___wmul+1
  6500     1F5F  0874               	movf	___wmul@product,w
  6501     1F60  00F0               	movwf	?___wmul
  6502     1F61                     l238:
  6503     1F61  0008               	return
  6504     1F62                     __end_of___wmul:
  6505                           
  6506                           	psect	text14
  6507     1188                     __ptext14:	
  6508 ;; *************** function ___llmod *****************
  6509 ;; Defined at:
  6510 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  6511 ;; Parameters:    Size  Location     Type
  6512 ;;  divisor         4    0[COMMON] unsigned long 
  6513 ;;  dividend        4    4[COMMON] unsigned long 
  6514 ;; Auto vars:     Size  Location     Type
  6515 ;;  counter         1    9[COMMON] unsigned char 
  6516 ;; Return value:  Size  Location     Type
  6517 ;;                  4    0[COMMON] unsigned long 
  6518 ;; Registers used:
  6519 ;;		wreg, status,2, status,0
  6520 ;; Tracked objects:
  6521 ;;		On entry : 0/0
  6522 ;;		On exit  : 0/0
  6523 ;;		Unchanged: 0/0
  6524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6525 ;;      Params:         8       0       0       0       0
  6526 ;;      Locals:         1       0       0       0       0
  6527 ;;      Temps:          1       0       0       0       0
  6528 ;;      Totals:        10       0       0       0       0
  6529 ;;Total ram usage:       10 bytes
  6530 ;; Hardware stack levels used: 1
  6531 ;; This function calls:
  6532 ;;		Nothing
  6533 ;; This function is called by:
  6534 ;;		_sprintf
  6535 ;; This function uses a non-reentrant model
  6536 ;;
  6537                           
  6538     1188                     ___llmod:	
  6539                           ;psect for function ___llmod
  6540                           
  6541     1188                     l2736:	
  6542                           ;incstack = 0
  6543                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6544                           
  6545     1188  0873               	movf	___llmod@divisor+3,w
  6546     1189  0472               	iorwf	___llmod@divisor+2,w
  6547     118A  0471               	iorwf	___llmod@divisor+1,w
  6548     118B  0470               	iorwf	___llmod@divisor,w
  6549     118C  1903               	skipnz
  6550     118D  298F               	goto	u4671
  6551     118E  2990               	goto	u4670
  6552     118F                     u4671:
  6553     118F  29D3               	goto	l2752
  6554     1190                     u4670:
  6555     1190                     l2738:
  6556     1190  01F9               	clrf	___llmod@counter
  6557     1191  0AF9               	incf	___llmod@counter,f
  6558     1192  29A0               	goto	l2742
  6559     1193                     l2740:
  6560     1193  3001               	movlw	1
  6561     1194  00F8               	movwf	??___llmod
  6562     1195                     u4685:
  6563     1195  1003               	clrc
  6564     1196  0DF0               	rlf	___llmod@divisor,f
  6565     1197  0DF1               	rlf	___llmod@divisor+1,f
  6566     1198  0DF2               	rlf	___llmod@divisor+2,f
  6567     1199  0DF3               	rlf	___llmod@divisor+3,f
  6568     119A  0BF8               	decfsz	??___llmod,f
  6569     119B  2995               	goto	u4685
  6570     119C  3001               	movlw	1
  6571     119D  00F8               	movwf	??___llmod
  6572     119E  0878               	movf	??___llmod,w
  6573     119F  07F9               	addwf	___llmod@counter,f
  6574     11A0                     l2742:
  6575     11A0  1FF3               	btfss	___llmod@divisor+3,7
  6576     11A1  29A3               	goto	u4691
  6577     11A2  29A4               	goto	u4690
  6578     11A3                     u4691:
  6579     11A3  2993               	goto	l2740
  6580     11A4                     u4690:
  6581     11A4                     l2744:
  6582     11A4  0873               	movf	___llmod@divisor+3,w
  6583     11A5  0277               	subwf	___llmod@dividend+3,w
  6584     11A6  1D03               	skipz
  6585     11A7  29B2               	goto	u4705
  6586     11A8  0872               	movf	___llmod@divisor+2,w
  6587     11A9  0276               	subwf	___llmod@dividend+2,w
  6588     11AA  1D03               	skipz
  6589     11AB  29B2               	goto	u4705
  6590     11AC  0871               	movf	___llmod@divisor+1,w
  6591     11AD  0275               	subwf	___llmod@dividend+1,w
  6592     11AE  1D03               	skipz
  6593     11AF  29B2               	goto	u4705
  6594     11B0  0870               	movf	___llmod@divisor,w
  6595     11B1  0274               	subwf	___llmod@dividend,w
  6596     11B2                     u4705:
  6597     11B2  1C03               	skipc
  6598     11B3  29B5               	goto	u4701
  6599     11B4  29B6               	goto	u4700
  6600     11B5                     u4701:
  6601     11B5  29C4               	goto	l2748
  6602     11B6                     u4700:
  6603     11B6                     l2746:
  6604     11B6  0870               	movf	___llmod@divisor,w
  6605     11B7  02F4               	subwf	___llmod@dividend,f
  6606     11B8  0871               	movf	___llmod@divisor+1,w
  6607     11B9  1C03               	skipc
  6608     11BA  0F71               	incfsz	___llmod@divisor+1,w
  6609     11BB  02F5               	subwf	___llmod@dividend+1,f
  6610     11BC  0872               	movf	___llmod@divisor+2,w
  6611     11BD  1C03               	skipc
  6612     11BE  0F72               	incfsz	___llmod@divisor+2,w
  6613     11BF  02F6               	subwf	___llmod@dividend+2,f
  6614     11C0  0873               	movf	___llmod@divisor+3,w
  6615     11C1  1C03               	skipc
  6616     11C2  0F73               	incfsz	___llmod@divisor+3,w
  6617     11C3  02F7               	subwf	___llmod@dividend+3,f
  6618     11C4                     l2748:
  6619     11C4  3001               	movlw	1
  6620     11C5                     u4715:
  6621     11C5  1003               	clrc
  6622     11C6  0CF3               	rrf	___llmod@divisor+3,f
  6623     11C7  0CF2               	rrf	___llmod@divisor+2,f
  6624     11C8  0CF1               	rrf	___llmod@divisor+1,f
  6625     11C9  0CF0               	rrf	___llmod@divisor,f
  6626     11CA  3EFF               	addlw	-1
  6627     11CB  1D03               	skipz
  6628     11CC  29C5               	goto	u4715
  6629     11CD                     l2750:
  6630     11CD  3001               	movlw	1
  6631     11CE  02F9               	subwf	___llmod@counter,f
  6632     11CF  1D03               	btfss	3,2
  6633     11D0  29D2               	goto	u4721
  6634     11D1  29D3               	goto	u4720
  6635     11D2                     u4721:
  6636     11D2  29A4               	goto	l2744
  6637     11D3                     u4720:
  6638     11D3                     l2752:
  6639     11D3  0877               	movf	___llmod@dividend+3,w
  6640     11D4  00F3               	movwf	?___llmod+3
  6641     11D5  0876               	movf	___llmod@dividend+2,w
  6642     11D6  00F2               	movwf	?___llmod+2
  6643     11D7  0875               	movf	___llmod@dividend+1,w
  6644     11D8  00F1               	movwf	?___llmod+1
  6645     11D9  0874               	movf	___llmod@dividend,w
  6646     11DA  00F0               	movwf	?___llmod
  6647     11DB                     l492:
  6648     11DB  0008               	return
  6649     11DC                     __end_of___llmod:
  6650                           
  6651                           	psect	text15
  6652     12F2                     __ptext15:	
  6653 ;; *************** function ___lldiv *****************
  6654 ;; Defined at:
  6655 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  6656 ;; Parameters:    Size  Location     Type
  6657 ;;  divisor         4    0[COMMON] unsigned long 
  6658 ;;  dividend        4    4[COMMON] unsigned long 
  6659 ;; Auto vars:     Size  Location     Type
  6660 ;;  quotient        4    9[COMMON] unsigned long 
  6661 ;;  counter         1   13[COMMON] unsigned char 
  6662 ;; Return value:  Size  Location     Type
  6663 ;;                  4    0[COMMON] unsigned long 
  6664 ;; Registers used:
  6665 ;;		wreg, status,2, status,0
  6666 ;; Tracked objects:
  6667 ;;		On entry : 0/0
  6668 ;;		On exit  : 0/0
  6669 ;;		Unchanged: 0/0
  6670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6671 ;;      Params:         8       0       0       0       0
  6672 ;;      Locals:         5       0       0       0       0
  6673 ;;      Temps:          1       0       0       0       0
  6674 ;;      Totals:        14       0       0       0       0
  6675 ;;Total ram usage:       14 bytes
  6676 ;; Hardware stack levels used: 1
  6677 ;; This function calls:
  6678 ;;		Nothing
  6679 ;; This function is called by:
  6680 ;;		_sprintf
  6681 ;; This function uses a non-reentrant model
  6682 ;;
  6683                           
  6684     12F2                     ___lldiv:	
  6685                           ;psect for function ___lldiv
  6686                           
  6687     12F2                     l2636:	
  6688                           ;incstack = 0
  6689                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6690                           
  6691     12F2  3000               	movlw	0
  6692     12F3  00FC               	movwf	___lldiv@quotient+3
  6693     12F4  3000               	movlw	0
  6694     12F5  00FB               	movwf	___lldiv@quotient+2
  6695     12F6  3000               	movlw	0
  6696     12F7  00FA               	movwf	___lldiv@quotient+1
  6697     12F8  3000               	movlw	0
  6698     12F9  00F9               	movwf	___lldiv@quotient
  6699     12FA  0873               	movf	___lldiv@divisor+3,w
  6700     12FB  0472               	iorwf	___lldiv@divisor+2,w
  6701     12FC  0471               	iorwf	___lldiv@divisor+1,w
  6702     12FD  0470               	iorwf	___lldiv@divisor,w
  6703     12FE  1903               	skipnz
  6704     12FF  2B01               	goto	u4391
  6705     1300  2B02               	goto	u4390
  6706     1301                     u4391:
  6707     1301  2B4F               	goto	l2656
  6708     1302                     u4390:
  6709     1302                     l2638:
  6710     1302  01FD               	clrf	___lldiv@counter
  6711     1303  0AFD               	incf	___lldiv@counter,f
  6712     1304  2B12               	goto	l2642
  6713     1305                     l2640:
  6714     1305  3001               	movlw	1
  6715     1306  00F8               	movwf	??___lldiv
  6716     1307                     u4405:
  6717     1307  1003               	clrc
  6718     1308  0DF0               	rlf	___lldiv@divisor,f
  6719     1309  0DF1               	rlf	___lldiv@divisor+1,f
  6720     130A  0DF2               	rlf	___lldiv@divisor+2,f
  6721     130B  0DF3               	rlf	___lldiv@divisor+3,f
  6722     130C  0BF8               	decfsz	??___lldiv,f
  6723     130D  2B07               	goto	u4405
  6724     130E  3001               	movlw	1
  6725     130F  00F8               	movwf	??___lldiv
  6726     1310  0878               	movf	??___lldiv,w
  6727     1311  07FD               	addwf	___lldiv@counter,f
  6728     1312                     l2642:
  6729     1312  1FF3               	btfss	___lldiv@divisor+3,7
  6730     1313  2B15               	goto	u4411
  6731     1314  2B16               	goto	u4410
  6732     1315                     u4411:
  6733     1315  2B05               	goto	l2640
  6734     1316                     u4410:
  6735     1316                     l2644:
  6736     1316  3001               	movlw	1
  6737     1317  00F8               	movwf	??___lldiv
  6738     1318                     u4425:
  6739     1318  1003               	clrc
  6740     1319  0DF9               	rlf	___lldiv@quotient,f
  6741     131A  0DFA               	rlf	___lldiv@quotient+1,f
  6742     131B  0DFB               	rlf	___lldiv@quotient+2,f
  6743     131C  0DFC               	rlf	___lldiv@quotient+3,f
  6744     131D  0BF8               	decfsz	??___lldiv,f
  6745     131E  2B18               	goto	u4425
  6746     131F                     l2646:
  6747     131F  0873               	movf	___lldiv@divisor+3,w
  6748     1320  0277               	subwf	___lldiv@dividend+3,w
  6749     1321  1D03               	skipz
  6750     1322  2B2D               	goto	u4435
  6751     1323  0872               	movf	___lldiv@divisor+2,w
  6752     1324  0276               	subwf	___lldiv@dividend+2,w
  6753     1325  1D03               	skipz
  6754     1326  2B2D               	goto	u4435
  6755     1327  0871               	movf	___lldiv@divisor+1,w
  6756     1328  0275               	subwf	___lldiv@dividend+1,w
  6757     1329  1D03               	skipz
  6758     132A  2B2D               	goto	u4435
  6759     132B  0870               	movf	___lldiv@divisor,w
  6760     132C  0274               	subwf	___lldiv@dividend,w
  6761     132D                     u4435:
  6762     132D  1C03               	skipc
  6763     132E  2B30               	goto	u4431
  6764     132F  2B31               	goto	u4430
  6765     1330                     u4431:
  6766     1330  2B40               	goto	l2652
  6767     1331                     u4430:
  6768     1331                     l2648:
  6769     1331  0870               	movf	___lldiv@divisor,w
  6770     1332  02F4               	subwf	___lldiv@dividend,f
  6771     1333  0871               	movf	___lldiv@divisor+1,w
  6772     1334  1C03               	skipc
  6773     1335  0F71               	incfsz	___lldiv@divisor+1,w
  6774     1336  02F5               	subwf	___lldiv@dividend+1,f
  6775     1337  0872               	movf	___lldiv@divisor+2,w
  6776     1338  1C03               	skipc
  6777     1339  0F72               	incfsz	___lldiv@divisor+2,w
  6778     133A  02F6               	subwf	___lldiv@dividend+2,f
  6779     133B  0873               	movf	___lldiv@divisor+3,w
  6780     133C  1C03               	skipc
  6781     133D  0F73               	incfsz	___lldiv@divisor+3,w
  6782     133E  02F7               	subwf	___lldiv@dividend+3,f
  6783     133F                     l2650:
  6784     133F  1479               	bsf	___lldiv@quotient,0
  6785     1340                     l2652:
  6786     1340  3001               	movlw	1
  6787     1341                     u4445:
  6788     1341  1003               	clrc
  6789     1342  0CF3               	rrf	___lldiv@divisor+3,f
  6790     1343  0CF2               	rrf	___lldiv@divisor+2,f
  6791     1344  0CF1               	rrf	___lldiv@divisor+1,f
  6792     1345  0CF0               	rrf	___lldiv@divisor,f
  6793     1346  3EFF               	addlw	-1
  6794     1347  1D03               	skipz
  6795     1348  2B41               	goto	u4445
  6796     1349                     l2654:
  6797     1349  3001               	movlw	1
  6798     134A  02FD               	subwf	___lldiv@counter,f
  6799     134B  1D03               	btfss	3,2
  6800     134C  2B4E               	goto	u4451
  6801     134D  2B4F               	goto	u4450
  6802     134E                     u4451:
  6803     134E  2B16               	goto	l2644
  6804     134F                     u4450:
  6805     134F                     l2656:
  6806     134F  087C               	movf	___lldiv@quotient+3,w
  6807     1350  00F3               	movwf	?___lldiv+3
  6808     1351  087B               	movf	___lldiv@quotient+2,w
  6809     1352  00F2               	movwf	?___lldiv+2
  6810     1353  087A               	movf	___lldiv@quotient+1,w
  6811     1354  00F1               	movwf	?___lldiv+1
  6812     1355  0879               	movf	___lldiv@quotient,w
  6813     1356  00F0               	movwf	?___lldiv
  6814     1357                     l272:
  6815     1357  0008               	return
  6816     1358                     __end_of___lldiv:
  6817                           
  6818                           	psect	text16
  6819     13C1                     __ptext16:	
  6820 ;; *************** function ___fltol *****************
  6821 ;; Defined at:
  6822 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  6823 ;; Parameters:    Size  Location     Type
  6824 ;;  f1              4   49[BANK0 ] unsigned long 
  6825 ;; Auto vars:     Size  Location     Type
  6826 ;;  exp1            1   58[BANK0 ] unsigned char 
  6827 ;;  sign1           1   57[BANK0 ] unsigned char 
  6828 ;; Return value:  Size  Location     Type
  6829 ;;                  4   49[BANK0 ] long 
  6830 ;; Registers used:
  6831 ;;		wreg, status,2, status,0
  6832 ;; Tracked objects:
  6833 ;;		On entry : 0/0
  6834 ;;		On exit  : 0/0
  6835 ;;		Unchanged: 0/0
  6836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6837 ;;      Params:         0       4       0       0       0
  6838 ;;      Locals:         0       2       0       0       0
  6839 ;;      Temps:          0       4       0       0       0
  6840 ;;      Totals:         0      10       0       0       0
  6841 ;;Total ram usage:       10 bytes
  6842 ;; Hardware stack levels used: 1
  6843 ;; This function calls:
  6844 ;;		Nothing
  6845 ;; This function is called by:
  6846 ;;		_sprintf
  6847 ;; This function uses a non-reentrant model
  6848 ;;
  6849                           
  6850     13C1                     ___fltol:	
  6851                           ;psect for function ___fltol
  6852                           
  6853     13C1                     l2700:	
  6854                           ;incstack = 0
  6855                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6856                           
  6857     13C1  1003               	clrc
  6858     13C2  1283               	bcf	3,5	;RP0=0, select bank0
  6859     13C3  1303               	bcf	3,6	;RP1=0, select bank0
  6860     13C4  0D53               	rlf	___fltol@f1+2,w
  6861     13C5  0D54               	rlf	___fltol@f1+3,w
  6862     13C6  00DA               	movwf	___fltol@exp1
  6863     13C7  085A               	movf	___fltol@exp1,w
  6864     13C8  1D03               	btfss	3,2
  6865     13C9  2BCB               	goto	u4571
  6866     13CA  2BCC               	goto	u4570
  6867     13CB                     u4571:
  6868     13CB  2BD5               	goto	l2706
  6869     13CC                     u4570:
  6870     13CC                     l2702:
  6871     13CC  3000               	movlw	0
  6872     13CD  00D4               	movwf	?___fltol+3
  6873     13CE  3000               	movlw	0
  6874     13CF  00D3               	movwf	?___fltol+2
  6875     13D0  3000               	movlw	0
  6876     13D1  00D2               	movwf	?___fltol+1
  6877     13D2  3000               	movlw	0
  6878     13D3  00D1               	movwf	?___fltol
  6879     13D4  2C38               	goto	l439
  6880     13D5                     l2706:
  6881     13D5  0851               	movf	___fltol@f1,w
  6882     13D6  00D5               	movwf	??___fltol
  6883     13D7  0852               	movf	___fltol@f1+1,w
  6884     13D8  00D6               	movwf	??___fltol+1
  6885     13D9  0853               	movf	___fltol@f1+2,w
  6886     13DA  00D7               	movwf	??___fltol+2
  6887     13DB  0854               	movf	___fltol@f1+3,w
  6888     13DC  00D8               	movwf	??___fltol+3
  6889     13DD  301F               	movlw	31
  6890     13DE                     u4585:
  6891     13DE  1003               	clrc
  6892     13DF  0CD8               	rrf	??___fltol+3,f
  6893     13E0  0CD7               	rrf	??___fltol+2,f
  6894     13E1  0CD6               	rrf	??___fltol+1,f
  6895     13E2  0CD5               	rrf	??___fltol,f
  6896     13E3                     u4580:
  6897     13E3  3EFF               	addlw	-1
  6898     13E4  1D03               	skipz
  6899     13E5  2BDE               	goto	u4585
  6900     13E6  0855               	movf	??___fltol,w
  6901     13E7  00D9               	movwf	___fltol@sign1
  6902     13E8                     l2708:
  6903     13E8  17D3               	bsf	___fltol@f1+2,7
  6904     13E9                     l2710:
  6905     13E9  30FF               	movlw	255
  6906     13EA  05D1               	andwf	___fltol@f1,f
  6907     13EB  30FF               	movlw	255
  6908     13EC  05D2               	andwf	___fltol@f1+1,f
  6909     13ED  30FF               	movlw	255
  6910     13EE  05D3               	andwf	___fltol@f1+2,f
  6911     13EF  3000               	movlw	0
  6912     13F0  05D4               	andwf	___fltol@f1+3,f
  6913     13F1                     l2712:
  6914     13F1  3096               	movlw	150
  6915     13F2  02DA               	subwf	___fltol@exp1,f
  6916     13F3                     l2714:
  6917     13F3  1FDA               	btfss	___fltol@exp1,7
  6918     13F4  2BF6               	goto	u4591
  6919     13F5  2BF7               	goto	u4590
  6920     13F6                     u4591:
  6921     13F6  2C11               	goto	l2724
  6922     13F7                     u4590:
  6923     13F7                     l2716:
  6924     13F7  085A               	movf	___fltol@exp1,w
  6925     13F8  3A80               	xorlw	128
  6926     13F9  3E97               	addlw	151
  6927     13FA  1803               	skipnc
  6928     13FB  2BFD               	goto	u4601
  6929     13FC  2BFE               	goto	u4600
  6930     13FD                     u4601:
  6931     13FD  2BFF               	goto	l2722
  6932     13FE                     u4600:
  6933     13FE  2BCC               	goto	l2702
  6934     13FF                     l2722:
  6935     13FF  3001               	movlw	1
  6936     1400                     u4615:
  6937     1400  1003               	clrc
  6938     1401  0CD4               	rrf	___fltol@f1+3,f
  6939     1402  0CD3               	rrf	___fltol@f1+2,f
  6940     1403  0CD2               	rrf	___fltol@f1+1,f
  6941     1404  0CD1               	rrf	___fltol@f1,f
  6942     1405  3EFF               	addlw	-1
  6943     1406  1D03               	skipz
  6944     1407  2C00               	goto	u4615
  6945     1408  3001               	movlw	1
  6946     1409  00D5               	movwf	??___fltol
  6947     140A  0855               	movf	??___fltol,w
  6948     140B  07DA               	addwf	___fltol@exp1,f
  6949     140C  1D03               	btfss	3,2
  6950     140D  2C0F               	goto	u4621
  6951     140E  2C10               	goto	u4620
  6952     140F                     u4621:
  6953     140F  2BFF               	goto	l2722
  6954     1410                     u4620:
  6955     1410  2C28               	goto	l2732
  6956     1411                     l2724:
  6957     1411  3020               	movlw	32
  6958     1412  025A               	subwf	___fltol@exp1,w
  6959     1413  1C03               	skipc
  6960     1414  2C16               	goto	u4631
  6961     1415  2C17               	goto	u4630
  6962     1416                     u4631:
  6963     1416  2C23               	goto	l446
  6964     1417                     u4630:
  6965     1417  2BCC               	goto	l2702
  6966     1418                     l2730:
  6967     1418  3001               	movlw	1
  6968     1419  00D5               	movwf	??___fltol
  6969     141A                     u4645:
  6970     141A  1003               	clrc
  6971     141B  0DD1               	rlf	___fltol@f1,f
  6972     141C  0DD2               	rlf	___fltol@f1+1,f
  6973     141D  0DD3               	rlf	___fltol@f1+2,f
  6974     141E  0DD4               	rlf	___fltol@f1+3,f
  6975     141F  0BD5               	decfsz	??___fltol,f
  6976     1420  2C1A               	goto	u4645
  6977     1421  3001               	movlw	1
  6978     1422  02DA               	subwf	___fltol@exp1,f
  6979     1423                     l446:
  6980     1423  085A               	movf	___fltol@exp1,w
  6981     1424  1D03               	btfss	3,2
  6982     1425  2C27               	goto	u4651
  6983     1426  2C28               	goto	u4650
  6984     1427                     u4651:
  6985     1427  2C18               	goto	l2730
  6986     1428                     u4650:
  6987     1428                     l2732:
  6988     1428  0859               	movf	___fltol@sign1,w
  6989     1429  1903               	btfsc	3,2
  6990     142A  2C2C               	goto	u4661
  6991     142B  2C2D               	goto	u4660
  6992     142C                     u4661:
  6993     142C  2C38               	goto	l449
  6994     142D                     u4660:
  6995     142D                     l2734:
  6996     142D  09D1               	comf	___fltol@f1,f
  6997     142E  09D2               	comf	___fltol@f1+1,f
  6998     142F  09D3               	comf	___fltol@f1+2,f
  6999     1430  09D4               	comf	___fltol@f1+3,f
  7000     1431  0AD1               	incf	___fltol@f1,f
  7001     1432  1903               	skipnz
  7002     1433  0AD2               	incf	___fltol@f1+1,f
  7003     1434  1903               	skipnz
  7004     1435  0AD3               	incf	___fltol@f1+2,f
  7005     1436  1903               	skipnz
  7006     1437  0AD4               	incf	___fltol@f1+3,f
  7007     1438                     l449:
  7008     1438                     l439:
  7009     1438  0008               	return
  7010     1439                     __end_of___fltol:
  7011                           
  7012                           	psect	text17
  7013     1F19                     __ptext17:	
  7014 ;; *************** function ___flsub *****************
  7015 ;; Defined at:
  7016 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;  a               4   70[BANK0 ] long 
  7019 ;;  b               4   74[BANK0 ] long 
  7020 ;; Auto vars:     Size  Location     Type
  7021 ;;		None
  7022 ;; Return value:  Size  Location     Type
  7023 ;;                  4   70[BANK0 ] long 
  7024 ;; Registers used:
  7025 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7026 ;; Tracked objects:
  7027 ;;		On entry : 0/0
  7028 ;;		On exit  : 0/0
  7029 ;;		Unchanged: 0/0
  7030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7031 ;;      Params:         0       8       0       0       0
  7032 ;;      Locals:         0       0       0       0       0
  7033 ;;      Temps:          0       0       0       0       0
  7034 ;;      Totals:         0       8       0       0       0
  7035 ;;Total ram usage:        8 bytes
  7036 ;; Hardware stack levels used: 1
  7037 ;; Hardware stack levels required when called: 1
  7038 ;; This function calls:
  7039 ;;		___fladd
  7040 ;; This function is called by:
  7041 ;;		_sprintf
  7042 ;; This function uses a non-reentrant model
  7043 ;;
  7044                           
  7045     1F19                     ___flsub:	
  7046                           ;psect for function ___flsub
  7047                           
  7048     1F19                     l2756:	
  7049                           ;incstack = 0
  7050                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7051                           
  7052     1F19  3080               	movlw	128
  7053     1F1A  1283               	bcf	3,5	;RP0=0, select bank0
  7054     1F1B  1303               	bcf	3,6	;RP1=0, select bank0
  7055     1F1C  06E9               	xorwf	___flsub@a+3,f
  7056     1F1D                     l2758:
  7057     1F1D  086D               	movf	___flsub@b+3,w
  7058     1F1E  00D5               	movwf	___fladd@b+3
  7059     1F1F  086C               	movf	___flsub@b+2,w
  7060     1F20  00D4               	movwf	___fladd@b+2
  7061     1F21  086B               	movf	___flsub@b+1,w
  7062     1F22  00D3               	movwf	___fladd@b+1
  7063     1F23  086A               	movf	___flsub@b,w
  7064     1F24  00D2               	movwf	___fladd@b
  7065     1F25  0869               	movf	___flsub@a+3,w
  7066     1F26  00D9               	movwf	___fladd@a+3
  7067     1F27  0868               	movf	___flsub@a+2,w
  7068     1F28  00D8               	movwf	___fladd@a+2
  7069     1F29  0867               	movf	___flsub@a+1,w
  7070     1F2A  00D7               	movwf	___fladd@a+1
  7071     1F2B  0866               	movf	___flsub@a,w
  7072     1F2C  00D6               	movwf	___fladd@a
  7073     1F2D  160A  118A  25A8  160A  158A  	fcall	___fladd
  7074     1F32  1283               	bcf	3,5	;RP0=0, select bank0
  7075     1F33  1303               	bcf	3,6	;RP1=0, select bank0
  7076     1F34  0855               	movf	?___fladd+3,w
  7077     1F35  00E9               	movwf	?___flsub+3
  7078     1F36  0854               	movf	?___fladd+2,w
  7079     1F37  00E8               	movwf	?___flsub+2
  7080     1F38  0853               	movf	?___fladd+1,w
  7081     1F39  00E7               	movwf	?___flsub+1
  7082     1F3A  0852               	movf	?___fladd,w
  7083     1F3B  00E6               	movwf	?___flsub
  7084     1F3C                     l609:
  7085     1F3C  0008               	return
  7086     1F3D                     __end_of___flsub:
  7087                           
  7088                           	psect	text18
  7089     15A8                     __ptext18:	
  7090 ;; *************** function ___fladd *****************
  7091 ;; Defined at:
  7092 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  7093 ;; Parameters:    Size  Location     Type
  7094 ;;  b               4   50[BANK0 ] long 
  7095 ;;  a               4   54[BANK0 ] long 
  7096 ;; Auto vars:     Size  Location     Type
  7097 ;;  grs             1   69[BANK0 ] unsigned char 
  7098 ;;  bexp            1   68[BANK0 ] unsigned char 
  7099 ;;  aexp            1   67[BANK0 ] unsigned char 
  7100 ;;  signs           1   66[BANK0 ] unsigned char 
  7101 ;; Return value:  Size  Location     Type
  7102 ;;                  4   50[BANK0 ] unsigned char 
  7103 ;; Registers used:
  7104 ;;		wreg, status,2, status,0, btemp+1
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7110 ;;      Params:         0       8       0       0       0
  7111 ;;      Locals:         0       4       0       0       0
  7112 ;;      Temps:          0       8       0       0       0
  7113 ;;      Totals:         0      20       0       0       0
  7114 ;;Total ram usage:       20 bytes
  7115 ;; Hardware stack levels used: 1
  7116 ;; This function calls:
  7117 ;;		Nothing
  7118 ;; This function is called by:
  7119 ;;		_sprintf
  7120 ;;		___flsub
  7121 ;; This function uses a non-reentrant model
  7122 ;;
  7123                           
  7124     15A8                     ___fladd:	
  7125                           ;psect for function ___fladd
  7126                           
  7127     15A8                     l2096:	
  7128                           ;incstack = 0
  7129                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7130                           
  7131     15A8  1283               	bcf	3,5	;RP0=0, select bank0
  7132     15A9  1303               	bcf	3,6	;RP1=0, select bank0
  7133     15AA  0855               	movf	___fladd@b+3,w
  7134     15AB  3980               	andlw	128
  7135     15AC  00E2               	movwf	___fladd@signs
  7136     15AD                     l2098:
  7137     15AD  0855               	movf	___fladd@b+3,w
  7138     15AE  00DA               	movwf	??___fladd
  7139     15AF  075A               	addwf	??___fladd,w
  7140     15B0  00E4               	movwf	___fladd@bexp
  7141     15B1                     l2100:
  7142     15B1  1FD4               	btfss	___fladd@b+2,7
  7143     15B2  2DB4               	goto	u3001
  7144     15B3  2DB5               	goto	u3000
  7145     15B4                     u3001:
  7146     15B4  2DB6               	goto	l2104
  7147     15B5                     u3000:
  7148     15B5                     l2102:
  7149     15B5  1464               	bsf	___fladd@bexp,0
  7150     15B6                     l2104:
  7151     15B6  0864               	movf	___fladd@bexp,w
  7152     15B7  1903               	btfsc	3,2
  7153     15B8  2DBA               	goto	u3011
  7154     15B9  2DBB               	goto	u3010
  7155     15BA                     u3011:
  7156     15BA  2DCB               	goto	l2114
  7157     15BB                     u3010:
  7158     15BB                     l2106:
  7159     15BB  0A64               	incf	___fladd@bexp,w
  7160     15BC  1D03               	btfss	3,2
  7161     15BD  2DBF               	goto	u3021
  7162     15BE  2DC0               	goto	u3020
  7163     15BF                     u3021:
  7164     15BF  2DC8               	goto	l2110
  7165     15C0                     u3020:
  7166     15C0                     l2108:
  7167     15C0  3000               	movlw	0
  7168     15C1  00D5               	movwf	___fladd@b+3
  7169     15C2  3000               	movlw	0
  7170     15C3  00D4               	movwf	___fladd@b+2
  7171     15C4  3000               	movlw	0
  7172     15C5  00D3               	movwf	___fladd@b+1
  7173     15C6  3000               	movlw	0
  7174     15C7  00D2               	movwf	___fladd@b
  7175     15C8                     l2110:
  7176     15C8  17D4               	bsf	___fladd@b+2,7
  7177     15C9                     l2112:
  7178     15C9  01D5               	clrf	___fladd@b+3
  7179     15CA  2DD3               	goto	l2116
  7180     15CB                     l2114:
  7181     15CB  3000               	movlw	0
  7182     15CC  00D5               	movwf	___fladd@b+3
  7183     15CD  3000               	movlw	0
  7184     15CE  00D4               	movwf	___fladd@b+2
  7185     15CF  3000               	movlw	0
  7186     15D0  00D3               	movwf	___fladd@b+1
  7187     15D1  3000               	movlw	0
  7188     15D2  00D2               	movwf	___fladd@b
  7189     15D3                     l2116:
  7190     15D3  0859               	movf	___fladd@a+3,w
  7191     15D4  3980               	andlw	128
  7192     15D5  00E3               	movwf	___fladd@aexp
  7193     15D6                     l2118:
  7194     15D6  0863               	movf	___fladd@aexp,w
  7195     15D7  0662               	xorwf	___fladd@signs,w
  7196     15D8  1903               	skipnz
  7197     15D9  2DDB               	goto	u3031
  7198     15DA  2DDC               	goto	u3030
  7199     15DB                     u3031:
  7200     15DB  2DDD               	goto	l2122
  7201     15DC                     u3030:
  7202     15DC                     l2120:
  7203     15DC  1762               	bsf	___fladd@signs,6
  7204     15DD                     l2122:
  7205     15DD  0859               	movf	___fladd@a+3,w
  7206     15DE  00DA               	movwf	??___fladd
  7207     15DF  075A               	addwf	??___fladd,w
  7208     15E0  00E3               	movwf	___fladd@aexp
  7209     15E1                     l2124:
  7210     15E1  1FD8               	btfss	___fladd@a+2,7
  7211     15E2  2DE4               	goto	u3041
  7212     15E3  2DE5               	goto	u3040
  7213     15E4                     u3041:
  7214     15E4  2DE6               	goto	l2128
  7215     15E5                     u3040:
  7216     15E5                     l2126:
  7217     15E5  1463               	bsf	___fladd@aexp,0
  7218     15E6                     l2128:
  7219     15E6  0863               	movf	___fladd@aexp,w
  7220     15E7  1903               	btfsc	3,2
  7221     15E8  2DEA               	goto	u3051
  7222     15E9  2DEB               	goto	u3050
  7223     15EA                     u3051:
  7224     15EA  2DFB               	goto	l2138
  7225     15EB                     u3050:
  7226     15EB                     l2130:
  7227     15EB  0A63               	incf	___fladd@aexp,w
  7228     15EC  1D03               	btfss	3,2
  7229     15ED  2DEF               	goto	u3061
  7230     15EE  2DF0               	goto	u3060
  7231     15EF                     u3061:
  7232     15EF  2DF8               	goto	l2134
  7233     15F0                     u3060:
  7234     15F0                     l2132:
  7235     15F0  3000               	movlw	0
  7236     15F1  00D9               	movwf	___fladd@a+3
  7237     15F2  3000               	movlw	0
  7238     15F3  00D8               	movwf	___fladd@a+2
  7239     15F4  3000               	movlw	0
  7240     15F5  00D7               	movwf	___fladd@a+1
  7241     15F6  3000               	movlw	0
  7242     15F7  00D6               	movwf	___fladd@a
  7243     15F8                     l2134:
  7244     15F8  17D8               	bsf	___fladd@a+2,7
  7245     15F9                     l2136:
  7246     15F9  01D9               	clrf	___fladd@a+3
  7247     15FA  2E03               	goto	l563
  7248     15FB                     l2138:
  7249     15FB  3000               	movlw	0
  7250     15FC  00D9               	movwf	___fladd@a+3
  7251     15FD  3000               	movlw	0
  7252     15FE  00D8               	movwf	___fladd@a+2
  7253     15FF  3000               	movlw	0
  7254     1600  00D7               	movwf	___fladd@a+1
  7255     1601  3000               	movlw	0
  7256     1602  00D6               	movwf	___fladd@a
  7257     1603                     l563:
  7258     1603  0864               	movf	___fladd@bexp,w
  7259     1604  0263               	subwf	___fladd@aexp,w
  7260     1605  1803               	skipnc
  7261     1606  2E08               	goto	u3071
  7262     1607  2E09               	goto	u3070
  7263     1608                     u3071:
  7264     1608  2E2F               	goto	l2174
  7265     1609                     u3070:
  7266     1609                     l2140:
  7267     1609  1F62               	btfss	___fladd@signs,6
  7268     160A  2E0C               	goto	u3081
  7269     160B  2E0D               	goto	u3080
  7270     160C                     u3081:
  7271     160C  2E11               	goto	l2144
  7272     160D                     u3080:
  7273     160D                     l2142:
  7274     160D  3080               	movlw	128
  7275     160E  00DA               	movwf	??___fladd
  7276     160F  085A               	movf	??___fladd,w
  7277     1610  06E2               	xorwf	___fladd@signs,f
  7278     1611                     l2144:
  7279     1611  0864               	movf	___fladd@bexp,w
  7280     1612  00E5               	movwf	___fladd@grs
  7281     1613                     l2146:
  7282     1613  0863               	movf	___fladd@aexp,w
  7283     1614  00E4               	movwf	___fladd@bexp
  7284     1615                     l2148:
  7285     1615  0865               	movf	___fladd@grs,w
  7286     1616  00E3               	movwf	___fladd@aexp
  7287     1617                     l2150:
  7288     1617  0852               	movf	___fladd@b,w
  7289     1618  00E5               	movwf	___fladd@grs
  7290     1619                     l2152:
  7291     1619  0856               	movf	___fladd@a,w
  7292     161A  00D2               	movwf	___fladd@b
  7293     161B                     l2154:
  7294     161B  0865               	movf	___fladd@grs,w
  7295     161C  00D6               	movwf	___fladd@a
  7296     161D                     l2156:
  7297     161D  0853               	movf	___fladd@b+1,w
  7298     161E  00E5               	movwf	___fladd@grs
  7299     161F                     l2158:
  7300     161F  0857               	movf	___fladd@a+1,w
  7301     1620  00D3               	movwf	___fladd@b+1
  7302     1621                     l2160:
  7303     1621  0865               	movf	___fladd@grs,w
  7304     1622  00D7               	movwf	___fladd@a+1
  7305     1623                     l2162:
  7306     1623  0854               	movf	___fladd@b+2,w
  7307     1624  00E5               	movwf	___fladd@grs
  7308     1625                     l2164:
  7309     1625  0858               	movf	___fladd@a+2,w
  7310     1626  00D4               	movwf	___fladd@b+2
  7311     1627                     l2166:
  7312     1627  0865               	movf	___fladd@grs,w
  7313     1628  00D8               	movwf	___fladd@a+2
  7314     1629                     l2168:
  7315     1629  0855               	movf	___fladd@b+3,w
  7316     162A  00E5               	movwf	___fladd@grs
  7317     162B                     l2170:
  7318     162B  0859               	movf	___fladd@a+3,w
  7319     162C  00D5               	movwf	___fladd@b+3
  7320     162D                     l2172:
  7321     162D  0865               	movf	___fladd@grs,w
  7322     162E  00D9               	movwf	___fladd@a+3
  7323     162F                     l2174:
  7324     162F  01E5               	clrf	___fladd@grs
  7325     1630                     l2176:
  7326     1630  0863               	movf	___fladd@aexp,w
  7327     1631  00DA               	movwf	??___fladd
  7328     1632  01DB               	clrf	??___fladd+1
  7329     1633  085B               	movf	??___fladd+1,w
  7330     1634  00DD               	movwf	??___fladd+3
  7331     1635  0864               	movf	___fladd@bexp,w
  7332     1636  025A               	subwf	??___fladd,w
  7333     1637  00DC               	movwf	??___fladd+2
  7334     1638  1C03               	skipc
  7335     1639  03DD               	decf	??___fladd+3,f
  7336     163A  085D               	movf	??___fladd+3,w
  7337     163B  3A80               	xorlw	128
  7338     163C  00FF               	movwf	btemp+1
  7339     163D  3080               	movlw	128
  7340     163E  027F               	subwf	btemp+1,w
  7341     163F  1D03               	skipz
  7342     1640  2E43               	goto	u3095
  7343     1641  301A               	movlw	26
  7344     1642  025C               	subwf	??___fladd+2,w
  7345     1643                     u3095:
  7346     1643  1C03               	skipc
  7347     1644  2E46               	goto	u3091
  7348     1645  2E47               	goto	u3090
  7349     1646                     u3091:
  7350     1646  2E7E               	goto	l2192
  7351     1647                     u3090:
  7352     1647                     l2178:
  7353     1647  1283               	bcf	3,5	;RP0=0, select bank0
  7354     1648  1303               	bcf	3,6	;RP1=0, select bank0
  7355     1649  0855               	movf	___fladd@b+3,w
  7356     164A  0454               	iorwf	___fladd@b+2,w
  7357     164B  0453               	iorwf	___fladd@b+1,w
  7358     164C  0452               	iorwf	___fladd@b,w
  7359     164D  1D03               	skipz
  7360     164E  2E50               	goto	u3101
  7361     164F  2E52               	goto	u3100
  7362     1650                     u3101:
  7363     1650  3001               	movlw	1
  7364     1651  2E53               	goto	u3110
  7365     1652                     u3100:
  7366     1652  3000               	movlw	0
  7367     1653                     u3110:
  7368     1653  00E5               	movwf	___fladd@grs
  7369     1654  3000               	movlw	0
  7370     1655  00D5               	movwf	___fladd@b+3
  7371     1656  3000               	movlw	0
  7372     1657  00D4               	movwf	___fladd@b+2
  7373     1658  3000               	movlw	0
  7374     1659  00D3               	movwf	___fladd@b+1
  7375     165A  3000               	movlw	0
  7376     165B  00D2               	movwf	___fladd@b
  7377     165C  0863               	movf	___fladd@aexp,w
  7378     165D  00E4               	movwf	___fladd@bexp
  7379     165E  2E86               	goto	l567
  7380     165F                     l569:
  7381     165F  1C65               	btfss	___fladd@grs,0
  7382     1660  2E62               	goto	u3121
  7383     1661  2E63               	goto	u3120
  7384     1662                     u3121:
  7385     1662  2E6A               	goto	l2182
  7386     1663                     u3120:
  7387     1663                     l2180:
  7388     1663  0865               	movf	___fladd@grs,w
  7389     1664  00DA               	movwf	??___fladd
  7390     1665  1003               	clrc
  7391     1666  0C5A               	rrf	??___fladd,w
  7392     1667  3801               	iorlw	1
  7393     1668  00E5               	movwf	___fladd@grs
  7394     1669  2E6C               	goto	l2184
  7395     166A                     l2182:
  7396     166A  1003               	clrc
  7397     166B  0CE5               	rrf	___fladd@grs,f
  7398     166C                     l2184:
  7399     166C  1C52               	btfss	___fladd@b,0
  7400     166D  2E6F               	goto	u3131
  7401     166E  2E70               	goto	u3130
  7402     166F                     u3131:
  7403     166F  2E71               	goto	l2188
  7404     1670                     u3130:
  7405     1670                     l2186:
  7406     1670  17E5               	bsf	___fladd@grs,7
  7407     1671                     l2188:
  7408     1671  3001               	movlw	1
  7409     1672  00DA               	movwf	??___fladd
  7410     1673                     u3145:
  7411     1673  0D55               	rlf	___fladd@b+3,w
  7412     1674  0CD5               	rrf	___fladd@b+3,f
  7413     1675  0CD4               	rrf	___fladd@b+2,f
  7414     1676  0CD3               	rrf	___fladd@b+1,f
  7415     1677  0CD2               	rrf	___fladd@b,f
  7416     1678  0BDA               	decfsz	??___fladd& (0+127),f
  7417     1679  2E73               	goto	u3145
  7418     167A                     l2190:
  7419     167A  3001               	movlw	1
  7420     167B  00DA               	movwf	??___fladd
  7421     167C  085A               	movf	??___fladd,w
  7422     167D  07E4               	addwf	___fladd@bexp,f
  7423     167E                     l2192:
  7424     167E  1283               	bcf	3,5	;RP0=0, select bank0
  7425     167F  1303               	bcf	3,6	;RP1=0, select bank0
  7426     1680  0863               	movf	___fladd@aexp,w
  7427     1681  0264               	subwf	___fladd@bexp,w
  7428     1682  1C03               	skipc
  7429     1683  2E85               	goto	u3151
  7430     1684  2E86               	goto	u3150
  7431     1685                     u3151:
  7432     1685  2E5F               	goto	l569
  7433     1686                     u3150:
  7434     1686                     l567:
  7435     1686  1B62               	btfsc	___fladd@signs,6
  7436     1687  2E89               	goto	u3161
  7437     1688  2E8A               	goto	u3160
  7438     1689                     u3161:
  7439     1689  2ED3               	goto	l2218
  7440     168A                     u3160:
  7441     168A                     l2194:
  7442     168A  0864               	movf	___fladd@bexp,w
  7443     168B  1D03               	btfss	3,2
  7444     168C  2E8E               	goto	u3171
  7445     168D  2E8F               	goto	u3170
  7446     168E                     u3171:
  7447     168E  2E98               	goto	l2200
  7448     168F                     u3170:
  7449     168F                     l2196:
  7450     168F  3000               	movlw	0
  7451     1690  00D5               	movwf	?___fladd+3
  7452     1691  3000               	movlw	0
  7453     1692  00D4               	movwf	?___fladd+2
  7454     1693  3000               	movlw	0
  7455     1694  00D3               	movwf	?___fladd+1
  7456     1695  3000               	movlw	0
  7457     1696  00D2               	movwf	?___fladd
  7458     1697  2FFF               	goto	l576
  7459     1698                     l2200:
  7460     1698  0856               	movf	___fladd@a,w
  7461     1699  07D2               	addwf	___fladd@b,f
  7462     169A  0857               	movf	___fladd@a+1,w
  7463     169B  1103               	clrz
  7464     169C  1803               	skipnc
  7465     169D  3E01               	addlw	1
  7466     169E  1903               	skipnz
  7467     169F  2EA1               	goto	u3181
  7468     16A0  07D3               	addwf	___fladd@b+1,f
  7469     16A1                     u3181:
  7470     16A1  0858               	movf	___fladd@a+2,w
  7471     16A2  1103               	clrz
  7472     16A3  1803               	skipnc
  7473     16A4  3E01               	addlw	1
  7474     16A5  1903               	skipnz
  7475     16A6  2EA8               	goto	u3182
  7476     16A7  07D4               	addwf	___fladd@b+2,f
  7477     16A8                     u3182:
  7478     16A8  0859               	movf	___fladd@a+3,w
  7479     16A9  1103               	clrz
  7480     16AA  1803               	skipnc
  7481     16AB  3E01               	addlw	1
  7482     16AC  1903               	skipnz
  7483     16AD  2EAF               	goto	u3183
  7484     16AE  07D5               	addwf	___fladd@b+3,f
  7485     16AF                     u3183:
  7486     16AF                     l2202:
  7487     16AF  1C55               	btfss	___fladd@b+3,0
  7488     16B0  2EB2               	goto	u3191
  7489     16B1  2EB3               	goto	u3190
  7490     16B2                     u3191:
  7491     16B2  2F87               	goto	l2252
  7492     16B3                     u3190:
  7493     16B3                     l2204:
  7494     16B3  1C65               	btfss	___fladd@grs,0
  7495     16B4  2EB6               	goto	u3201
  7496     16B5  2EB7               	goto	u3200
  7497     16B6                     u3201:
  7498     16B6  2EBE               	goto	l2208
  7499     16B7                     u3200:
  7500     16B7                     l2206:
  7501     16B7  0865               	movf	___fladd@grs,w
  7502     16B8  00DA               	movwf	??___fladd
  7503     16B9  1003               	clrc
  7504     16BA  0C5A               	rrf	??___fladd,w
  7505     16BB  3801               	iorlw	1
  7506     16BC  00E5               	movwf	___fladd@grs
  7507     16BD  2EC0               	goto	l2210
  7508     16BE                     l2208:
  7509     16BE  1003               	clrc
  7510     16BF  0CE5               	rrf	___fladd@grs,f
  7511     16C0                     l2210:
  7512     16C0  1C52               	btfss	___fladd@b,0
  7513     16C1  2EC3               	goto	u3211
  7514     16C2  2EC4               	goto	u3210
  7515     16C3                     u3211:
  7516     16C3  2EC5               	goto	l2214
  7517     16C4                     u3210:
  7518     16C4                     l2212:
  7519     16C4  17E5               	bsf	___fladd@grs,7
  7520     16C5                     l2214:
  7521     16C5  3001               	movlw	1
  7522     16C6  00DA               	movwf	??___fladd
  7523     16C7                     u3225:
  7524     16C7  0D55               	rlf	___fladd@b+3,w
  7525     16C8  0CD5               	rrf	___fladd@b+3,f
  7526     16C9  0CD4               	rrf	___fladd@b+2,f
  7527     16CA  0CD3               	rrf	___fladd@b+1,f
  7528     16CB  0CD2               	rrf	___fladd@b,f
  7529     16CC  0BDA               	decfsz	??___fladd& (0+127),f
  7530     16CD  2EC7               	goto	u3225
  7531     16CE                     l2216:
  7532     16CE  3001               	movlw	1
  7533     16CF  00DA               	movwf	??___fladd
  7534     16D0  085A               	movf	??___fladd,w
  7535     16D1  07E4               	addwf	___fladd@bexp,f
  7536     16D2  2F87               	goto	l2252
  7537     16D3                     l2218:
  7538     16D3  0855               	movf	___fladd@b+3,w
  7539     16D4  3A80               	xorlw	128
  7540     16D5  00FF               	movwf	btemp+1
  7541     16D6  0859               	movf	___fladd@a+3,w
  7542     16D7  3A80               	xorlw	128
  7543     16D8  027F               	subwf	btemp+1,w
  7544     16D9  1D03               	skipz
  7545     16DA  2EE5               	goto	u3233
  7546     16DB  0858               	movf	___fladd@a+2,w
  7547     16DC  0254               	subwf	___fladd@b+2,w
  7548     16DD  1D03               	skipz
  7549     16DE  2EE5               	goto	u3233
  7550     16DF  0857               	movf	___fladd@a+1,w
  7551     16E0  0253               	subwf	___fladd@b+1,w
  7552     16E1  1D03               	skipz
  7553     16E2  2EE5               	goto	u3233
  7554     16E3  0856               	movf	___fladd@a,w
  7555     16E4  0252               	subwf	___fladd@b,w
  7556     16E5                     u3233:
  7557     16E5  1803               	skipnc
  7558     16E6  2EE8               	goto	u3231
  7559     16E7  2EE9               	goto	u3230
  7560     16E8                     u3231:
  7561     16E8  2F41               	goto	l2228
  7562     16E9                     u3230:
  7563     16E9                     l2220:
  7564     16E9  30FF               	movlw	255
  7565     16EA  00DA               	movwf	??___fladd
  7566     16EB  30FF               	movlw	255
  7567     16EC  00DB               	movwf	??___fladd+1
  7568     16ED  30FF               	movlw	255
  7569     16EE  00DC               	movwf	??___fladd+2
  7570     16EF  30FF               	movlw	255
  7571     16F0  00DD               	movwf	??___fladd+3
  7572     16F1  0856               	movf	___fladd@a,w
  7573     16F2  00DE               	movwf	??___fladd+4
  7574     16F3  0857               	movf	___fladd@a+1,w
  7575     16F4  00DF               	movwf	??___fladd+5
  7576     16F5  0858               	movf	___fladd@a+2,w
  7577     16F6  00E0               	movwf	??___fladd+6
  7578     16F7  0859               	movf	___fladd@a+3,w
  7579     16F8  00E1               	movwf	??___fladd+7
  7580     16F9  0852               	movf	___fladd@b,w
  7581     16FA  02DE               	subwf	??___fladd+4,f
  7582     16FB  0853               	movf	___fladd@b+1,w
  7583     16FC  1C03               	skipc
  7584     16FD  0F53               	incfsz	___fladd@b+1,w
  7585     16FE  2F00               	goto	u3241
  7586     16FF  2F01               	goto	u3242
  7587     1700                     u3241:
  7588     1700  02DF               	subwf	??___fladd+5,f
  7589     1701                     u3242:
  7590     1701  0854               	movf	___fladd@b+2,w
  7591     1702  1C03               	skipc
  7592     1703  0F54               	incfsz	___fladd@b+2,w
  7593     1704  2F06               	goto	u3243
  7594     1705  2F07               	goto	u3244
  7595     1706                     u3243:
  7596     1706  02E0               	subwf	??___fladd+6,f
  7597     1707                     u3244:
  7598     1707  0855               	movf	___fladd@b+3,w
  7599     1708  1C03               	skipc
  7600     1709  0F55               	incfsz	___fladd@b+3,w
  7601     170A  2F0C               	goto	u3245
  7602     170B  2F0D               	goto	u3246
  7603     170C                     u3245:
  7604     170C  02E1               	subwf	??___fladd+7,f
  7605     170D                     u3246:
  7606     170D  085E               	movf	??___fladd+4,w
  7607     170E  07DA               	addwf	??___fladd,f
  7608     170F  085F               	movf	??___fladd+5,w
  7609     1710  1803               	skipnc
  7610     1711  0F5F               	incfsz	??___fladd+5,w
  7611     1712  2F14               	goto	u3250
  7612     1713  2F15               	goto	u3251
  7613     1714                     u3250:
  7614     1714  07DB               	addwf	??___fladd+1,f
  7615     1715                     u3251:
  7616     1715  0860               	movf	??___fladd+6,w
  7617     1716  1803               	skipnc
  7618     1717  0F60               	incfsz	??___fladd+6,w
  7619     1718  2F1A               	goto	u3252
  7620     1719  2F1B               	goto	u3253
  7621     171A                     u3252:
  7622     171A  07DC               	addwf	??___fladd+2,f
  7623     171B                     u3253:
  7624     171B  0861               	movf	??___fladd+7,w
  7625     171C  1803               	skipnc
  7626     171D  0A61               	incf	??___fladd+7,w
  7627     171E  07DD               	addwf	??___fladd+3,f
  7628     171F  085D               	movf	??___fladd+3,w
  7629     1720  00D5               	movwf	___fladd@b+3
  7630     1721  085C               	movf	??___fladd+2,w
  7631     1722  00D4               	movwf	___fladd@b+2
  7632     1723  085B               	movf	??___fladd+1,w
  7633     1724  00D3               	movwf	___fladd@b+1
  7634     1725  085A               	movf	??___fladd,w
  7635     1726  00D2               	movwf	___fladd@b
  7636     1727                     l2222:
  7637     1727  3080               	movlw	128
  7638     1728  00DA               	movwf	??___fladd
  7639     1729  085A               	movf	??___fladd,w
  7640     172A  06E2               	xorwf	___fladd@signs,f
  7641     172B  09E5               	comf	___fladd@grs,f
  7642     172C  0AE5               	incf	___fladd@grs,f
  7643     172D                     l2224:
  7644     172D  0865               	movf	___fladd@grs,w
  7645     172E  1D03               	btfss	3,2
  7646     172F  2F31               	goto	u3261
  7647     1730  2F32               	goto	u3260
  7648     1731                     u3261:
  7649     1731  2F4F               	goto	l584
  7650     1732                     u3260:
  7651     1732                     l2226:
  7652     1732  3001               	movlw	1
  7653     1733  07D2               	addwf	___fladd@b,f
  7654     1734  3000               	movlw	0
  7655     1735  1803               	skipnc
  7656     1736  3001               	movlw	1
  7657     1737  07D3               	addwf	___fladd@b+1,f
  7658     1738  3000               	movlw	0
  7659     1739  1803               	skipnc
  7660     173A  3001               	movlw	1
  7661     173B  07D4               	addwf	___fladd@b+2,f
  7662     173C  3000               	movlw	0
  7663     173D  1803               	skipnc
  7664     173E  3001               	movlw	1
  7665     173F  07D5               	addwf	___fladd@b+3,f
  7666     1740  2F4F               	goto	l584
  7667     1741                     l2228:
  7668     1741  0856               	movf	___fladd@a,w
  7669     1742  02D2               	subwf	___fladd@b,f
  7670     1743  0857               	movf	___fladd@a+1,w
  7671     1744  1C03               	skipc
  7672     1745  0F57               	incfsz	___fladd@a+1,w
  7673     1746  02D3               	subwf	___fladd@b+1,f
  7674     1747  0858               	movf	___fladd@a+2,w
  7675     1748  1C03               	skipc
  7676     1749  0F58               	incfsz	___fladd@a+2,w
  7677     174A  02D4               	subwf	___fladd@b+2,f
  7678     174B  0859               	movf	___fladd@a+3,w
  7679     174C  1C03               	skipc
  7680     174D  0F59               	incfsz	___fladd@a+3,w
  7681     174E  02D5               	subwf	___fladd@b+3,f
  7682     174F                     l584:
  7683     174F  0855               	movf	___fladd@b+3,w
  7684     1750  0454               	iorwf	___fladd@b+2,w
  7685     1751  0453               	iorwf	___fladd@b+1,w
  7686     1752  0452               	iorwf	___fladd@b,w
  7687     1753  1D03               	skipz
  7688     1754  2F56               	goto	u3271
  7689     1755  2F57               	goto	u3270
  7690     1756                     u3271:
  7691     1756  2F83               	goto	l2250
  7692     1757                     u3270:
  7693     1757                     l2230:
  7694     1757  0865               	movf	___fladd@grs,w
  7695     1758  1D03               	btfss	3,2
  7696     1759  2F5B               	goto	u3281
  7697     175A  2F5C               	goto	u3280
  7698     175B                     u3281:
  7699     175B  2F83               	goto	l2250
  7700     175C                     u3280:
  7701     175C                     l2232:
  7702     175C  3000               	movlw	0
  7703     175D  00D5               	movwf	?___fladd+3
  7704     175E  3000               	movlw	0
  7705     175F  00D4               	movwf	?___fladd+2
  7706     1760  3000               	movlw	0
  7707     1761  00D3               	movwf	?___fladd+1
  7708     1762  3000               	movlw	0
  7709     1763  00D2               	movwf	?___fladd
  7710     1764  2FFF               	goto	l576
  7711     1765                     l2236:
  7712     1765  3001               	movlw	1
  7713     1766  00DA               	movwf	??___fladd
  7714     1767                     u3295:
  7715     1767  1003               	clrc
  7716     1768  0DD2               	rlf	___fladd@b,f
  7717     1769  0DD3               	rlf	___fladd@b+1,f
  7718     176A  0DD4               	rlf	___fladd@b+2,f
  7719     176B  0DD5               	rlf	___fladd@b+3,f
  7720     176C  0BDA               	decfsz	??___fladd,f
  7721     176D  2F67               	goto	u3295
  7722     176E                     l2238:
  7723     176E  1FE5               	btfss	___fladd@grs,7
  7724     176F  2F71               	goto	u3301
  7725     1770  2F72               	goto	u3300
  7726     1771                     u3301:
  7727     1771  2F73               	goto	l588
  7728     1772                     u3300:
  7729     1772                     l2240:
  7730     1772  1452               	bsf	___fladd@b,0
  7731     1773                     l588:
  7732     1773  1C65               	btfss	___fladd@grs,0
  7733     1774  2F76               	goto	u3311
  7734     1775  2F77               	goto	u3310
  7735     1776                     u3311:
  7736     1776  2F7A               	goto	l2244
  7737     1777                     u3310:
  7738     1777                     l2242:
  7739     1777  1403               	setc
  7740     1778  0DE5               	rlf	___fladd@grs,f
  7741     1779  2F7C               	goto	l2246
  7742     177A                     l2244:
  7743     177A  1003               	clrc
  7744     177B  0DE5               	rlf	___fladd@grs,f
  7745     177C                     l2246:
  7746     177C  0864               	movf	___fladd@bexp,w
  7747     177D  1903               	btfsc	3,2
  7748     177E  2F80               	goto	u3321
  7749     177F  2F81               	goto	u3320
  7750     1780                     u3321:
  7751     1780  2F83               	goto	l2250
  7752     1781                     u3320:
  7753     1781                     l2248:
  7754     1781  3001               	movlw	1
  7755     1782  02E4               	subwf	___fladd@bexp,f
  7756     1783                     l2250:
  7757     1783  1FD4               	btfss	___fladd@b+2,7
  7758     1784  2F86               	goto	u3331
  7759     1785  2F87               	goto	u3330
  7760     1786                     u3331:
  7761     1786  2F65               	goto	l2236
  7762     1787                     u3330:
  7763     1787                     l2252:
  7764     1787  01E3               	clrf	___fladd@aexp
  7765     1788                     l2254:
  7766     1788  1FE5               	btfss	___fladd@grs,7
  7767     1789  2F8B               	goto	u3341
  7768     178A  2F8C               	goto	u3340
  7769     178B                     u3341:
  7770     178B  2F9A               	goto	l2262
  7771     178C                     u3340:
  7772     178C                     l2256:
  7773     178C  0865               	movf	___fladd@grs,w
  7774     178D  397F               	andlw	127
  7775     178E  1903               	btfsc	3,2
  7776     178F  2F91               	goto	u3351
  7777     1790  2F92               	goto	u3350
  7778     1791                     u3351:
  7779     1791  2F95               	goto	l594
  7780     1792                     u3350:
  7781     1792                     l2258:
  7782     1792  01E3               	clrf	___fladd@aexp
  7783     1793  0AE3               	incf	___fladd@aexp,f
  7784     1794  2F9A               	goto	l2262
  7785     1795                     l594:
  7786     1795  1C52               	btfss	___fladd@b,0
  7787     1796  2F98               	goto	u3361
  7788     1797  2F99               	goto	u3360
  7789     1798                     u3361:
  7790     1798  2F9A               	goto	l2262
  7791     1799                     u3360:
  7792     1799  2F92               	goto	l2258
  7793     179A                     l2262:
  7794     179A  0863               	movf	___fladd@aexp,w
  7795     179B  1903               	btfsc	3,2
  7796     179C  2F9E               	goto	u3371
  7797     179D  2F9F               	goto	u3370
  7798     179E                     u3371:
  7799     179E  2FD3               	goto	l597
  7800     179F                     u3370:
  7801     179F                     l2264:
  7802     179F  3001               	movlw	1
  7803     17A0  07D2               	addwf	___fladd@b,f
  7804     17A1  3000               	movlw	0
  7805     17A2  1803               	skipnc
  7806     17A3  3001               	movlw	1
  7807     17A4  07D3               	addwf	___fladd@b+1,f
  7808     17A5  3000               	movlw	0
  7809     17A6  1803               	skipnc
  7810     17A7  3001               	movlw	1
  7811     17A8  07D4               	addwf	___fladd@b+2,f
  7812     17A9  3000               	movlw	0
  7813     17AA  1803               	skipnc
  7814     17AB  3001               	movlw	1
  7815     17AC  07D5               	addwf	___fladd@b+3,f
  7816     17AD                     l2266:
  7817     17AD  1C55               	btfss	___fladd@b+3,0
  7818     17AE  2FB0               	goto	u3381
  7819     17AF  2FB1               	goto	u3380
  7820     17B0                     u3381:
  7821     17B0  2FD3               	goto	l597
  7822     17B1                     u3380:
  7823     17B1                     l2268:
  7824     17B1  0852               	movf	___fladd@b,w
  7825     17B2  00DA               	movwf	??___fladd
  7826     17B3  0853               	movf	___fladd@b+1,w
  7827     17B4  00DB               	movwf	??___fladd+1
  7828     17B5  0854               	movf	___fladd@b+2,w
  7829     17B6  00DC               	movwf	??___fladd+2
  7830     17B7  0855               	movf	___fladd@b+3,w
  7831     17B8  00DD               	movwf	??___fladd+3
  7832     17B9  3001               	movlw	1
  7833     17BA  00DE               	movwf	??___fladd+4
  7834     17BB                     u3395:
  7835     17BB  0D5D               	rlf	??___fladd+3,w
  7836     17BC  0CDD               	rrf	??___fladd+3,f
  7837     17BD  0CDC               	rrf	??___fladd+2,f
  7838     17BE  0CDB               	rrf	??___fladd+1,f
  7839     17BF  0CDA               	rrf	??___fladd,f
  7840     17C0                     u3390:
  7841     17C0  0BDE               	decfsz	??___fladd+4,f
  7842     17C1  2FBB               	goto	u3395
  7843     17C2  085D               	movf	??___fladd+3,w
  7844     17C3  00D5               	movwf	___fladd@b+3
  7845     17C4  085C               	movf	??___fladd+2,w
  7846     17C5  00D4               	movwf	___fladd@b+2
  7847     17C6  085B               	movf	??___fladd+1,w
  7848     17C7  00D3               	movwf	___fladd@b+1
  7849     17C8  085A               	movf	??___fladd,w
  7850     17C9  00D2               	movwf	___fladd@b
  7851     17CA  0A64               	incf	___fladd@bexp,w
  7852     17CB  1903               	btfsc	3,2
  7853     17CC  2FCE               	goto	u3401
  7854     17CD  2FCF               	goto	u3400
  7855     17CE                     u3401:
  7856     17CE  2FD3               	goto	l597
  7857     17CF                     u3400:
  7858     17CF                     l2270:
  7859     17CF  3001               	movlw	1
  7860     17D0  00DA               	movwf	??___fladd
  7861     17D1  085A               	movf	??___fladd,w
  7862     17D2  07E4               	addwf	___fladd@bexp,f
  7863     17D3                     l597:
  7864     17D3  0A64               	incf	___fladd@bexp,w
  7865     17D4  1903               	btfsc	3,2
  7866     17D5  2FD7               	goto	u3411
  7867     17D6  2FD8               	goto	u3410
  7868     17D7                     u3411:
  7869     17D7  2FDD               	goto	l2274
  7870     17D8                     u3410:
  7871     17D8                     l2272:
  7872     17D8  0864               	movf	___fladd@bexp,w
  7873     17D9  1D03               	btfss	3,2
  7874     17DA  2FDC               	goto	u3421
  7875     17DB  2FDD               	goto	u3420
  7876     17DC                     u3421:
  7877     17DC  2FEB               	goto	l2280
  7878     17DD                     u3420:
  7879     17DD                     l2274:
  7880     17DD  3000               	movlw	0
  7881     17DE  00D5               	movwf	___fladd@b+3
  7882     17DF  3000               	movlw	0
  7883     17E0  00D4               	movwf	___fladd@b+2
  7884     17E1  3000               	movlw	0
  7885     17E2  00D3               	movwf	___fladd@b+1
  7886     17E3  3000               	movlw	0
  7887     17E4  00D2               	movwf	___fladd@b
  7888     17E5                     l2276:
  7889     17E5  0864               	movf	___fladd@bexp,w
  7890     17E6  1D03               	btfss	3,2
  7891     17E7  2FE9               	goto	u3431
  7892     17E8  2FEA               	goto	u3430
  7893     17E9                     u3431:
  7894     17E9  2FEB               	goto	l2280
  7895     17EA                     u3430:
  7896     17EA                     l2278:
  7897     17EA  01E2               	clrf	___fladd@signs
  7898     17EB                     l2280:
  7899     17EB  1C64               	btfss	___fladd@bexp,0
  7900     17EC  2FEE               	goto	u3441
  7901     17ED  2FEF               	goto	u3440
  7902     17EE                     u3441:
  7903     17EE  2FF1               	goto	l2284
  7904     17EF                     u3440:
  7905     17EF                     l2282:
  7906     17EF  17D4               	bsf	___fladd@b+2,7
  7907     17F0  2FF5               	goto	l605
  7908     17F1                     l2284:
  7909     17F1  307F               	movlw	127
  7910     17F2  00DA               	movwf	??___fladd
  7911     17F3  085A               	movf	??___fladd,w
  7912     17F4  05D4               	andwf	___fladd@b+2,f
  7913     17F5                     l605:
  7914     17F5  0864               	movf	___fladd@bexp,w
  7915     17F6  00DA               	movwf	??___fladd
  7916     17F7  1003               	clrc
  7917     17F8  0C5A               	rrf	??___fladd,w
  7918     17F9  00D5               	movwf	___fladd@b+3
  7919     17FA                     l2286:
  7920     17FA  1FE2               	btfss	___fladd@signs,7
  7921     17FB  2FFD               	goto	u3451
  7922     17FC  2FFE               	goto	u3450
  7923     17FD                     u3451:
  7924     17FD  2FFF               	goto	l606
  7925     17FE                     u3450:
  7926     17FE                     l2288:
  7927     17FE  17D5               	bsf	___fladd@b+3,7
  7928     17FF                     l606:
  7929     17FF                     l576:
  7930     17FF  0008               	return
  7931     1800                     __end_of___fladd:
  7932                           
  7933                           	psect	text19
  7934     1EC5                     __ptext19:	
  7935 ;; *************** function ___flneg *****************
  7936 ;; Defined at:
  7937 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flneg.c"
  7938 ;; Parameters:    Size  Location     Type
  7939 ;;  f1              4    0[COMMON] unsigned char 
  7940 ;; Auto vars:     Size  Location     Type
  7941 ;;		None
  7942 ;; Return value:  Size  Location     Type
  7943 ;;                  4    0[COMMON] unsigned char 
  7944 ;; Registers used:
  7945 ;;		wreg
  7946 ;; Tracked objects:
  7947 ;;		On entry : 0/0
  7948 ;;		On exit  : 0/0
  7949 ;;		Unchanged: 0/0
  7950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7951 ;;      Params:         4       0       0       0       0
  7952 ;;      Locals:         0       0       0       0       0
  7953 ;;      Temps:          0       0       0       0       0
  7954 ;;      Totals:         4       0       0       0       0
  7955 ;;Total ram usage:        4 bytes
  7956 ;; Hardware stack levels used: 1
  7957 ;; This function calls:
  7958 ;;		Nothing
  7959 ;; This function is called by:
  7960 ;;		_sprintf
  7961 ;; This function uses a non-reentrant model
  7962 ;;
  7963                           
  7964     1EC5                     ___flneg:	
  7965                           ;psect for function ___flneg
  7966                           
  7967     1EC5                     l2692:	
  7968                           ;incstack = 0
  7969                           ; Regs used in ___flneg: [wreg]
  7970                           
  7971     1EC5  0873               	movf	___flneg@f1+3,w
  7972     1EC6  0472               	iorwf	___flneg@f1+2,w
  7973     1EC7  0471               	iorwf	___flneg@f1+1,w
  7974     1EC8  0470               	iorwf	___flneg@f1,w
  7975     1EC9  1903               	skipnz
  7976     1ECA  2ECC               	goto	u4561
  7977     1ECB  2ECD               	goto	u4560
  7978     1ECC                     u4561:
  7979     1ECC  2ECF               	goto	l2696
  7980     1ECD                     u4560:
  7981     1ECD                     l2694:
  7982     1ECD  3080               	movlw	128
  7983     1ECE  06F3               	xorwf	___flneg@f1+3,f
  7984     1ECF                     l2696:
  7985     1ECF                     l435:
  7986     1ECF  0008               	return
  7987     1ED0                     __end_of___flneg:
  7988                           
  7989                           	psect	text20
  7990     0802                     __ptext20:	
  7991 ;; *************** function ___flge *****************
  7992 ;; Defined at:
  7993 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flge.c"
  7994 ;; Parameters:    Size  Location     Type
  7995 ;;  ff1             4    0[COMMON] unsigned char 
  7996 ;;  ff2             4    4[COMMON] unsigned char 
  7997 ;; Auto vars:     Size  Location     Type
  7998 ;;		None
  7999 ;; Return value:  Size  Location     Type
  8000 ;;		None               void
  8001 ;; Registers used:
  8002 ;;		wreg, status,2, status,0
  8003 ;; Tracked objects:
  8004 ;;		On entry : 0/0
  8005 ;;		On exit  : 0/0
  8006 ;;		Unchanged: 0/0
  8007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8008 ;;      Params:         8       0       0       0       0
  8009 ;;      Locals:         0       0       0       0       0
  8010 ;;      Temps:          4       0       0       0       0
  8011 ;;      Totals:        12       0       0       0       0
  8012 ;;Total ram usage:       12 bytes
  8013 ;; Hardware stack levels used: 1
  8014 ;; This function calls:
  8015 ;;		Nothing
  8016 ;; This function is called by:
  8017 ;;		_sprintf
  8018 ;; This function uses a non-reentrant model
  8019 ;;
  8020                           
  8021     0802                     ___flge:	
  8022                           ;psect for function ___flge
  8023                           
  8024     0802                     l2672:	
  8025                           ;incstack = 0
  8026                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8027                           
  8028     0802  3000               	movlw	0
  8029     0803  0570               	andwf	___flge@ff1,w
  8030     0804  00F8               	movwf	??___flge
  8031     0805  3000               	movlw	0
  8032     0806  0571               	andwf	___flge@ff1+1,w
  8033     0807  00F9               	movwf	??___flge+1
  8034     0808  3080               	movlw	128
  8035     0809  0572               	andwf	___flge@ff1+2,w
  8036     080A  00FA               	movwf	??___flge+2
  8037     080B  307F               	movlw	127
  8038     080C  0573               	andwf	___flge@ff1+3,w
  8039     080D  00FB               	movwf	??___flge+3
  8040     080E  087B               	movf	??___flge+3,w
  8041     080F  047A               	iorwf	??___flge+2,w
  8042     0810  0479               	iorwf	??___flge+1,w
  8043     0811  0478               	iorwf	??___flge,w
  8044     0812  1D03               	skipz
  8045     0813  2815               	goto	u4491
  8046     0814  2816               	goto	u4490
  8047     0815                     u4491:
  8048     0815  281E               	goto	l427
  8049     0816                     u4490:
  8050     0816                     l2674:
  8051     0816  3000               	movlw	0
  8052     0817  00F3               	movwf	___flge@ff1+3
  8053     0818  3000               	movlw	0
  8054     0819  00F2               	movwf	___flge@ff1+2
  8055     081A  3000               	movlw	0
  8056     081B  00F1               	movwf	___flge@ff1+1
  8057     081C  3000               	movlw	0
  8058     081D  00F0               	movwf	___flge@ff1
  8059     081E                     l427:
  8060     081E  3000               	movlw	0
  8061     081F  0574               	andwf	___flge@ff2,w
  8062     0820  00F8               	movwf	??___flge
  8063     0821  3000               	movlw	0
  8064     0822  0575               	andwf	___flge@ff2+1,w
  8065     0823  00F9               	movwf	??___flge+1
  8066     0824  3080               	movlw	128
  8067     0825  0576               	andwf	___flge@ff2+2,w
  8068     0826  00FA               	movwf	??___flge+2
  8069     0827  307F               	movlw	127
  8070     0828  0577               	andwf	___flge@ff2+3,w
  8071     0829  00FB               	movwf	??___flge+3
  8072     082A  087B               	movf	??___flge+3,w
  8073     082B  047A               	iorwf	??___flge+2,w
  8074     082C  0479               	iorwf	??___flge+1,w
  8075     082D  0478               	iorwf	??___flge,w
  8076     082E  1D03               	skipz
  8077     082F  2831               	goto	u4501
  8078     0830  2832               	goto	u4500
  8079     0831                     u4501:
  8080     0831  283A               	goto	l2678
  8081     0832                     u4500:
  8082     0832                     l2676:
  8083     0832  3000               	movlw	0
  8084     0833  00F7               	movwf	___flge@ff2+3
  8085     0834  3000               	movlw	0
  8086     0835  00F6               	movwf	___flge@ff2+2
  8087     0836  3000               	movlw	0
  8088     0837  00F5               	movwf	___flge@ff2+1
  8089     0838  3000               	movlw	0
  8090     0839  00F4               	movwf	___flge@ff2
  8091     083A                     l2678:
  8092     083A  1FF3               	btfss	___flge@ff1+3,7
  8093     083B  283D               	goto	u4511
  8094     083C  283E               	goto	u4510
  8095     083D                     u4511:
  8096     083D  2862               	goto	l2682
  8097     083E                     u4510:
  8098     083E                     l2680:
  8099     083E  3000               	movlw	0
  8100     083F  00F8               	movwf	??___flge
  8101     0840  3000               	movlw	0
  8102     0841  00F9               	movwf	??___flge+1
  8103     0842  3000               	movlw	0
  8104     0843  00FA               	movwf	??___flge+2
  8105     0844  3080               	movlw	128
  8106     0845  00FB               	movwf	??___flge+3
  8107     0846  0870               	movf	___flge@ff1,w
  8108     0847  02F8               	subwf	??___flge,f
  8109     0848  0871               	movf	___flge@ff1+1,w
  8110     0849  1C03               	skipc
  8111     084A  0F71               	incfsz	___flge@ff1+1,w
  8112     084B  284D               	goto	u4521
  8113     084C  284E               	goto	u4522
  8114     084D                     u4521:
  8115     084D  02F9               	subwf	??___flge+1,f
  8116     084E                     u4522:
  8117     084E  0872               	movf	___flge@ff1+2,w
  8118     084F  1C03               	skipc
  8119     0850  0F72               	incfsz	___flge@ff1+2,w
  8120     0851  2853               	goto	u4523
  8121     0852  2854               	goto	u4524
  8122     0853                     u4523:
  8123     0853  02FA               	subwf	??___flge+2,f
  8124     0854                     u4524:
  8125     0854  0873               	movf	___flge@ff1+3,w
  8126     0855  1C03               	skipc
  8127     0856  0F73               	incfsz	___flge@ff1+3,w
  8128     0857  2859               	goto	u4525
  8129     0858  285A               	goto	u4526
  8130     0859                     u4525:
  8131     0859  02FB               	subwf	??___flge+3,f
  8132     085A                     u4526:
  8133     085A  087B               	movf	??___flge+3,w
  8134     085B  00F3               	movwf	___flge@ff1+3
  8135     085C  087A               	movf	??___flge+2,w
  8136     085D  00F2               	movwf	___flge@ff1+2
  8137     085E  0879               	movf	??___flge+1,w
  8138     085F  00F1               	movwf	___flge@ff1+1
  8139     0860  0878               	movf	??___flge,w
  8140     0861  00F0               	movwf	___flge@ff1
  8141     0862                     l2682:
  8142     0862  1FF7               	btfss	___flge@ff2+3,7
  8143     0863  2865               	goto	u4531
  8144     0864  2866               	goto	u4530
  8145     0865                     u4531:
  8146     0865  288A               	goto	l430
  8147     0866                     u4530:
  8148     0866                     l2684:
  8149     0866  3000               	movlw	0
  8150     0867  00F8               	movwf	??___flge
  8151     0868  3000               	movlw	0
  8152     0869  00F9               	movwf	??___flge+1
  8153     086A  3000               	movlw	0
  8154     086B  00FA               	movwf	??___flge+2
  8155     086C  3080               	movlw	128
  8156     086D  00FB               	movwf	??___flge+3
  8157     086E  0874               	movf	___flge@ff2,w
  8158     086F  02F8               	subwf	??___flge,f
  8159     0870  0875               	movf	___flge@ff2+1,w
  8160     0871  1C03               	skipc
  8161     0872  0F75               	incfsz	___flge@ff2+1,w
  8162     0873  2875               	goto	u4541
  8163     0874  2876               	goto	u4542
  8164     0875                     u4541:
  8165     0875  02F9               	subwf	??___flge+1,f
  8166     0876                     u4542:
  8167     0876  0876               	movf	___flge@ff2+2,w
  8168     0877  1C03               	skipc
  8169     0878  0F76               	incfsz	___flge@ff2+2,w
  8170     0879  287B               	goto	u4543
  8171     087A  287C               	goto	u4544
  8172     087B                     u4543:
  8173     087B  02FA               	subwf	??___flge+2,f
  8174     087C                     u4544:
  8175     087C  0877               	movf	___flge@ff2+3,w
  8176     087D  1C03               	skipc
  8177     087E  0F77               	incfsz	___flge@ff2+3,w
  8178     087F  2881               	goto	u4545
  8179     0880  2882               	goto	u4546
  8180     0881                     u4545:
  8181     0881  02FB               	subwf	??___flge+3,f
  8182     0882                     u4546:
  8183     0882  087B               	movf	??___flge+3,w
  8184     0883  00F7               	movwf	___flge@ff2+3
  8185     0884  087A               	movf	??___flge+2,w
  8186     0885  00F6               	movwf	___flge@ff2+2
  8187     0886  0879               	movf	??___flge+1,w
  8188     0887  00F5               	movwf	___flge@ff2+1
  8189     0888  0878               	movf	??___flge,w
  8190     0889  00F4               	movwf	___flge@ff2
  8191     088A                     l430:
  8192     088A  3080               	movlw	128
  8193     088B  06F3               	xorwf	___flge@ff1+3,f
  8194     088C  3080               	movlw	128
  8195     088D  06F7               	xorwf	___flge@ff2+3,f
  8196     088E  0877               	movf	___flge@ff2+3,w
  8197     088F  0273               	subwf	___flge@ff1+3,w
  8198     0890  1D03               	skipz
  8199     0891  289C               	goto	u4555
  8200     0892  0876               	movf	___flge@ff2+2,w
  8201     0893  0272               	subwf	___flge@ff1+2,w
  8202     0894  1D03               	skipz
  8203     0895  289C               	goto	u4555
  8204     0896  0875               	movf	___flge@ff2+1,w
  8205     0897  0271               	subwf	___flge@ff1+1,w
  8206     0898  1D03               	skipz
  8207     0899  289C               	goto	u4555
  8208     089A  0874               	movf	___flge@ff2,w
  8209     089B  0270               	subwf	___flge@ff1,w
  8210     089C                     u4555:
  8211     089C  1803               	skipnc
  8212     089D  289F               	goto	u4551
  8213     089E  28A0               	goto	u4550
  8214     089F                     u4551:
  8215     089F  28A2               	goto	l2688
  8216     08A0                     u4550:
  8217     08A0                     l2686:
  8218     08A0  1003               	clrc
  8219     08A1  28A3               	goto	l431
  8220     08A2                     l2688:
  8221     08A2  1403               	setc
  8222     08A3                     l431:
  8223     08A3  0008               	return
  8224     08A4                     __end_of___flge:
  8225                           
  8226                           	psect	text21
  8227     113A                     __ptext21:	
  8228 ;; *************** function ___fleq *****************
  8229 ;; Defined at:
  8230 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fleq.c"
  8231 ;; Parameters:    Size  Location     Type
  8232 ;;  ff1             4    0[COMMON] unsigned char 
  8233 ;;  ff2             4    4[COMMON] unsigned char 
  8234 ;; Auto vars:     Size  Location     Type
  8235 ;;		None
  8236 ;; Return value:  Size  Location     Type
  8237 ;;		None               void
  8238 ;; Registers used:
  8239 ;;		wreg, status,2, status,0
  8240 ;; Tracked objects:
  8241 ;;		On entry : 0/0
  8242 ;;		On exit  : 0/0
  8243 ;;		Unchanged: 0/0
  8244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8245 ;;      Params:         8       0       0       0       0
  8246 ;;      Locals:         0       0       0       0       0
  8247 ;;      Temps:          4       0       0       0       0
  8248 ;;      Totals:        12       0       0       0       0
  8249 ;;Total ram usage:       12 bytes
  8250 ;; Hardware stack levels used: 1
  8251 ;; This function calls:
  8252 ;;		Nothing
  8253 ;; This function is called by:
  8254 ;;		_sprintf
  8255 ;; This function uses a non-reentrant model
  8256 ;;
  8257                           
  8258     113A                     ___fleq:	
  8259                           ;psect for function ___fleq
  8260                           
  8261     113A                     l2660:	
  8262                           ;incstack = 0
  8263                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8264                           
  8265     113A  3000               	movlw	0
  8266     113B  0570               	andwf	___fleq@ff1,w
  8267     113C  00F8               	movwf	??___fleq
  8268     113D  3000               	movlw	0
  8269     113E  0571               	andwf	___fleq@ff1+1,w
  8270     113F  00F9               	movwf	??___fleq+1
  8271     1140  3080               	movlw	128
  8272     1141  0572               	andwf	___fleq@ff1+2,w
  8273     1142  00FA               	movwf	??___fleq+2
  8274     1143  307F               	movlw	127
  8275     1144  0573               	andwf	___fleq@ff1+3,w
  8276     1145  00FB               	movwf	??___fleq+3
  8277     1146  087B               	movf	??___fleq+3,w
  8278     1147  047A               	iorwf	??___fleq+2,w
  8279     1148  0479               	iorwf	??___fleq+1,w
  8280     1149  0478               	iorwf	??___fleq,w
  8281     114A  1D03               	skipz
  8282     114B  294D               	goto	u4461
  8283     114C  294E               	goto	u4460
  8284     114D                     u4461:
  8285     114D  2956               	goto	l422
  8286     114E                     u4460:
  8287     114E                     l2662:
  8288     114E  3000               	movlw	0
  8289     114F  00F3               	movwf	___fleq@ff1+3
  8290     1150  3000               	movlw	0
  8291     1151  00F2               	movwf	___fleq@ff1+2
  8292     1152  3000               	movlw	0
  8293     1153  00F1               	movwf	___fleq@ff1+1
  8294     1154  3000               	movlw	0
  8295     1155  00F0               	movwf	___fleq@ff1
  8296     1156                     l422:
  8297     1156  3000               	movlw	0
  8298     1157  0574               	andwf	___fleq@ff2,w
  8299     1158  00F8               	movwf	??___fleq
  8300     1159  3000               	movlw	0
  8301     115A  0575               	andwf	___fleq@ff2+1,w
  8302     115B  00F9               	movwf	??___fleq+1
  8303     115C  3080               	movlw	128
  8304     115D  0576               	andwf	___fleq@ff2+2,w
  8305     115E  00FA               	movwf	??___fleq+2
  8306     115F  307F               	movlw	127
  8307     1160  0577               	andwf	___fleq@ff2+3,w
  8308     1161  00FB               	movwf	??___fleq+3
  8309     1162  087B               	movf	??___fleq+3,w
  8310     1163  047A               	iorwf	??___fleq+2,w
  8311     1164  0479               	iorwf	??___fleq+1,w
  8312     1165  0478               	iorwf	??___fleq,w
  8313     1166  1D03               	skipz
  8314     1167  2969               	goto	u4471
  8315     1168  296A               	goto	u4470
  8316     1169                     u4471:
  8317     1169  2972               	goto	l423
  8318     116A                     u4470:
  8319     116A                     l2664:
  8320     116A  3000               	movlw	0
  8321     116B  00F7               	movwf	___fleq@ff2+3
  8322     116C  3000               	movlw	0
  8323     116D  00F6               	movwf	___fleq@ff2+2
  8324     116E  3000               	movlw	0
  8325     116F  00F5               	movwf	___fleq@ff2+1
  8326     1170  3000               	movlw	0
  8327     1171  00F4               	movwf	___fleq@ff2
  8328     1172                     l423:
  8329     1172  0877               	movf	___fleq@ff2+3,w
  8330     1173  0673               	xorwf	___fleq@ff1+3,w
  8331     1174  1D03               	skipz
  8332     1175  2980               	goto	u4485
  8333     1176  0876               	movf	___fleq@ff2+2,w
  8334     1177  0672               	xorwf	___fleq@ff1+2,w
  8335     1178  1D03               	skipz
  8336     1179  2980               	goto	u4485
  8337     117A  0875               	movf	___fleq@ff2+1,w
  8338     117B  0671               	xorwf	___fleq@ff1+1,w
  8339     117C  1D03               	skipz
  8340     117D  2980               	goto	u4485
  8341     117E  0874               	movf	___fleq@ff2,w
  8342     117F  0670               	xorwf	___fleq@ff1,w
  8343     1180                     u4485:
  8344     1180  1903               	skipnz
  8345     1181  2983               	goto	u4481
  8346     1182  2984               	goto	u4480
  8347     1183                     u4481:
  8348     1183  2986               	goto	l2668
  8349     1184                     u4480:
  8350     1184                     l2666:
  8351     1184  1003               	clrc
  8352     1185  2987               	goto	l424
  8353     1186                     l2668:
  8354     1186  1403               	setc
  8355     1187                     l424:
  8356     1187  0008               	return
  8357     1188                     __end_of___fleq:
  8358                           
  8359                           	psect	text22
  8360     1FBE                     __ptext22:	
  8361 ;; *************** function _Lcd_Write_String *****************
  8362 ;; Defined at:
  8363 ;;		line 97 in file "C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h"
  8364 ;; Parameters:    Size  Location     Type
  8365 ;;  a               2    5[COMMON] PTR unsigned char 
  8366 ;;		 -> main@array(20), STR_1(8), 
  8367 ;; Auto vars:     Size  Location     Type
  8368 ;;  i               2   10[COMMON] int 
  8369 ;; Return value:  Size  Location     Type
  8370 ;;                  1    wreg      void 
  8371 ;; Registers used:
  8372 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8373 ;; Tracked objects:
  8374 ;;		On entry : 0/0
  8375 ;;		On exit  : 0/0
  8376 ;;		Unchanged: 0/0
  8377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8378 ;;      Params:         2       0       0       0       0
  8379 ;;      Locals:         2       0       0       0       0
  8380 ;;      Temps:          3       0       0       0       0
  8381 ;;      Totals:         7       0       0       0       0
  8382 ;;Total ram usage:        7 bytes
  8383 ;; Hardware stack levels used: 1
  8384 ;; Hardware stack levels required when called: 2
  8385 ;; This function calls:
  8386 ;;		_Lcd_Write_Char
  8387 ;; This function is called by:
  8388 ;;		_main
  8389 ;; This function uses a non-reentrant model
  8390 ;;
  8391                           
  8392     1FBE                     _Lcd_Write_String:	
  8393                           ;psect for function _Lcd_Write_String
  8394                           
  8395     1FBE                     l2838:	
  8396                           ;incstack = 0
  8397                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8398                           
  8399                           
  8400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 97: void Lcd_Write_String(char 
      +                          *a);C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 98: {;C:\Program Files\Micro
      +                          chip\xc8\v2.40\pic\include\lcd.h: 99:  int i;;C:\Program Files\Microchip\xc8\v2.40\pic\i
      +                          nclude\lcd.h: 100:  for(i=0;a[i]!='\0';i++)
  8401     1FBE  01FA               	clrf	Lcd_Write_String@i
  8402     1FBF  01FB               	clrf	Lcd_Write_String@i+1
  8403     1FC0  2FE3               	goto	l2844
  8404     1FC1                     l2840:
  8405                           
  8406                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 101:     Lcd_Write_Char(a[i]);
  8407     1FC1  087A               	movf	Lcd_Write_String@i,w
  8408     1FC2  0775               	addwf	Lcd_Write_String@a,w
  8409     1FC3  00F8               	movwf	??_Lcd_Write_String+1
  8410     1FC4  0876               	movf	Lcd_Write_String@a+1,w
  8411     1FC5  00F7               	movwf	??_Lcd_Write_String
  8412     1FC6  1803               	skipnc
  8413     1FC7  0AF7               	incf	??_Lcd_Write_String,f
  8414     1FC8  1FFA               	btfss	Lcd_Write_String@i,7
  8415     1FC9  2FCB               	goto	u4910
  8416     1FCA  03F7               	decf	??_Lcd_Write_String,f
  8417     1FCB                     u4910:
  8418     1FCB  0877               	movf	??_Lcd_Write_String,w
  8419     1FCC  00F9               	movwf	??_Lcd_Write_String+2
  8420     1FCD  0879               	movf	??_Lcd_Write_String+2,w
  8421     1FCE  1283               	bcf	3,5	;RP0=0, select bank0
  8422     1FCF  1303               	bcf	3,6	;RP1=0, select bank0
  8423     1FD0  00FF               	movwf	btemp+1
  8424     1FD1  0878               	movf	??_Lcd_Write_String+1,w
  8425     1FD2  0084               	movwf	4
  8426     1FD3  160A  118A  2000  160A  158A  	fcall	stringtab
  8427     1FD8  160A  158A  2789  160A  158A  	fcall	_Lcd_Write_Char
  8428     1FDD                     l2842:
  8429     1FDD  3001               	movlw	1
  8430     1FDE  07FA               	addwf	Lcd_Write_String@i,f
  8431     1FDF  1803               	skipnc
  8432     1FE0  0AFB               	incf	Lcd_Write_String@i+1,f
  8433     1FE1  3000               	movlw	0
  8434     1FE2  07FB               	addwf	Lcd_Write_String@i+1,f
  8435     1FE3                     l2844:
  8436     1FE3  087A               	movf	Lcd_Write_String@i,w
  8437     1FE4  0775               	addwf	Lcd_Write_String@a,w
  8438     1FE5  00F8               	movwf	??_Lcd_Write_String+1
  8439     1FE6  0876               	movf	Lcd_Write_String@a+1,w
  8440     1FE7  00F7               	movwf	??_Lcd_Write_String
  8441     1FE8  1803               	skipnc
  8442     1FE9  0AF7               	incf	??_Lcd_Write_String,f
  8443     1FEA  1FFA               	btfss	Lcd_Write_String@i,7
  8444     1FEB  2FED               	goto	u4920
  8445     1FEC  03F7               	decf	??_Lcd_Write_String,f
  8446     1FED                     u4920:
  8447     1FED  0877               	movf	??_Lcd_Write_String,w
  8448     1FEE  00F9               	movwf	??_Lcd_Write_String+2
  8449     1FEF  0879               	movf	??_Lcd_Write_String+2,w
  8450     1FF0  1283               	bcf	3,5	;RP0=0, select bank0
  8451     1FF1  1303               	bcf	3,6	;RP1=0, select bank0
  8452     1FF2  00FF               	movwf	btemp+1
  8453     1FF3  0878               	movf	??_Lcd_Write_String+1,w
  8454     1FF4  0084               	movwf	4
  8455     1FF5  160A  118A  2000  160A  158A  	fcall	stringtab
  8456     1FFA  3A00               	xorlw	0
  8457     1FFB  1D03               	skipz
  8458     1FFC  2FFE               	goto	u4931
  8459     1FFD  2FFF               	goto	u4930
  8460     1FFE                     u4931:
  8461     1FFE  2FC1               	goto	l2840
  8462     1FFF                     u4930:
  8463     1FFF                     l55:
  8464     1FFF  0008               	return
  8465     2000                     __end_of_Lcd_Write_String:
  8466                           
  8467                           	psect	text23
  8468     1F89                     __ptext23:	
  8469 ;; *************** function _Lcd_Write_Char *****************
  8470 ;; Defined at:
  8471 ;;		line 81 in file "C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h"
  8472 ;; Parameters:    Size  Location     Type
  8473 ;;  a               1    wreg     unsigned char 
  8474 ;; Auto vars:     Size  Location     Type
  8475 ;;  a               1    4[COMMON] unsigned char 
  8476 ;;  y               1    3[COMMON] unsigned char 
  8477 ;;  temp            1    2[COMMON] unsigned char 
  8478 ;; Return value:  Size  Location     Type
  8479 ;;                  1    wreg      void 
  8480 ;; Registers used:
  8481 ;;		wreg, status,2, status,0, pclath, cstack
  8482 ;; Tracked objects:
  8483 ;;		On entry : 0/0
  8484 ;;		On exit  : 0/0
  8485 ;;		Unchanged: 0/0
  8486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8487 ;;      Params:         0       0       0       0       0
  8488 ;;      Locals:         3       0       0       0       0
  8489 ;;      Temps:          1       0       0       0       0
  8490 ;;      Totals:         4       0       0       0       0
  8491 ;;Total ram usage:        4 bytes
  8492 ;; Hardware stack levels used: 1
  8493 ;; Hardware stack levels required when called: 1
  8494 ;; This function calls:
  8495 ;;		_Lcd_Port
  8496 ;; This function is called by:
  8497 ;;		_Lcd_Write_String
  8498 ;; This function uses a non-reentrant model
  8499 ;;
  8500                           
  8501     1F89                     _Lcd_Write_Char:	
  8502                           ;psect for function _Lcd_Write_Char
  8503                           
  8504                           
  8505                           ;incstack = 0
  8506                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  8507                           ;Lcd_Write_Char@a stored from wreg
  8508     1F89  00F4               	movwf	Lcd_Write_Char@a
  8509     1F8A                     l2440:
  8510                           
  8511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 81: void Lcd_Write_Char(char a)
      +                          ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 82: {;C:\Program Files\Microchi
      +                          p\xc8\v2.40\pic\include\lcd.h: 83:    char temp,y;;C:\Program Files\Microchip\xc8\v2.40\
      +                          pic\include\lcd.h: 84:    temp = a&0x0F;
  8512     1F8A  0874               	movf	Lcd_Write_Char@a,w
  8513     1F8B  390F               	andlw	15
  8514     1F8C  00F2               	movwf	Lcd_Write_Char@temp
  8515                           
  8516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 85:    y = a&0xF0;
  8517     1F8D  0874               	movf	Lcd_Write_Char@a,w
  8518     1F8E  39F0               	andlw	240
  8519     1F8F  00F3               	movwf	Lcd_Write_Char@y
  8520     1F90                     l2442:
  8521                           
  8522                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 86:    RD2 = 1;
  8523     1F90  1283               	bcf	3,5	;RP0=0, select bank0
  8524     1F91  1303               	bcf	3,6	;RP1=0, select bank0
  8525     1F92  1508               	bsf	8,2	;volatile
  8526     1F93                     l2444:
  8527                           
  8528                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 87:    Lcd_Port(y>>4);
  8529     1F93  0873               	movf	Lcd_Write_Char@y,w
  8530     1F94  00F1               	movwf	??_Lcd_Write_Char
  8531     1F95  3004               	movlw	4
  8532     1F96                     u3835:
  8533     1F96  1003               	clrc
  8534     1F97  0CF1               	rrf	??_Lcd_Write_Char,f
  8535     1F98  3EFF               	addlw	-1
  8536     1F99  1D03               	skipz
  8537     1F9A  2F96               	goto	u3835
  8538     1F9B  0871               	movf	??_Lcd_Write_Char,w
  8539     1F9C  160A  158A  26F7  160A  158A  	fcall	_Lcd_Port
  8540     1FA1                     l2446:
  8541                           
  8542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 88:    RD3 = 1;
  8543     1FA1  1283               	bcf	3,5	;RP0=0, select bank0
  8544     1FA2  1303               	bcf	3,6	;RP1=0, select bank0
  8545     1FA3  1588               	bsf	8,3	;volatile
  8546     1FA4                     l2448:
  8547                           
  8548                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 89:    _delay((unsigned long)((
      +                          40)*(8000000/4000000.0)));
  8549     1FA4  301A               	movlw	26
  8550     1FA5  00F1               	movwf	??_Lcd_Write_Char
  8551     1FA6                     u5227:
  8552     1FA6  0BF1               	decfsz	??_Lcd_Write_Char,f
  8553     1FA7  2FA6               	goto	u5227
  8554     1FA8  0000               	nop
  8555     1FA9                     l2450:
  8556                           
  8557                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 90:    RD3 = 0;
  8558     1FA9  1283               	bcf	3,5	;RP0=0, select bank0
  8559     1FAA  1303               	bcf	3,6	;RP1=0, select bank0
  8560     1FAB  1188               	bcf	8,3	;volatile
  8561     1FAC                     l2452:
  8562                           
  8563                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 91:    Lcd_Port(temp);
  8564     1FAC  0872               	movf	Lcd_Write_Char@temp,w
  8565     1FAD  160A  158A  26F7  160A  158A  	fcall	_Lcd_Port
  8566     1FB2                     l2454:
  8567                           
  8568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 92:    RD3 = 1;
  8569     1FB2  1283               	bcf	3,5	;RP0=0, select bank0
  8570     1FB3  1303               	bcf	3,6	;RP1=0, select bank0
  8571     1FB4  1588               	bsf	8,3	;volatile
  8572     1FB5                     l2456:
  8573                           
  8574                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 93:    _delay((unsigned long)((
      +                          40)*(8000000/4000000.0)));
  8575     1FB5  301A               	movlw	26
  8576     1FB6  00F1               	movwf	??_Lcd_Write_Char
  8577     1FB7                     u5237:
  8578     1FB7  0BF1               	decfsz	??_Lcd_Write_Char,f
  8579     1FB8  2FB7               	goto	u5237
  8580     1FB9  0000               	nop
  8581     1FBA                     l2458:
  8582                           
  8583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 94:    RD3 = 0;
  8584     1FBA  1283               	bcf	3,5	;RP0=0, select bank0
  8585     1FBB  1303               	bcf	3,6	;RP1=0, select bank0
  8586     1FBC  1188               	bcf	8,3	;volatile
  8587     1FBD                     l49:
  8588     1FBD  0008               	return
  8589     1FBE                     __end_of_Lcd_Write_Char:
  8590                           
  8591                           	psect	text24
  8592     0009                     __ptext24:	
  8593 ;; *************** function _Lcd_Set_Cursor *****************
  8594 ;; Defined at:
  8595 ;;		line 41 in file "C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h"
  8596 ;; Parameters:    Size  Location     Type
  8597 ;;  a               1    wreg     unsigned char 
  8598 ;;  b               1    4[COMMON] unsigned char 
  8599 ;; Auto vars:     Size  Location     Type
  8600 ;;  a               1    6[COMMON] unsigned char 
  8601 ;;  temp            1    9[COMMON] unsigned char 
  8602 ;;  y               1    8[COMMON] unsigned char 
  8603 ;;  z               1    7[COMMON] unsigned char 
  8604 ;; Return value:  Size  Location     Type
  8605 ;;                  1    wreg      void 
  8606 ;; Registers used:
  8607 ;;		wreg, status,2, status,0, pclath, cstack
  8608 ;; Tracked objects:
  8609 ;;		On entry : 0/0
  8610 ;;		On exit  : 0/0
  8611 ;;		Unchanged: 0/0
  8612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8613 ;;      Params:         1       0       0       0       0
  8614 ;;      Locals:         4       0       0       0       0
  8615 ;;      Temps:          1       0       0       0       0
  8616 ;;      Totals:         6       0       0       0       0
  8617 ;;Total ram usage:        6 bytes
  8618 ;; Hardware stack levels used: 1
  8619 ;; Hardware stack levels required when called: 2
  8620 ;; This function calls:
  8621 ;;		_Lcd_Cmd
  8622 ;; This function is called by:
  8623 ;;		_main
  8624 ;; This function uses a non-reentrant model
  8625 ;;
  8626                           
  8627     0009                     _Lcd_Set_Cursor:	
  8628                           ;psect for function _Lcd_Set_Cursor
  8629                           
  8630                           
  8631                           ;incstack = 0
  8632                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  8633                           ;Lcd_Set_Cursor@a stored from wreg
  8634     0009  00F6               	movwf	Lcd_Set_Cursor@a
  8635     000A                     l2808:
  8636                           
  8637                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 41: void Lcd_Set_Cursor(char a,
      +                           char b);C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 42: {;C:\Program Files\
      +                          Microchip\xc8\v2.40\pic\include\lcd.h: 43:  char temp,z,y;;C:\Program Files\Microchip\xc
      +                          8\v2.40\pic\include\lcd.h: 44:  if(a == 1)
  8638     000A  0376               	decf	Lcd_Set_Cursor@a,w
  8639     000B  1D03               	btfss	3,2
  8640     000C  280E               	goto	u4871
  8641     000D  280F               	goto	u4870
  8642     000E                     u4871:
  8643     000E  282C               	goto	l2818
  8644     000F                     u4870:
  8645     000F                     l2810:
  8646                           
  8647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 45:  {;C:\Program Files\Microch
      +                          ip\xc8\v2.40\pic\include\lcd.h: 46:    temp = 0x80 + b - 1;
  8648     000F  0874               	movf	Lcd_Set_Cursor@b,w
  8649     0010  3E7F               	addlw	127
  8650     0011  00F9               	movwf	Lcd_Set_Cursor@temp
  8651                           
  8652                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 47:   z = temp>>4;
  8653     0012  0879               	movf	Lcd_Set_Cursor@temp,w
  8654     0013  00F5               	movwf	??_Lcd_Set_Cursor
  8655     0014  3004               	movlw	4
  8656     0015                     u4885:
  8657     0015  1003               	clrc
  8658     0016  0CF5               	rrf	??_Lcd_Set_Cursor,f
  8659     0017  3EFF               	addlw	-1
  8660     0018  1D03               	skipz
  8661     0019  2815               	goto	u4885
  8662     001A  0875               	movf	??_Lcd_Set_Cursor,w
  8663     001B  00F7               	movwf	Lcd_Set_Cursor@z
  8664     001C                     l2812:
  8665                           
  8666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 48:   y = temp & 0x0F;
  8667     001C  0879               	movf	Lcd_Set_Cursor@temp,w
  8668     001D  390F               	andlw	15
  8669     001E  00F8               	movwf	Lcd_Set_Cursor@y
  8670     001F                     l2814:
  8671                           
  8672                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 49:   Lcd_Cmd(z);
  8673     001F  0877               	movf	Lcd_Set_Cursor@z,w
  8674     0020  160A  158A  26DD  120A  118A  	fcall	_Lcd_Cmd
  8675     0025                     l2816:
  8676                           
  8677                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 50:   Lcd_Cmd(y);
  8678     0025  0878               	movf	Lcd_Set_Cursor@y,w
  8679     0026  160A  158A  26DD  120A  118A  	fcall	_Lcd_Cmd
  8680                           
  8681                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 51:  }
  8682     002B  284E               	goto	l43
  8683     002C                     l2818:
  8684     002C  3002               	movlw	2
  8685     002D  0676               	xorwf	Lcd_Set_Cursor@a,w
  8686     002E  1D03               	btfss	3,2
  8687     002F  2831               	goto	u4891
  8688     0030  2832               	goto	u4890
  8689     0031                     u4891:
  8690     0031  284E               	goto	l43
  8691     0032                     u4890:
  8692     0032                     l2820:
  8693                           
  8694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 53:  {;C:\Program Files\Microch
      +                          ip\xc8\v2.40\pic\include\lcd.h: 54:   temp = 0xC0 + b - 1;
  8695     0032  0874               	movf	Lcd_Set_Cursor@b,w
  8696     0033  3EBF               	addlw	191
  8697     0034  00F9               	movwf	Lcd_Set_Cursor@temp
  8698                           
  8699                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 55:   z = temp>>4;
  8700     0035  0879               	movf	Lcd_Set_Cursor@temp,w
  8701     0036  00F5               	movwf	??_Lcd_Set_Cursor
  8702     0037  3004               	movlw	4
  8703     0038                     u4905:
  8704     0038  1003               	clrc
  8705     0039  0CF5               	rrf	??_Lcd_Set_Cursor,f
  8706     003A  3EFF               	addlw	-1
  8707     003B  1D03               	skipz
  8708     003C  2838               	goto	u4905
  8709     003D  0875               	movf	??_Lcd_Set_Cursor,w
  8710     003E  00F7               	movwf	Lcd_Set_Cursor@z
  8711     003F                     l2822:
  8712                           
  8713                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 56:   y = temp & 0x0F;
  8714     003F  0879               	movf	Lcd_Set_Cursor@temp,w
  8715     0040  390F               	andlw	15
  8716     0041  00F8               	movwf	Lcd_Set_Cursor@y
  8717     0042                     l2824:
  8718                           
  8719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 57:   Lcd_Cmd(z);
  8720     0042  0877               	movf	Lcd_Set_Cursor@z,w
  8721     0043  160A  158A  26DD  120A  118A  	fcall	_Lcd_Cmd
  8722     0048                     l2826:
  8723                           
  8724                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 58:   Lcd_Cmd(y);
  8725     0048  0878               	movf	Lcd_Set_Cursor@y,w
  8726     0049  160A  158A  26DD  120A  118A  	fcall	_Lcd_Cmd
  8727     004E                     l43:
  8728     004E  0008               	return
  8729     004F                     __end_of_Lcd_Set_Cursor:
  8730                           
  8731                           	psect	text25
  8732     1235                     __ptext25:	
  8733 ;; *************** function _Lcd_Init *****************
  8734 ;; Defined at:
  8735 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h"
  8736 ;; Parameters:    Size  Location     Type
  8737 ;;		None
  8738 ;; Auto vars:     Size  Location     Type
  8739 ;;		None
  8740 ;; Return value:  Size  Location     Type
  8741 ;;                  1    wreg      void 
  8742 ;; Registers used:
  8743 ;;		wreg, status,2, status,0, pclath, cstack
  8744 ;; Tracked objects:
  8745 ;;		On entry : 0/0
  8746 ;;		On exit  : 0/0
  8747 ;;		Unchanged: 0/0
  8748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8749 ;;      Params:         0       0       0       0       0
  8750 ;;      Locals:         0       0       0       0       0
  8751 ;;      Temps:          2       0       0       0       0
  8752 ;;      Totals:         2       0       0       0       0
  8753 ;;Total ram usage:        2 bytes
  8754 ;; Hardware stack levels used: 1
  8755 ;; Hardware stack levels required when called: 2
  8756 ;; This function calls:
  8757 ;;		_Lcd_Cmd
  8758 ;;		_Lcd_Port
  8759 ;; This function is called by:
  8760 ;;		_main
  8761 ;; This function uses a non-reentrant model
  8762 ;;
  8763                           
  8764     1235                     _Lcd_Init:	
  8765                           ;psect for function _Lcd_Init
  8766                           
  8767     1235                     l2828:	
  8768                           ;incstack = 0
  8769                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  8770                           
  8771                           
  8772                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 64:   Lcd_Port(0x00);
  8773     1235  3000               	movlw	0
  8774     1236  160A  158A  26F7  160A  118A  	fcall	_Lcd_Port
  8775     123B                     l2830:
  8776                           
  8777                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 65:    _delay((unsigned long)((
      +                          20)*(8000000/4000.0)));
  8778     123B  3034               	movlw	52
  8779     123C  00F5               	movwf	??_Lcd_Init+1
  8780     123D  30F1               	movlw	241
  8781     123E  00F4               	movwf	??_Lcd_Init
  8782     123F                     u5247:
  8783     123F  0BF4               	decfsz	??_Lcd_Init,f
  8784     1240  2A3F               	goto	u5247
  8785     1241  0BF5               	decfsz	??_Lcd_Init+1,f
  8786     1242  2A3F               	goto	u5247
  8787     1243  2A44               	nop2
  8788     1244                     l2832:
  8789                           
  8790                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 66:   Lcd_Cmd(0x03);
  8791     1244  3003               	movlw	3
  8792     1245  160A  158A  26DD  160A  118A  	fcall	_Lcd_Cmd
  8793                           
  8794                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 67:  _delay((unsigned long)((5)
      +                          *(8000000/4000.0)));
  8795     124A  300D               	movlw	13
  8796     124B  00F5               	movwf	??_Lcd_Init+1
  8797     124C  30FB               	movlw	251
  8798     124D  00F4               	movwf	??_Lcd_Init
  8799     124E                     u5257:
  8800     124E  0BF4               	decfsz	??_Lcd_Init,f
  8801     124F  2A4E               	goto	u5257
  8802     1250  0BF5               	decfsz	??_Lcd_Init+1,f
  8803     1251  2A4E               	goto	u5257
  8804     1252  2A53               	nop2
  8805     1253                     l2834:
  8806                           
  8807                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 68:   Lcd_Cmd(0x03);
  8808     1253  3003               	movlw	3
  8809     1254  160A  158A  26DD  160A  118A  	fcall	_Lcd_Cmd
  8810     1259                     l2836:
  8811                           
  8812                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 69:  _delay((unsigned long)((11
      +                          )*(8000000/4000.0)));
  8813     1259  301D               	movlw	29
  8814     125A  00F5               	movwf	??_Lcd_Init+1
  8815     125B  3091               	movlw	145
  8816     125C  00F4               	movwf	??_Lcd_Init
  8817     125D                     u5267:
  8818     125D  0BF4               	decfsz	??_Lcd_Init,f
  8819     125E  2A5D               	goto	u5267
  8820     125F  0BF5               	decfsz	??_Lcd_Init+1,f
  8821     1260  2A5D               	goto	u5267
  8822                           
  8823                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 70:   Lcd_Cmd(0x03);
  8824     1261  3003               	movlw	3
  8825     1262  160A  158A  26DD  160A  118A  	fcall	_Lcd_Cmd
  8826                           
  8827                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 72:   Lcd_Cmd(0x02);
  8828     1267  3002               	movlw	2
  8829     1268  160A  158A  26DD  160A  118A  	fcall	_Lcd_Cmd
  8830                           
  8831                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 73:   Lcd_Cmd(0x02);
  8832     126D  3002               	movlw	2
  8833     126E  160A  158A  26DD  160A  118A  	fcall	_Lcd_Cmd
  8834                           
  8835                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 74:   Lcd_Cmd(0x08);
  8836     1273  3008               	movlw	8
  8837     1274  160A  158A  26DD  160A  118A  	fcall	_Lcd_Cmd
  8838                           
  8839                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 75:   Lcd_Cmd(0x00);
  8840     1279  3000               	movlw	0
  8841     127A  160A  158A  26DD  160A  118A  	fcall	_Lcd_Cmd
  8842                           
  8843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 76:   Lcd_Cmd(0x0C);
  8844     127F  300C               	movlw	12
  8845     1280  160A  158A  26DD  160A  118A  	fcall	_Lcd_Cmd
  8846                           
  8847                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 77:   Lcd_Cmd(0x00);
  8848     1285  3000               	movlw	0
  8849     1286  160A  158A  26DD  160A  118A  	fcall	_Lcd_Cmd
  8850                           
  8851                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 78:   Lcd_Cmd(0x06);
  8852     128B  3006               	movlw	6
  8853     128C  160A  158A  26DD  160A  118A  	fcall	_Lcd_Cmd
  8854     1291                     l46:
  8855     1291  0008               	return
  8856     1292                     __end_of_Lcd_Init:
  8857                           
  8858                           	psect	text26
  8859     1ED0                     __ptext26:	
  8860 ;; *************** function _Lcd_Clear *****************
  8861 ;; Defined at:
  8862 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h"
  8863 ;; Parameters:    Size  Location     Type
  8864 ;;		None
  8865 ;; Auto vars:     Size  Location     Type
  8866 ;;		None
  8867 ;; Return value:  Size  Location     Type
  8868 ;;                  2   36[None  ] int 
  8869 ;; Registers used:
  8870 ;;		wreg, status,2, status,0, pclath, cstack
  8871 ;; Tracked objects:
  8872 ;;		On entry : 0/0
  8873 ;;		On exit  : 0/0
  8874 ;;		Unchanged: 0/0
  8875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8876 ;;      Params:         0       0       0       0       0
  8877 ;;      Locals:         0       0       0       0       0
  8878 ;;      Temps:          0       0       0       0       0
  8879 ;;      Totals:         0       0       0       0       0
  8880 ;;Total ram usage:        0 bytes
  8881 ;; Hardware stack levels used: 1
  8882 ;; Hardware stack levels required when called: 2
  8883 ;; This function calls:
  8884 ;;		_Lcd_Cmd
  8885 ;; This function is called by:
  8886 ;;		_main
  8887 ;; This function uses a non-reentrant model
  8888 ;;
  8889                           
  8890     1ED0                     _Lcd_Clear:	
  8891                           ;psect for function _Lcd_Clear
  8892                           
  8893     1ED0                     l2806:	
  8894                           ;incstack = 0
  8895                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  8896                           
  8897                           
  8898                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 37:  Lcd_Cmd(0);
  8899     1ED0  3000               	movlw	0
  8900     1ED1  160A  158A  26DD  160A  158A  	fcall	_Lcd_Cmd
  8901                           
  8902                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 38:  Lcd_Cmd(1);
  8903     1ED6  3001               	movlw	1
  8904     1ED7  160A  158A  26DD  160A  158A  	fcall	_Lcd_Cmd
  8905     1EDC                     l37:
  8906     1EDC  0008               	return
  8907     1EDD                     __end_of_Lcd_Clear:
  8908                           
  8909                           	psect	text27
  8910     1EDD                     __ptext27:	
  8911 ;; *************** function _Lcd_Cmd *****************
  8912 ;; Defined at:
  8913 ;;		line 26 in file "C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h"
  8914 ;; Parameters:    Size  Location     Type
  8915 ;;  a               1    wreg     unsigned char 
  8916 ;; Auto vars:     Size  Location     Type
  8917 ;;  a               1    3[COMMON] unsigned char 
  8918 ;; Return value:  Size  Location     Type
  8919 ;;                  1    wreg      void 
  8920 ;; Registers used:
  8921 ;;		wreg, status,2, status,0, pclath, cstack
  8922 ;; Tracked objects:
  8923 ;;		On entry : 0/0
  8924 ;;		On exit  : 0/0
  8925 ;;		Unchanged: 0/0
  8926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8927 ;;      Params:         0       0       0       0       0
  8928 ;;      Locals:         1       0       0       0       0
  8929 ;;      Temps:          2       0       0       0       0
  8930 ;;      Totals:         3       0       0       0       0
  8931 ;;Total ram usage:        3 bytes
  8932 ;; Hardware stack levels used: 1
  8933 ;; Hardware stack levels required when called: 1
  8934 ;; This function calls:
  8935 ;;		_Lcd_Port
  8936 ;; This function is called by:
  8937 ;;		_Lcd_Clear
  8938 ;;		_Lcd_Set_Cursor
  8939 ;;		_Lcd_Init
  8940 ;;		_Lcd_Shift_Right
  8941 ;;		_Lcd_Shift_Left
  8942 ;; This function uses a non-reentrant model
  8943 ;;
  8944                           
  8945     1EDD                     _Lcd_Cmd:	
  8946                           ;psect for function _Lcd_Cmd
  8947                           
  8948                           
  8949                           ;incstack = 0
  8950                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  8951                           ;Lcd_Cmd@a stored from wreg
  8952     1EDD  00F3               	movwf	Lcd_Cmd@a
  8953     1EDE                     l2430:
  8954                           
  8955                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 26: void Lcd_Cmd(char a);C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\include\lcd.h: 27: {;C:\Program Files\Microchip\xc8\v
      +                          2.40\pic\include\lcd.h: 28:  RD2 = 0;
  8956     1EDE  1283               	bcf	3,5	;RP0=0, select bank0
  8957     1EDF  1303               	bcf	3,6	;RP1=0, select bank0
  8958     1EE0  1108               	bcf	8,2	;volatile
  8959     1EE1                     l2432:
  8960                           
  8961                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 29:  Lcd_Port(a);
  8962     1EE1  0873               	movf	Lcd_Cmd@a,w
  8963     1EE2  160A  158A  26F7  160A  158A  	fcall	_Lcd_Port
  8964     1EE7                     l2434:
  8965                           
  8966                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 30:  RD3 = 1;
  8967     1EE7  1283               	bcf	3,5	;RP0=0, select bank0
  8968     1EE8  1303               	bcf	3,6	;RP1=0, select bank0
  8969     1EE9  1588               	bsf	8,3	;volatile
  8970     1EEA                     l2436:
  8971                           
  8972                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 31:         _delay((unsigned lo
      +                          ng)((4)*(8000000/4000.0)));
  8973     1EEA  300B               	movlw	11
  8974     1EEB  00F2               	movwf	??_Lcd_Cmd+1
  8975     1EEC  3062               	movlw	98
  8976     1EED  00F1               	movwf	??_Lcd_Cmd
  8977     1EEE                     u5277:
  8978     1EEE  0BF1               	decfsz	??_Lcd_Cmd,f
  8979     1EEF  2EEE               	goto	u5277
  8980     1EF0  0BF2               	decfsz	??_Lcd_Cmd+1,f
  8981     1EF1  2EEE               	goto	u5277
  8982     1EF2  0000               	nop
  8983     1EF3                     l2438:
  8984                           
  8985                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 32:         RD3 = 0;
  8986     1EF3  1283               	bcf	3,5	;RP0=0, select bank0
  8987     1EF4  1303               	bcf	3,6	;RP1=0, select bank0
  8988     1EF5  1188               	bcf	8,3	;volatile
  8989     1EF6                     l34:
  8990     1EF6  0008               	return
  8991     1EF7                     __end_of_Lcd_Cmd:
  8992                           
  8993                           	psect	text28
  8994     1EF7                     __ptext28:	
  8995 ;; *************** function _Lcd_Port *****************
  8996 ;; Defined at:
  8997 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h"
  8998 ;; Parameters:    Size  Location     Type
  8999 ;;  a               1    wreg     unsigned char 
  9000 ;; Auto vars:     Size  Location     Type
  9001 ;;  a               1    0[COMMON] unsigned char 
  9002 ;; Return value:  Size  Location     Type
  9003 ;;                  1    wreg      void 
  9004 ;; Registers used:
  9005 ;;		wreg
  9006 ;; Tracked objects:
  9007 ;;		On entry : 0/0
  9008 ;;		On exit  : 0/0
  9009 ;;		Unchanged: 0/0
  9010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9011 ;;      Params:         0       0       0       0       0
  9012 ;;      Locals:         1       0       0       0       0
  9013 ;;      Temps:          0       0       0       0       0
  9014 ;;      Totals:         1       0       0       0       0
  9015 ;;Total ram usage:        1 bytes
  9016 ;; Hardware stack levels used: 1
  9017 ;; This function calls:
  9018 ;;		Nothing
  9019 ;; This function is called by:
  9020 ;;		_Lcd_Cmd
  9021 ;;		_Lcd_Init
  9022 ;;		_Lcd_Write_Char
  9023 ;; This function uses a non-reentrant model
  9024 ;;
  9025                           
  9026     1EF7                     _Lcd_Port:	
  9027                           ;psect for function _Lcd_Port
  9028                           
  9029                           
  9030                           ;incstack = 0
  9031                           ; Regs used in _Lcd_Port: [wreg]
  9032                           ;Lcd_Port@a stored from wreg
  9033     1EF7  00F0               	movwf	Lcd_Port@a
  9034     1EF8                     l1956:
  9035                           
  9036                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 4: void Lcd_Port(char a);C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\include\lcd.h: 5: {;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\include\lcd.h: 6:  if(a & 1)
  9037     1EF8  1C70               	btfss	Lcd_Port@a,0
  9038     1EF9  2EFB               	goto	u2641
  9039     1EFA  2EFC               	goto	u2640
  9040     1EFB                     u2641:
  9041     1EFB  2F00               	goto	l23
  9042     1EFC                     u2640:
  9043     1EFC                     l1958:
  9044                           
  9045                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 7:   RD4 = 1;
  9046     1EFC  1283               	bcf	3,5	;RP0=0, select bank0
  9047     1EFD  1303               	bcf	3,6	;RP1=0, select bank0
  9048     1EFE  1608               	bsf	8,4	;volatile
  9049     1EFF  2F03               	goto	l24
  9050     1F00                     l23:	
  9051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 8:  else
  9052                           
  9053                           
  9054                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 9:   RD4 = 0;
  9055     1F00  1283               	bcf	3,5	;RP0=0, select bank0
  9056     1F01  1303               	bcf	3,6	;RP1=0, select bank0
  9057     1F02  1208               	bcf	8,4	;volatile
  9058     1F03                     l24:
  9059                           
  9060                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 11:  if(a & 2)
  9061     1F03  1CF0               	btfss	Lcd_Port@a,1
  9062     1F04  2F06               	goto	u2651
  9063     1F05  2F07               	goto	u2650
  9064     1F06                     u2651:
  9065     1F06  2F09               	goto	l25
  9066     1F07                     u2650:
  9067     1F07                     l1960:
  9068                           
  9069                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 12:   RD5 = 1;
  9070     1F07  1688               	bsf	8,5	;volatile
  9071     1F08  2F0A               	goto	l26
  9072     1F09                     l25:	
  9073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 13:  else
  9074                           
  9075                           
  9076                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 14:   RD5 = 0;
  9077     1F09  1288               	bcf	8,5	;volatile
  9078     1F0A                     l26:
  9079                           
  9080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 16:  if(a & 4)
  9081     1F0A  1D70               	btfss	Lcd_Port@a,2
  9082     1F0B  2F0D               	goto	u2661
  9083     1F0C  2F0E               	goto	u2660
  9084     1F0D                     u2661:
  9085     1F0D  2F10               	goto	l27
  9086     1F0E                     u2660:
  9087     1F0E                     l1962:
  9088                           
  9089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 17:   RD6 = 1;
  9090     1F0E  1708               	bsf	8,6	;volatile
  9091     1F0F  2F11               	goto	l28
  9092     1F10                     l27:	
  9093                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 18:  else
  9094                           
  9095                           
  9096                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 19:   RD6 = 0;
  9097     1F10  1308               	bcf	8,6	;volatile
  9098     1F11                     l28:
  9099                           
  9100                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 21:  if(a & 8)
  9101     1F11  1DF0               	btfss	Lcd_Port@a,3
  9102     1F12  2F14               	goto	u2671
  9103     1F13  2F15               	goto	u2670
  9104     1F14                     u2671:
  9105     1F14  2F17               	goto	l29
  9106     1F15                     u2670:
  9107     1F15                     l1964:
  9108                           
  9109                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 22:   RD7 = 1;
  9110     1F15  1788               	bsf	8,7	;volatile
  9111     1F16  2F18               	goto	l31
  9112     1F17                     l29:	
  9113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 23:  else
  9114                           
  9115                           
  9116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 24:   RD7 = 0;
  9117     1F17  1388               	bcf	8,7	;volatile
  9118     1F18                     l31:
  9119     1F18  0008               	return
  9120     1F19                     __end_of_Lcd_Port:
  9121     007E                     btemp	set	126	;btemp
  9122     007E                     wtemp0	set	126
  9123                           
  9124                           	psect	idloc
  9125                           
  9126                           ;Config register IDLOC0 @ 0x2000
  9127                           ;	unspecified, using default values
  9128     2000                     	org	8192
  9129     2000  3FFF               	dw	16383
  9130                           
  9131                           ;Config register IDLOC1 @ 0x2001
  9132                           ;	unspecified, using default values
  9133     2001                     	org	8193
  9134     2001  3FFF               	dw	16383
  9135                           
  9136                           ;Config register IDLOC2 @ 0x2002
  9137                           ;	unspecified, using default values
  9138     2002                     	org	8194
  9139     2002  3FFF               	dw	16383
  9140                           
  9141                           ;Config register IDLOC3 @ 0x2003
  9142                           ;	unspecified, using default values
  9143     2003                     	org	8195
  9144     2003  3FFF               	dw	16383
  9145                           
  9146                           	psect	config
  9147                           
  9148                           ;Config register CONFIG @ 0x2007
  9149                           ;	unspecified, using default values
  9150                           ;	Oscillator Selection bits
  9151                           ;	FOSC = 0x3, unprogrammed default
  9152                           ;	Watchdog Timer Enable bit
  9153                           ;	WDTE = 0x1, unprogrammed default
  9154                           ;	Power-up Timer Enable bit
  9155                           ;	PWRTE = 0x1, unprogrammed default
  9156                           ;	Brown-out Reset Enable bit
  9157                           ;	BOREN = 0x1, unprogrammed default
  9158                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  9159                           ;	LVP = 0x1, unprogrammed default
  9160                           ;	Data EEPROM Memory Code Protection bit
  9161                           ;	CPD = 0x1, unprogrammed default
  9162                           ;	Flash Program Memory Write Enable bits
  9163                           ;	WRT = 0x3, unprogrammed default
  9164                           ;	In-Circuit Debugger Mode bit
  9165                           ;	DEBUG = 0x1, unprogrammed default
  9166                           ;	Flash Program Memory Code Protection bit
  9167                           ;	CP = 0x1, unprogrammed default
  9168     2007                     	org	8199
  9169     2007  3FFF               	dw	16383

Data Sizes:
    Strings     22
    Constant    144
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80     62      62
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_2(CODE[14]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@array(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> main@array(BANK1[20]), STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flsub->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0   31252
                                             35 BANK1     27    27      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   29905
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMMON    11     3      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             49 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     420
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     532
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     3E      3E       7       77.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Nov 24 12:19:11 2022

                       pc 0002                        l31 1F18                        l23 1F00  
                      l24 1F03                        l25 1F09                        l26 1F0A  
                      l34 1EF6                        l27 1F10                        l43 004E  
                      l28 1F11                        l29 1F17                        l37 1EDC  
                      l46 1291                        l55 1FFF                        l49 1FBD  
            ___awdiv@sign 0021                        fsr 0004       ___wmul@multiplicand 0072  
     __Umul8_16@word_mpld 0076                       l222 0688                       l215 064A  
                     l232 07FB                       l410 091E                       l402 1234  
                     l236 1F49                       l422 1156                       l430 088A  
                     l238 1F61                       l406 095B                       l190 0273  
                     l423 1172                       l431 08A3                       l407 08C2  
                     l424 1187                       l272 1357                       l176 0FFF  
                     l417 094E                       l169 0259                       l427 081E  
                     l435 1ECF                       l605 17F5                       l453 14EF  
                     l606 17FF                       l446 1423                       l454 1463  
                     l542 1139                       l439 1438                       l703 1512  
                     l464 14E2                       l552 10F5                       l609 1F3C  
                     l449 1438                       l705 15A7                       l457 14B2  
                     l563 1603                       l492 11DB                       l716 1571  
                     l717 157D                       l709 1555                       l389 13C0  
                     l567 1686                       l671 0C94                       l584 174F  
                     l576 17FF                       l680 1F88                       l569 165F  
                     l665 0C10                       l594 1795                       l659 0CA0  
                     l588 1773                       l597 17D3                       l678 1F76  
                     _RD2 0042                       _RD3 0043                       _RD4 0044  
                     _RD5 0045                       _RD6 0046                       _RD7 0047  
                     fsr0 0004                       indf 0000              ___awmod@sign 0076  
            ___flmul@aexp 0036              ___flmul@bexp 0037               _sprintf$770 00AA  
            ___flmul@sign 0031              ___flmul@temp 003C              ___flmul@prod 0038  
            ___fltol@exp1 005A                      l2000 13AC                      l2002 13B2  
                    l2010 11DC                      l2100 15B1                      l2004 13B7  
                    l2020 11EC                      l2012 11DD                      l2110 15C8  
                    l2102 15B5                      l2006 13BC                      l2030 1205  
                    l2022 11F1                      l2014 11E1                      l2200 1698  
                    l2120 15DC                      l2112 15C9                      l2104 15B6  
                    l2032 1209                      l2024 11F7                      l2040 1226  
                    l2016 11E6                      l3000 07D5                      l2210 16C0  
                    l2202 16AF                      l2130 15EB                      l2122 15DD  
                    l2106 15BB                      l2114 15CB                      l2050 10F8  
                    l2042 122B                      l2034 1213                      l2026 11FA  
                    l2018 11E8                      l3002 07E1                      l2220 16E9  
                    l2212 16C4                      l2204 16B3                      l2140 1609  
                    l2132 15F0                      l2124 15E1                      l2116 15D3  
                    l2108 15C0                      l2300 096F                      l2060 1110  
                    l2052 10FE                      l2044 1230                      l2036 1219  
                    l2028 1201                      l2230 1757                      l2222 1727  
                    l2214 16C5                      l2206 16B7                      l2150 1617  
                    l2142 160D                      l2134 15F8                      l2126 15E5  
                    l2118 15D6                      l2310 098B                      l2302 0974  
                    l2062 1121                      l2054 1101                      l2070 1135  
                    l2038 1220                      l3006 07E7                      l3030 12AC  
                    l3022 1292                      l2240 1772                      l2232 175C  
                    l2224 172D                      l2216 16CE                      l2208 16BE  
                    l2160 1621                      l2152 1619                      l2144 1611  
                    l2136 15F9                      l2128 15E6                      l2400 0C1A  
                    l2320 099E                      l2312 098F                      l2304 097C  
                    l2064 1127                      l2056 1108                      l2048 10F6  
                    l2080 10CC                      l3008 07F7                      l3040 12E0  
                    l3032 12B4                      l3024 1298                      l2242 1777  
                    l2250 1783                      l2226 1732                      l2218 16D3  
                    l2170 162B                      l2162 1623                      l2154 161B  
                    l2146 1613                      l2138 15FB                      l2410 0C58  
                    l2402 0C28                      l2330 09BA                      l2322 09A6  
                    l2314 0993                      l2306 097E                      l2066 1128  
                    l2058 110C                      l2090 10EB                      l2082 10D0  
                    l2074 10BC                      l3034 12BD                      l3026 12A2  
                    l2244 177A                      l2236 1765                      l2228 1741  
                    l2252 1787                      l2180 1663                      l2172 162D  
                    l2164 1625                      l2156 161D                      l2148 1615  
                    l2420 0C8A                      l2412 0C63                      l2404 0C2C  
                    l2340 09F9                      l2324 09A8                      l2316 0994  
                    l2308 0986                      l2068 112F                      l2084 10D4  
                    l2076 10C2                      l2092 10F1                      l2500 0E55  
                    l3036 12CF                      l3028 12A7                      l2430 1EDE  
                    l2270 17CF                      l2262 179A                      l2254 1788  
                    l2246 177C                      l2238 176E                      l2190 167A  
                    l2182 166A                      l2166 1627                      l2158 161F  
                    l2174 162F                      l2422 0C8E                      l2414 0C72  
                    l2406 0C45                      l2350 0A80                      l2342 0A15  
                    l2334 09C3                      l2326 09B0                      l2318 0999  
                    l2086 10DE                      l2078 10C5                      l2510 0F4B  
                    l2502 0E5C                      l3038 12D7                      l2432 1EE1  
                    l2440 1F8A                      l2280 17EB                      l2272 17D8  
                    l2264 179F                      l2256 178C                      l2248 1781  
                    l2184 166C                      l2192 167E                      l2176 1630  
                    l2168 1629                      l2096 15A8                      l2600 0918  
                    l2520 144A                      l2424 0C8F                      l2416 0C7C  
                    l2408 0C4B                      l2360 0AED                      l2352 0A8E  
                    l2344 0A3F                      l2336 09D1                      l2328 09B5  
                    l2088 10E4                      l3072 0287                      l2434 1EE7  
                    l2450 1FA9                      l2442 1F90                      l2282 17EF  
                    l2274 17DD                      l2266 17AD                      l2258 1792  
                    l2194 168A                      l2186 1670                      l2178 1647  
                    l2098 15AD                      l2602 0922                      l2610 093C  
                    l2530 1464                      l2426 0C98                      l2418 0C7E  
                    l2370 0B94                      l2362 0B0A                      l2354 0AAB  
                    l2346 0A5B                      l2338 09DE                      l2290 095C  
                    l2514 0FD3                      l2436 1EEA                      l2452 1FAC  
                    l2444 1F93                      l2284 17F1                      l2276 17E5  
                    l2268 17B1                      l2196 168F                      l2188 1671  
                    l2700 13C1                      l2540 148B                      l2532 146A  
                    l2524 1453                      l2380 0BE0                      l2372 0BBC  
                    l2364 0B35                      l2356 0AB9                      l2348 0A77  
                    l2292 0961                      l2460 0052                      l2508 0F44  
                    l2438 1EF3                      l2454 1FB2                      l2446 1FA1  
                    l2286 17FA                      l2278 17EA                      l2710 13E9  
                    l2702 13CC                      l2630 1F57                      l2622 1F3D  
                    l2550 14B6                      l2542 1499                      l2534 1479  
                    l2518 1439                      l2390 0BF5                      l2382 0BE1  
                    l2374 0BC5                      l2366 0B43                      l2358 0AD6  
                    l2294 0965                      l2470 016B                      l2462 0058  
                    l2456 1FB5                      l2448 1FA4                      l2288 17FE  
                    l2712 13F1                      l2640 1305                      l2632 1F5D  
                    l2624 1F3F                      l2800 159E                      l2616 0943  
                    l2608 092A                      l2544 14A3                      l2536 147B  
                    l2392 0BF9                      l2384 0BEA                      l2376 0BD3  
                    l2368 0B6E                      l2296 0969                      l2480 0CA8  
                    l2810 000F                      l2458 1FBA                      l2730 1418  
                    l2722 13FF                      l2714 13F3                      l2706 13D5  
                    l2650 133F                      l2642 1312                      l2626 1F43  
                    l2802 159F                      l2618 0953                      l2570 08A4  
                    l2546 14A4                      l2538 1482                      l2394 0C0D  
                    l2378 0BDC                      l2386 0BF0                      l2298 096A  
                    l2474 0216                      l2490 0D99                      l2482 0CAA  
                    l2820 0032                      l2812 001C                      l2660 113A  
                    l2732 1428                      l2716 13F7                      l2724 1411  
                    l2708 13E8                      l2652 1340                      l2644 1316  
                    l2636 12F2                      l2740 1193                      l2628 1F50  
                    l2572 08AF                      l2564 14D7                      l2556 14BE  
                    l2548 14AC                      l2388 0BF4                      l2468 0165  
                    l2492 0DA0                      l2484 0CB1                      l2900 03EC  
                    l2806 1ED0                      l2830 123B                      l2822 003F  
                    l2814 001F                      l2662 114E                      l2734 142D  
                    l2654 1349                      l2646 131F                      l2638 1302  
                    l2750 11CD                      l2742 11A0                      l2590 08E5  
                    l2582 08C3                      l2566 14E7                      l2558 14D0  
                    l1950 1F7F                      l1942 1F63                      l2398 0C15  
                    l2478 0CA4                      l2910 0461                      l2902 03F4  
                    l1960 1F07                      l2832 1244                      l2824 0042  
                    l2816 0025                      l2808 000A                      l2840 1FC1  
                    l2664 116A                      l2680 083E                      l2672 0802  
                    l2648 1331                      l2656 134F                      l2744 11A4  
                    l2752 11D3                      l2736 1188                      l2592 08EE  
                    l2584 08CB                      l2576 08B8                      l1952 1F84  
                    l1944 1F65                      l2496 0E28                      l2920 04C3  
                    l2912 0488                      l2904 03F4                      l1962 1F0E  
                    l2834 1253                      l2826 0048                      l2818 002C  
                    l2842 1FDD                      l2666 1184                      l2682 0862  
                    l2674 0816                      l2746 11B6                      l2738 1190  
                    l2770 151A                      l2762 14F1                      l2594 0900  
                    l2586 08DC                      l1946 1F6C                      l1970 135F  
                    l2930 053E                      l2922 04E1                      l2914 0497  
                    l2906 0439                      l2850 0266                      l1964 1F15  
                    l1956 1EF8                      l2836 1259                      l2828 1235  
                    l2844 1FE3                      l2668 1186                      l2684 0866  
                    l2676 0832                      l2692 1EC5                      l2756 1F19  
                    l2748 11C4                      l2780 153A                      l2764 14F6  
                    l2596 090E                      l2588 08DE                      l1948 1F70  
                    l1980 1373                      l1972 1364                      l2940 058F  
                    l2932 058B                      l2916 04B2                      l2908 0446  
                    l2860 028F                      l2852 026B                      l1958 1EFC  
                    l2838 1FBE                      l2686 08A0                      l2678 083A  
                    l2694 1ECD                      l2758 1F1D                      l2790 156B  
                    l2782 153E                      l2774 1523                      l2766 14FA  
                    l2598 090F                      l1990 1389                      l1982 1375  
                    l1974 1366                      l1966 1358                      l2950 05E1  
                    l2934 058D                      l2926 0500                      l2918 04BB  
                    l2870 02CA                      l2862 029B                      l2854 0270  
                    l2846 025D                      l2688 08A2                      l2696 1ECF  
                    l2792 1575                      l2784 154C                      l2776 1526  
                    l2768 150A                      l1992 138D                      l1984 137B  
                    l1976 136A                      l1968 135B                      l2960 0659  
                    l2952 05E6                      l2944 05C6                      l2928 0509  
                    l2880 030F                      l2872 02E3                      l2864 029F  
                    l2848 0260                      l2794 157F                      l2786 155C  
                    l2778 1533                      l1994 139E                      l1986 137E  
                    l1978 136F                      l2970 0684                      l2962 065D  
                    l2954 0621                      l2946 05D0                      l2890 0345  
                    l2882 0315                      l2874 02E7                      l2866 02AD  
                    l2858 0275                      l2796 1595                      l2788 1567  
                    l1996 13A4                      l1988 1385                      l2980 06BD  
                    l2972 0691                      l2964 0663                      l2956 0640  
                    l2948 05DC                      l2892 0364                      l2884 0328  
                    l2876 02EB                      l2868 02B1                      l2798 159A  
                    l1998 13A5                      l2982 0718                      l2990 07B7  
                    l2974 0696                      l2966 0670                      l2958 0652  
                    l2894 03AF                      l2886 033B                      l2878 0304  
                    l2992 07BF                      l2984 0753                      l2976 069B  
                    l2968 067F                      l2896 03C8                      l2888 033F  
                    l2994 07C4                      l2986 0772                      l2978 069F  
                    l2898 03D1                      l2996 07C8                      l2988 077C  
                    l2998 07CE                      STR_1 10AE                      STR_2 10A0  
                    u3000 15B5                      u3001 15B4                      u3010 15BB  
                    u3011 15BA                      u3100 1652                      u3020 15C0  
                    u3101 1650                      u3021 15BF                      u3110 1653  
                    u3030 15DC                      u3031 15DB                      u3200 16B7  
                    u3120 1663                      u3040 15E5                      u3201 16B6  
                    u3121 1662                      u3041 15E4                      u3210 16C4  
                    u3130 1670                      u3050 15EB                      u4010 0E5C  
                    u3211 16C3                      u3131 166F                      u3051 15EA  
                    u4011 0E5B                      u3300 1772                      u3060 15F0  
                    u4100 1462                      u3301 1771                      u3061 15EF  
                    u4101 1461                      u4005 0E2B                      u3310 1777  
                    u3230 16E9                      u3150 1686                      u3070 1609  
                    u3311 1776                      u3231 16E8                      u3151 1685  
                    u3071 1608                      u3400 17CF                      u3320 1781  
                    u3160 168A                      u3080 160D                      u4120 1499  
                    u5000 03EC                      u3401 17CE                      u3321 1780  
                    u3241 1700                      u3233 16E5                      u3225 16C7  
                    u3161 1689                      u3145 1673                      u3081 160C  
                    u4121 1498                      u4025 0E7C                      u5001 03EB  
                    u3410 17D8                      u3330 1787                      u3250 1714  
                    u3242 1701                      u3170 168F                      u3090 1647  
                    u4210 14E7                      u2610 1F70                      u4050 0F4B  
                    u5010 0446                      u3411 17D7                      u3331 1786  
                    u3251 1715                      u3243 1706                      u3171 168E  
                    u3091 1646                      u4211 14E6                      u4115 1484  
                    u2611 1F6F                      u4051 0F4A                      u4035 0EB8  
                    u5011 0445                      u3420 17DD                      u3340 178C  
                    u3260 1732                      u3252 171A                      u3244 1707  
                    u4220 08AF                      u4140 14B2                      u3500 0999  
                    u2700 137B                      u5020 0461                      u3421 17DC  
                    u3341 178B                      u3261 1731                      u3253 171B  
                    u3245 170C                      u3181 16A1                      u4221 08AE  
                    u4205 14D9                      u4141 14B1                      u4125 1495  
                    u3501 0998                      u2701 137A                      u4045 0F03  
                    u5021 0460                      u3430 17EA                      u3350 1792  
                    u3270 1757                      u3246 170D                      u3190 16B3  
                    u3182 16A8                      u4310 093B                      u4230 08C1  
                    u4150 14B6                      u2630 1F84                      u3510 099E  
                    u5110 0651                      u5030 0488                      u3431 17E9  
                    u3351 1791                      u3271 1756                      u3191 16B2  
                    u3183 16AF                      u3095 1643                      u4311 093A  
                    u4231 08C0                      u4151 14B5                      u4135 14A5  
                    u2631 1F83                      u3511 099D                      u5111 0650  
                    u5031 0487                      u5015 0442                      u2640 1EFC  
                    u3440 17EF                      u3360 1799                      u3280 175C  
                    u4320 0942                      u4160 14BD                      u3520 09B5  
                    u2720 138D                      u2800 11F7                      u5200 07F7  
                    u5120 0670                      u5040 0497                      u2641 1EFB  
                    u3441 17EE                      u3361 1798                      u3281 175B  
                    u4321 0941                      u4305 092B                      u4161 14BC  
                    u2625 1F77                      u3601 0AC8                      u3521 09B4  
                    u2721 138C                      u2801 11F6                      u4065 0F5E  
                    u5201 07F6                      u5121 066F                      u5105 05E9  
                    u5041 0496                      u2650 1F07                      u3450 17FE  
                    u3370 179F                      u4410 1316                      u4250 0900  
                    u4090 144A                      u3602 0ACF                      u3530 09BA  
                    u5130 067F                      u5050 04B2                      u2651 1F06  
                    u3451 17FD                      u3371 179E                      u4411 1315  
                    u4251 08FF                      u4091 1449                      u3603 0AD6  
                    u3531 09B9                      u2715 137F                      u4075 0F9A  
                    u5131 067E                      u5051 04B1                      u2660 1F0E  
                    u4500 0832                      u3380 17B1                      u4340 0953  
                    u4180 14CF                      u3460 0969                      u2740 139E  
                    u2820 1209                      u5140 0696                      u2661 1F0D  
                    u4501 0831                      u3381 17B0                      u4405 1307  
                    u4341 0952                      u4245 08E7                      u4181 14CE  
                    u3621 0AFC                      u3541 0A07                      u3461 0968  
                    u2741 139D                      u2821 1208                      u4085 0FD6  
                    u5141 0695                      u5125 066C                      u5045 0493  
                    u2670 1F15                      u4510 083E                      u3390 17C0  
                    u4430 1331                      u4350 1F43                      u4270 091E  
                    u4190 14D6                      u3710 0BE0                      u3622 0B03  
                    u3542 0A0E                      u3470 096F                      u2910 1121  
                    u2830 1213                      u5070 05C5                      u2671 1F14  
                    u4511 083D                      u3295 1767                      u4431 1330  
                    u4351 1F42                      u4335 0945                      u4271 091D  
                    u4255 08FC                      u4191 14D5                      u4175 14BF  
                    u3711 0BDF                      u3631 0B27                      u3623 0B0A  
                    u3615 0AD8                      u3551 0A23                      u3543 0A15  
                    u3471 096E                      u2911 1120                      u2735 138E  
                    u2831 1212                      u2815 11FB                      u5135 067B  
                    u5071 05C4                      u4600 13FE                      u4280 0922  
                    u3800 0C58                      u3632 0B2E                      u3552 0A2A  
                    u3480 0974                      u2760 13B2                      u2680 135F  
                    u5080 05D0                      u4521 084D                      u4601 13FD  
                    u4425 1318                      u4281 0921                      u4265 0911  
                    u3801 0C57                      u3705 0BD5                      u3641 0B52  
                    u3633 0B35                      u3561 0A4D                      u3553 0A31  
                    u3481 0973                      u2905 1111                      u2761 13B1  
                    u2745 139A                      u2681 135E                      u5081 05CF  
                    u5065 0592                      u5217 12E8                      u4530 0866  
                    u4522 084E                      u4450 134F                      u4290 0929  
                    u3810 0C72                      u3730 0BF4                      u3650 0B7A  
                    u3642 0B59                      u3562 0A54                      u3490 0993  
                    u2930 1135                      u2770 13B7                      u2690 136A  
                    u2850 1226                      u5170 07BE                      u5090 05DC  
                    u5227 1FA6                      u4531 0865                      u4523 0853  
                    u3395 17BB                      u4451 134E                      u4435 132D  
                    u4291 0928                      u3811 0C71                      u3731 0BF3  
                    u3643 0B60                      u3571 0A69                      u3563 0A5B  
                    u3491 0992                      u2931 1134                      u2915 111D  
                    u2771 13B6                      u2755 13A6                      u2691 1369  
                    u2851 1225                      u2835 120F                      u5171 07BD  
                    u5155 071B                      u5091 05DB                      u5075 05C1  
                    u4460 114E                      u4524 0854                      u4620 1410  
                    u4700 11B6                      u4380 1F5D                      u3820 0C8E  
                    u3740 0BF9                      u3572 0A70                      u2940 10C2  
                    u2860 122B                      u2780 11E1                      u5180 07D4  
                    u5237 1FB7                      u4461 114D                      u4541 0875  
                    u4525 0859                      u4621 140F                      u4445 1341  
                    u4701 11B5                      u4381 1F5C                      u4365 1F4A  
                    u3821 0C8D                      u3805 0C54                      u3741 0BF8  
                    u3725 0BE3                      u3661 0B86                      u3573 0A77  
                    u2925 1129                      u2941 10C1                      u2861 122A  
                    u2845 121A                      u2781 11E0                      u5181 07D3  
                    u5165 077F                      u4470 116A                      u4550 08A0  
                    u4542 0876                      u4526 085A                      u4630 1417  
                    u4390 1302                      u3750 0C0D                      u3670 0BA2  
                    u3662 0B8D                      u2870 10FE                      u2790 11EC  
                    u5190 07E1                      u5247 123F                      u4471 1169  
                    u4551 089F                      u4543 087B                      u4631 1416  
                    u4615 1400                      u4391 1301                      u4375 1F51  
                    u3815 0C6E                      u3751 0C0C                      u3663 0B94  
                    u3655 0B75                      u3591 0A9D                      u2871 10FD  
                    u2791 11EB                      u5191 07E0                      u4480 1184  
                    u4544 087C                      u4560 1ECD                      u4720 11D3  
                    u3760 0C14                      u3592 0AA4                      u2960 10D4  
                    u3840 0058                      u3920 0CA8                      u5257 124E  
                    u4481 1183                      u4545 0881                      u4561 1ECC  
                    u4721 11D2                      u4705 11B2                      u3761 0C13  
                    u3681 0BAE                      u3593 0AAB                      u3585 0A79  
                    u2961 10D3                      u3905 01D5                      u3841 0057  
                    u3921 0CA7                      u4546 0882                      u4490 0816  
                    u4650 1428                      u4570 13CC                      u4810 156B  
                    u4730 14F6                      u3770 0C1A                      u3682 0BB5  
                    u2890 1110                      u2970 10DE                      u3930 0CB1  
                    u5267 125D                      u3835 1F96                      u4555 089C  
                    u4491 0815                      u4651 1427                      u4571 13CB  
                    u4715 11C5                      u4811 156A                      u4731 14F5  
                    u3771 0C19                      u3683 0BBC                      u3675 0B9D  
                    u2891 110F                      u2971 10DD                      u2955 10C6  
                    u3915 0221                      u3931 0CB0                      u4660 142D  
                    u4580 13E3                      u4820 1571                      u4740 14FA  
                    u3780 0C2C                      u5277 1EEE                      u4485 1180  
                    u4661 142C                      u4645 141A                      u4821 1570  
                    u4805 1560                      u4741 14F9                      u3781 0C2B  
                    u2885 1102                      u4910 1FCB                      u4590 13F7  
                    u4670 1190                      u4830 1575                      u4750 151A  
                    u3790 0C3B                      u2990 10F1                      u4591 13F6  
                    u4671 118F                      u4831 1574                      u4751 1519  
                    u3695 0BBE                      u2991 10F0                      u2975 10DA  
                    u3855 0075                      u4920 1FED                      u4840 158A  
                    u3880 016B                      u4905 0038                      u4585 13DE  
                    u2985 10E5                      u3881 016A                      u3865 00CF  
                    u3945 0CD1                      u4930 1FFF                      u4690 11A4  
                    u4850 159A                      u4770 1539                      u3970 0DA0  
                    u4931 1FFE                      u4691 11A3                      u4851 1599  
                    u4771 1538                      u3795 0C36                      u3875 0124  
                    u3971 0D9F                      u3955 0D0D                      u4860 159E  
                    u4940 0266                      u4685 1195                      u4861 159D  
                    u4845 1585                      u4765 152B                      u3965 0D58  
                    u4941 0265                      u4870 000F                      u4790 155B  
                    u4950 029B                      u4871 000E                      u4791 155A  
                    u3895 0188                      u4951 029A                      u4960 02CA  
                    u4785 154D                      u3985 0DB3                      u4961 02C9  
                    u4890 0032                      u4970 0304                      u4891 0031  
                    u3995 0DEF                      u4971 0303                      u4980 033F  
                    u4885 0015                      u4981 033E                      u4990 03C8  
                    u4991 03C7         ?_Lcd_Write_String 0075                      _main 1292  
                    btemp 007E                      start 0000        ??_Lcd_Write_String 0077  
         __end_of_Lcd_Cmd 1EF7             ___fltol@sign1 0059           __end_of___fladd 1800  
                   ?_main 0070           __end_of___awdiv 13C1           __end_of___flneg 1ED0  
         __end_of___awmod 1235           __end_of___flmul 0CA1           __end_of___flsub 1F3D  
         __end_of___fltol 1439           __end_of___lldiv 1358           ___awdiv@divisor 0077  
         __end_of___llmod 11DC           __end_of___lwdiv 113A           __end_of___lwmod 10F6  
         ___awdiv@counter 0020                     _PORTD 0008                     _TRISD 0088  
         __end_of_dpowers 10A0                     _scale 0CA1                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 07FC  
        __end_of_Lcd_Init 1292          __end_of_Lcd_Port 1F19           __initialization 07FC  
            __end_of_main 12F2                    ??_main 00C3          ___llmod@dividend 0074  
                  ?_scale 003E          ___awdiv@dividend 0079                 ??_Lcd_Cmd 0071  
        __end_of___xxtofl 15A8          __end_of__powers_ 1044                    ___flge 0802  
                  ___fleq 113A                 ??___fladd 005A                    ___wmul 1F3D  
               ??___awdiv 007B                 ??___flneg 0074                 ??___awmod 0074  
               ??___flmul 002C                 ??___flsub 007E                 ??___fltol 0055  
               ??___lldiv 0078                 ??___llmod 0078                 ??___lwdiv 007A  
               ??___lwmod 0074                    _fround 004F          ___awdiv@quotient 0022  
         ___awmod@divisor 0070           ___awmod@counter 0075                 ??_sprintf 00A5  
         Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078  
         Lcd_Set_Cursor@z 0077                ___flge@ff1 0070                ___flge@ff2 0074  
            ___xxtofl@arg 007A              ___xxtofl@exp 0079              ___xxtofl@val 0070  
              ___fleq@ff1 0070                ___fleq@ff2 0074   __end_of__initialization 07FC  
              ___flneg@f1 0070         __end_of_Lcd_Clear 1EDD                ___fltol@f1 0051  
          __pcstackCOMMON 0070             __end_of_scale 1000            _Lcd_Set_Cursor 0009  
              __div_to_l_ 08A4                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
         __div_to_l_@exp1 0025           __div_to_l_@cntr 0024                   ??_scale 0042  
         __div_to_l_@quot 0020             __div_to_l_@f1 0070             __div_to_l_@f2 0074  
       __end_of__Umul8_16 1F89                __pmaintext 1292                   ?___flge 0070  
                 ?___fleq 0070                   ?___wmul 0070                   ?_fround 003E  
  __end_of_Lcd_Set_Cursor 004F                 ?___xxtofl 0070                ??_Lcd_Init 0074  
              ??_Lcd_Port 0070                __stringtab 1000            _Lcd_Write_Char 1F89  
                 _Lcd_Cmd 1EDD         __end_of__npowers_ 1078                   ___fladd 15A8  
                 ___awdiv 1358                   ___flneg 1EC5                   ___awmod 11DC  
                 ___flmul 095C                   ___flsub 1F19                   ___fltol 13C1  
                 ___lldiv 12F2                   ___llmod 1188                   ___lwdiv 10F6  
              _fround$767 004D                _fround$768 0049                   ___lwmod 10BC  
         ?_Lcd_Set_Cursor 0074                   __ptext1 025A                   __ptext2 0CA1  
                 __ptext3 11DC                   __ptext4 1358                   __ptext5 004F  
                 __ptext6 10BC                   __ptext7 10F6                   __ptext8 095C  
                 __ptext9 1F62               ?__div_to_l_ 0070                   _dpowers 1078  
              ??___xxtofl 0074          ___awmod@dividend 0072                   _sprintf 025A  
  __end_of_Lcd_Write_Char 1FBE      end_of_initialization 07FC           ___lldiv@divisor 0070  
         ___lldiv@counter 007D                 Lcd_Port@a 0070            __tdiv_to_l_@f1 0070  
          __tdiv_to_l_@f2 0074             ??__tdiv_to_l_ 0078               ___fladd@grs 0065  
           ___xxtofl@sign 0078           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0075  
       Lcd_Write_String@i 007A               ___flmul@grs 0032                 _Lcd_Clear 1ED0  
          __end_of___flge 08A4            __end_of___fleq 1188            __end_of___wmul 1F62  
        _Lcd_Write_String 1FBE            __end_of_fround 025A       start_initialization 07FC  
     __end_of__tdiv_to_l_ 14F0           ___llmod@divisor 0070           ___llmod@counter 0079  
              ?_Lcd_Clear 0070                  ??___flge 0078                  ??___fleq 0078  
                ??___wmul 0074                 __Umul8_16 1F62           Lcd_Write_Char@a 0074  
         Lcd_Write_Char@y 0073                  ??_fround 0042             sprintf@tmpval 00B9  
               ___fladd@a 0056                 ___fladd@b 0052                fround@prec 0051  
               ___flmul@a 0028                 ___flmul@b 0024                 ___flsub@a 0066  
               ___flsub@b 006A                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0                  ?_Lcd_Cmd 0070               sprintf@flag 00AF  
             sprintf@eexp 00B7               sprintf@fval 00BE               sprintf@prec 00B1  
        ___lwdiv@dividend 0078          ??_Lcd_Set_Cursor 0075                  ?___fladd 0052  
                ?___awdiv 0077                  ?___flneg 0070                  ?___awmod 0070  
                ?___flmul 0024                  ?___flsub 0066                  ?___fltol 0051  
                ?___lldiv 0070                  ?___llmod 0070                 __npowers_ 1044  
              ?__Umul8_16 0070                  ?___lwdiv 0076                  ?___lwmod 0070  
               __pstrings 1000               __tdiv_to_l_ 1439              ??__div_to_l_ 0078  
               _scale$769 004C          ___lwdiv@quotient 007B                  ?_sprintf 00A0  
          ___wmul@product 0074                  Lcd_Cmd@a 0073        __end_of__div_to_l_ 095C  
             ??_Lcd_Clear 0074               __stringbase 100F         ___wmul@multiplier 0070  
               main@array 00C6          ??_Lcd_Write_Char 0071                  _Lcd_Init 1235  
                _Lcd_Port 1EF7  __end_of_Lcd_Write_String 2000               ??__Umul8_16 0072  
      __end_of__stringtab 1010                sprintf@val 00B3                  ___xxtofl 14F0  
         ___lwdiv@divisor 0076           ___lwdiv@counter 007D                  __ptext10 1439  
                __ptext11 08A4                  __ptext20 0802                  __ptext12 14F0  
                __ptext21 113A                  __ptext13 1F3D                  __ptext22 1FBE  
                __ptext14 1188                  __ptext23 1F89                  __ptext15 12F2  
                __ptext24 0009                  __ptext16 13C1                  __ptext25 1235  
                __ptext17 1F19                  __ptext26 1ED0                  __ptext18 15A8  
                __ptext27 1EDD                  __ptext19 1EC5                  __ptext28 1EF7  
                __powers_ 1010           main@temperature 00DA                  scale@scl 0050  
      Lcd_Write_Char@temp 0072                 sprintf@ap 00AE          __tdiv_to_l_@exp1 0025  
        __tdiv_to_l_@cntr 0024                 sprintf@sp 00BD          __tdiv_to_l_@quot 0020  
        ___lwmod@dividend 0072          ___lldiv@dividend 0074                 stringcode 100A  
      Lcd_Set_Cursor@temp 0079              ?__tdiv_to_l_ 0070    __Umul8_16@multiplicand 0070  
                sprintf@c 00C2                  sprintf@f 00A0          ___lldiv@quotient 0079  
         ___lwmod@divisor 0070           ___lwmod@counter 0075                  stringdir 100A  
                stringtab 1000             ___fladd@signs 0062              ___fladd@aexp 0063  
            ___fladd@bexp 0064      __Umul8_16@multiplier 0078         __Umul8_16@product 0074  
