

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Nov 27 23:03:00 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Version 2.40
    13                           ; Generated 17/11/2021 GMT
    14                           ; 
    15                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009C                     	;# 
   158     009D                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167                           
   168                           	psect	strings
   169     0003                     __pstrings:
   170     0003                     stringtab:
   171     0003                     __stringtab:
   172     0003                     stringcode:	
   173                           ;	String table - string pointers are 1 byte each
   174                           
   175     0003                     stringdir:
   176     0003  3000               	movlw	high stringdir
   177     0004  008A               	movwf	10
   178     0005  0804               	movf	4,w
   179     0006  0A84               	incf	4,f
   180     0007  0782               	addwf	2,f
   181     0008                     __stringbase:
   182     0008  3400               	retlw	0
   183     0009                     __end_of__stringtab:
   184     0009                     _disp:
   185     0009  343F               	retlw	63
   186     000A  3406               	retlw	6
   187     000B  345B               	retlw	91
   188     000C  344F               	retlw	79
   189     000D  3466               	retlw	102
   190     000E  346D               	retlw	109
   191     000F  347D               	retlw	125
   192     0010  3407               	retlw	7
   193     0011  347F               	retlw	127
   194     0012  346F               	retlw	111
   195     0013                     __end_of_disp:
   196     0007                     _PORTC	set	7
   197     0032                     _RB2	set	50
   198     0031                     _RB1	set	49
   199     0030                     _RB0	set	48
   200     0087                     _TRISC	set	135
   201     0086                     _TRISB	set	134
   202                           
   203                           	psect	cinit
   204     07FC                     start_initialization:	
   205                           ; #config settings
   206                           
   207     07FC                     __initialization:
   208     07FC                     end_of_initialization:	
   209                           ;End of C runtime variable initialization code
   210                           
   211     07FC                     __end_of__initialization:
   212     07FC  0183               	clrf	3
   213     07FD  120A  118A  2FAD   	ljmp	_main	;jump to C main() function
   214                           
   215                           	psect	cstackCOMMON
   216     0070                     __pcstackCOMMON:
   217     0070                     ?_main:
   218     0070                     ??_main:	
   219                           ; 1 bytes @ 0x0
   220                           
   221                           
   222                           ; 1 bytes @ 0x0
   223     0070                     	ds	1
   224     0071                     main@i:
   225                           
   226                           ; 1 bytes @ 0x1
   227     0071                     	ds	1
   228                           
   229                           	psect	maintext
   230     07AD                     __pmaintext:	
   231 ;;
   232 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   233 ;;
   234 ;; *************** function _main *****************
   235 ;; Defined at:
   236 ;;		line 16 in file "main.c"
   237 ;; Parameters:    Size  Location     Type
   238 ;;		None
   239 ;; Auto vars:     Size  Location     Type
   240 ;;  i               1    1[COMMON] unsigned char 
   241 ;; Return value:  Size  Location     Type
   242 ;;                  1    wreg      void 
   243 ;; Registers used:
   244 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   245 ;; Tracked objects:
   246 ;;		On entry : B00/0
   247 ;;		On exit  : 0/0
   248 ;;		Unchanged: 0/0
   249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   250 ;;      Params:         0       0       0       0       0
   251 ;;      Locals:         1       0       0       0       0
   252 ;;      Temps:          1       0       0       0       0
   253 ;;      Totals:         2       0       0       0       0
   254 ;;Total ram usage:        2 bytes
   255 ;; This function calls:
   256 ;;		Nothing
   257 ;; This function is called by:
   258 ;;		Startup code after reset
   259 ;; This function uses a non-reentrant model
   260 ;;
   261                           
   262     07AD                     _main:	
   263                           ;psect for function _main
   264                           
   265     07AD                     l654:	
   266                           ;incstack = 0
   267                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath]
   268                           
   269                           
   270                           ;main.c: 18:             }
   271     07AD  01F1               	clrf	main@i
   272     07AE                     l656:
   273                           
   274                           ;main.c: 19:             PORTC = disp[i];
   275     07AE  3001               	movlw	1
   276     07AF  1683               	bsf	3,5	;RP0=1, select bank1
   277     07B0  1303               	bcf	3,6	;RP1=0, select bank1
   278     07B1  0086               	movwf	6	;volatile
   279     07B2                     l658:
   280                           
   281                           ;main.c: 20:             while (RB0);
   282     07B2  0187               	clrf	7	;volatile
   283                           
   284                           ;main.c: 21:         }
   285     07B3  303F               	movlw	63
   286     07B4  1283               	bcf	3,5	;RP0=0, select bank0
   287     07B5  1303               	bcf	3,6	;RP1=0, select bank0
   288     07B6  0087               	movwf	7	;volatile
   289     07B7                     l660:
   290                           
   291                           ;main.c: 24:             i--;;main.c: 25:             if (i = 255)
   292     07B7  1C06               	btfss	6,0	;volatile
   293     07B8  2FBA               	goto	u81
   294     07B9  2FBB               	goto	u80
   295     07BA                     u81:
   296     07BA  2FD3               	goto	l20
   297     07BB                     u80:
   298     07BB                     l662:
   299                           
   300                           ;main.c: 26:             {;main.c: 27:                 i = 9;
   301     07BB  3001               	movlw	1
   302     07BC  00F0               	movwf	??_main
   303     07BD  0870               	movf	??_main,w
   304     07BE  07F1               	addwf	main@i,f
   305                           
   306                           ;main.c: 28:             }
   307     07BF  300A               	movlw	10
   308     07C0  0671               	xorwf	main@i,w
   309     07C1  1D03               	btfss	3,2
   310     07C2  2FC4               	goto	u91
   311     07C3  2FC5               	goto	u90
   312     07C4                     u91:
   313     07C4  2FC6               	goto	l666
   314     07C5                     u90:
   315     07C5                     l664:
   316                           
   317                           ;main.c: 29:             PORTC = disp[i];;main.c: 30:             while (RB1);
   318     07C5  01F1               	clrf	main@i
   319     07C6                     l666:
   320                           
   321                           ;main.c: 32:         if (RB2)
   322     07C6  0871               	movf	main@i,w
   323     07C7  3E01               	addlw	low ((_disp-__stringbase)| (0+32768))
   324     07C8  0084               	movwf	4
   325     07C9  120A  118A  2003  120A  118A  	fcall	stringdir
   326     07CE  0087               	movwf	7	;volatile
   327     07CF                     l22:	
   328                           ;main.c: 33:         {
   329                           
   330     07CF  1806               	btfsc	6,0	;volatile
   331     07D0  2FD2               	goto	u101
   332     07D1  2FD3               	goto	u100
   333     07D2                     u101:
   334     07D2  2FCF               	goto	l22
   335     07D3                     u100:
   336     07D3                     l20:	
   337                           ;main.c: 34:             i = 0;
   338                           
   339                           
   340                           ;main.c: 35:             PORTC = disp[i];
   341     07D3  1C86               	btfss	6,1	;volatile
   342     07D4  2FD6               	goto	u111
   343     07D5  2FD7               	goto	u110
   344     07D6                     u111:
   345     07D6  2FE7               	goto	l25
   346     07D7                     u110:
   347     07D7                     l668:
   348                           
   349                           ;main.c: 36:             while (RB2);;main.c: 37:         }
   350     07D7  3001               	movlw	1
   351     07D8  02F1               	subwf	main@i,f
   352     07D9                     l670:
   353     07D9                     l672:
   354                           
   355                           ;main.c: 39:     };main.c: 40:     return;
   356     07D9  3009               	movlw	9
   357     07DA  00F1               	movwf	main@i
   358     07DB                     l674:
   359     07DB  300A               	movlw	low (((_disp+9)-__stringbase)| (0+32768))
   360     07DC  0084               	movwf	4
   361     07DD  120A  118A  2003  120A  118A  	fcall	stringdir
   362     07E2  0087               	movwf	7	;volatile
   363     07E3                     l27:
   364     07E3  1886               	btfsc	6,1	;volatile
   365     07E4  2FE6               	goto	u121
   366     07E5  2FE7               	goto	u120
   367     07E6                     u121:
   368     07E6  2FE3               	goto	l27
   369     07E7                     u120:
   370     07E7                     l25:
   371     07E7  1D06               	btfss	6,2	;volatile
   372     07E8  2FEA               	goto	u131
   373     07E9  2FEB               	goto	u130
   374     07EA                     u131:
   375     07EA  2FB7               	goto	l660
   376     07EB                     u130:
   377     07EB                     l676:
   378     07EB  01F1               	clrf	main@i
   379     07EC                     l678:
   380     07EC  3001               	movlw	low (_disp-__stringbase)
   381     07ED  0084               	movwf	4
   382     07EE  120A  118A  2003  120A  118A  	fcall	stringdir
   383     07F3  0087               	movwf	7	;volatile
   384     07F4                     l31:
   385     07F4  1906               	btfsc	6,2	;volatile
   386     07F5  2FF7               	goto	u141
   387     07F6  2FF8               	goto	u140
   388     07F7                     u141:
   389     07F7  2FF4               	goto	l31
   390     07F8                     u140:
   391     07F8  2FB7               	goto	l660
   392     07F9  120A  118A  2800   	ljmp	start
   393     07FC                     __end_of_main:
   394     007E                     btemp	set	126	;btemp
   395     007E                     wtemp0	set	126
   396                           
   397                           	psect	idloc
   398                           
   399                           ;Config register IDLOC0 @ 0x2000
   400                           ;	unspecified, using default values
   401     2000                     	org	8192
   402     2000  3FFF               	dw	16383
   403                           
   404                           ;Config register IDLOC1 @ 0x2001
   405                           ;	unspecified, using default values
   406     2001                     	org	8193
   407     2001  3FFF               	dw	16383
   408                           
   409                           ;Config register IDLOC2 @ 0x2002
   410                           ;	unspecified, using default values
   411     2002                     	org	8194
   412     2002  3FFF               	dw	16383
   413                           
   414                           ;Config register IDLOC3 @ 0x2003
   415                           ;	unspecified, using default values
   416     2003                     	org	8195
   417     2003  3FFF               	dw	16383
   418                           
   419                           	psect	config
   420                           
   421                           ;Config register CONFIG @ 0x2007
   422                           ;	Oscillator Selection bits
   423                           ;	FOSC = XT, XT oscillator
   424                           ;	Watchdog Timer Enable bit
   425                           ;	WDTE = ON, WDT enabled
   426                           ;	Power-up Timer Enable bit
   427                           ;	PWRTE = OFF, PWRT disabled
   428                           ;	Brown-out Reset Enable bit
   429                           ;	BOREN = ON, BOR enabled
   430                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   431                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   432                           ;	Data EEPROM Memory Code Protection bit
   433                           ;	CPD = OFF, Data EEPROM code protection off
   434                           ;	Flash Program Memory Write Enable bits
   435                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   436                           ;	In-Circuit Debugger Mode bit
   437                           ;	DEBUG = 0x1, unprogrammed default
   438                           ;	Flash Program Memory Code Protection bit
   439                           ;	CP = OFF, Code protection off
   440     2007                     	org	8199
   441     2007  3FFD               	dw	16381

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      95
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Nov 27 23:03:00 2022

                      pc 0002                       l20 07D3                       l22 07CF  
                     l31 07F4                       l25 07E7                       l27 07E3  
                     u80 07BB                       u81 07BA                       u90 07C5  
                     u91 07C4                       fsr 0004                      l660 07B7  
                    l670 07D9                      l662 07BB                      l654 07AD  
                    l672 07D9                      l664 07C5                      l656 07AE  
                    l674 07DB                      l666 07C6                      l658 07B2  
                    l676 07EB                      l668 07D7                      l678 07EC  
                    _RB0 0030                      _RB1 0031                      _RB2 0032  
                    u100 07D3                      u101 07D2                      u110 07D7  
                    u111 07D6                      u120 07E7                      u121 07E6  
                    u130 07EB                      u131 07EA                      u140 07F8  
                    u141 07F7                      fsr0 0004                     _disp 0009  
                   _main 07AD                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTC 0007                    _TRISB 0086  
                  _TRISC 0087                    main@i 0071                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_disp 0013             __end_of_main 07FC                   ??_main 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 07AD  
             __stringtab 0003     end_of_initialization 07FC      start_initialization 07FC  
              ___latbits 0002                __pstrings 0003              __stringbase 0008  
     __end_of__stringtab 0009                stringcode 0003                 stringdir 0003  
               stringtab 0003  
