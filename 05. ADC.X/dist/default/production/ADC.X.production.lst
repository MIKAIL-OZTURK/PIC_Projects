

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Nov 24 13:25:20 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Version 2.40
    13                           ; Generated 17/11/2021 GMT
    14                           ; 
    15                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009C                     	;# 
   158     009D                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167     0007                     _PORTC	set	7
   168     0006                     _PORTB	set	6
   169     001E                     _ADRESH	set	30
   170     001F                     _ADCON0	set	31
   171     00FA                     _GO_nDONE	set	250
   172     009F                     _ADCON1	set	159
   173     0087                     _TRISC	set	135
   174     0086                     _TRISB	set	134
   175     0085                     _TRISA	set	133
   176     009E                     _ADRESL	set	158
   177                           
   178                           	psect	cinit
   179     07FC                     start_initialization:	
   180                           ; #config settings
   181                           
   182     07FC                     __initialization:
   183     07FC                     end_of_initialization:	
   184                           ;End of C runtime variable initialization code
   185                           
   186     07FC                     __end_of__initialization:
   187     07FC  0183               	clrf	3
   188     07FD  120A  118A  2FA4   	ljmp	_main	;jump to C main() function
   189                           
   190                           	psect	cstackCOMMON
   191     0070                     __pcstackCOMMON:
   192     0070                     ?_main:
   193     0070                     ?_Read_ADC:	
   194                           ; 1 bytes @ 0x0
   195                           
   196                           
   197                           ; 2 bytes @ 0x0
   198     0070                     	ds	2
   199     0072                     ??_Read_ADC:
   200                           
   201                           ; 1 bytes @ 0x2
   202     0072                     	ds	2
   203     0074                     Read_ADC@channel:
   204                           
   205                           ; 1 bytes @ 0x4
   206     0074                     	ds	1
   207     0075                     ??_main:
   208     0075                     main@ADC_Value:	
   209                           ; 1 bytes @ 0x5
   210                           
   211                           
   212                           ; 2 bytes @ 0x5
   213     0075                     	ds	2
   214                           
   215                           	psect	maintext
   216     07A4                     __pmaintext:	
   217 ;;
   218 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   219 ;;
   220 ;; *************** function _main *****************
   221 ;; Defined at:
   222 ;;		line 29 in file "main.c"
   223 ;; Parameters:    Size  Location     Type
   224 ;;		None
   225 ;; Auto vars:     Size  Location     Type
   226 ;;  ADC_Value       2    5[COMMON] unsigned int 
   227 ;; Return value:  Size  Location     Type
   228 ;;                  1    wreg      void 
   229 ;; Registers used:
   230 ;;		wreg, status,2, status,0, pclath, cstack
   231 ;; Tracked objects:
   232 ;;		On entry : B00/0
   233 ;;		On exit  : 0/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   236 ;;      Params:         0       0       0       0       0
   237 ;;      Locals:         2       0       0       0       0
   238 ;;      Temps:          0       0       0       0       0
   239 ;;      Totals:         2       0       0       0       0
   240 ;;Total ram usage:        2 bytes
   241 ;; Hardware stack levels required when called: 1
   242 ;; This function calls:
   243 ;;		_Read_ADC
   244 ;; This function is called by:
   245 ;;		Startup code after reset
   246 ;; This function uses a non-reentrant model
   247 ;;
   248                           
   249     07A4                     _main:	
   250                           ;psect for function _main
   251                           
   252     07A4                     l683:	
   253                           ;incstack = 0
   254                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   255                           
   256     07A4                     l685:
   257                           
   258                           ;main.c: 33:         PORTC = ADC_Value >> 8;
   259     07A4  30FF               	movlw	255
   260     07A5  1683               	bsf	3,5	;RP0=1, select bank1
   261     07A6  1303               	bcf	3,6	;RP1=0, select bank1
   262     07A7  0085               	movwf	5	;volatile
   263     07A8                     l687:
   264                           
   265                           ;main.c: 34:     }
   266     07A8  0186               	clrf	6	;volatile
   267     07A9                     l689:
   268                           
   269                           ;main.c: 35:     return;
   270     07A9  0187               	clrf	7	;volatile
   271     07AA                     l691:
   272                           
   273                           ;main.c: 36: }
   274     07AA  1283               	bcf	3,5	;RP0=0, select bank0
   275     07AB  1303               	bcf	3,6	;RP1=0, select bank0
   276     07AC  0186               	clrf	6	;volatile
   277     07AD                     l693:
   278     07AD  0187               	clrf	7	;volatile
   279     07AE                     l695:
   280     07AE  3091               	movlw	145
   281     07AF  009F               	movwf	31	;volatile
   282     07B0                     l697:
   283     07B0  3080               	movlw	128
   284     07B1  1683               	bsf	3,5	;RP0=1, select bank1
   285     07B2  1303               	bcf	3,6	;RP1=0, select bank1
   286     07B3  009F               	movwf	31	;volatile
   287     07B4                     l699:
   288     07B4  3000               	movlw	0
   289     07B5  120A  118A  27C8  120A  118A  	fcall	_Read_ADC
   290     07BA  0871               	movf	?_Read_ADC+1,w
   291     07BB  00F6               	movwf	main@ADC_Value+1
   292     07BC  0870               	movf	?_Read_ADC,w
   293     07BD  00F5               	movwf	main@ADC_Value
   294     07BE                     l701:
   295     07BE  0875               	movf	main@ADC_Value,w
   296     07BF  1283               	bcf	3,5	;RP0=0, select bank0
   297     07C0  1303               	bcf	3,6	;RP1=0, select bank0
   298     07C1  0086               	movwf	6	;volatile
   299     07C2                     l703:
   300     07C2  0876               	movf	main@ADC_Value+1,w
   301     07C3  0087               	movwf	7	;volatile
   302     07C4  2FB4               	goto	l699
   303     07C5  120A  118A  2800   	ljmp	start
   304     07C8                     __end_of_main:
   305                           
   306                           	psect	text1
   307     07C8                     __ptext1:	
   308 ;; *************** function _Read_ADC *****************
   309 ;; Defined at:
   310 ;;		line 13 in file "main.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;  channel         1    wreg     unsigned char 
   313 ;; Auto vars:     Size  Location     Type
   314 ;;  channel         1    4[COMMON] unsigned char 
   315 ;; Return value:  Size  Location     Type
   316 ;;                  2    0[COMMON] unsigned int 
   317 ;; Registers used:
   318 ;;		wreg, status,2, status,0
   319 ;; Tracked objects:
   320 ;;		On entry : 0/0
   321 ;;		On exit  : 0/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   324 ;;      Params:         2       0       0       0       0
   325 ;;      Locals:         1       0       0       0       0
   326 ;;      Temps:          2       0       0       0       0
   327 ;;      Totals:         5       0       0       0       0
   328 ;;Total ram usage:        5 bytes
   329 ;; Hardware stack levels used: 1
   330 ;; This function calls:
   331 ;;		Nothing
   332 ;; This function is called by:
   333 ;;		_main
   334 ;; This function uses a non-reentrant model
   335 ;;
   336                           
   337     07C8                     _Read_ADC:	
   338                           ;psect for function _Read_ADC
   339                           
   340                           
   341                           ;incstack = 0
   342                           ; Regs used in _Read_ADC: [wreg+status,2+status,0]
   343                           ;Read_ADC@channel stored from wreg
   344     07C8  00F4               	movwf	Read_ADC@channel
   345     07C9                     l667:
   346                           
   347                           ;main.c: 13: };main.c: 14: ;main.c: 15: 
   348     07C9  3008               	movlw	8
   349     07CA  0274               	subwf	Read_ADC@channel,w
   350     07CB  1C03               	skipc
   351     07CC  2FCE               	goto	u41
   352     07CD  2FCF               	goto	u40
   353     07CE                     u41:
   354     07CE  2FD2               	goto	l673
   355     07CF                     u40:
   356     07CF                     l669:
   357                           
   358                           ;main.c: 16: void main(void);main.c: 17: {
   359     07CF  01F0               	clrf	?_Read_ADC
   360     07D0  01F1               	clrf	?_Read_ADC+1
   361     07D1  2FFB               	goto	l26
   362     07D2                     l673:
   363                           
   364                           ;main.c: 20:     TRISA = 0xFF;
   365     07D2  30C5               	movlw	197
   366     07D3  00F2               	movwf	??_Read_ADC
   367     07D4  0872               	movf	??_Read_ADC,w
   368     07D5  1283               	bcf	3,5	;RP0=0, select bank0
   369     07D6  1303               	bcf	3,6	;RP1=0, select bank0
   370     07D7  059F               	andwf	31,f	;volatile
   371                           
   372                           ;main.c: 21:     TRISB = 0x00;
   373     07D8  0874               	movf	Read_ADC@channel,w	;volatile
   374     07D9  00F2               	movwf	??_Read_ADC
   375     07DA  3002               	movlw	2
   376     07DB                     u55:
   377     07DB  1003               	clrc
   378     07DC  0DF2               	rlf	??_Read_ADC,f
   379     07DD  3EFF               	addlw	-1
   380     07DE  1D03               	skipz
   381     07DF  2FDB               	goto	u55
   382     07E0  1003               	clrc
   383     07E1  0D72               	rlf	??_Read_ADC,w
   384     07E2  00F3               	movwf	??_Read_ADC+1
   385     07E3  0873               	movf	??_Read_ADC+1,w
   386     07E4  049F               	iorwf	31,f	;volatile
   387     07E5                     l675:
   388                           
   389                           ;main.c: 22:     TRISC = 0x00;
   390     07E5  3006               	movlw	6
   391     07E6  00F3               	movwf	??_Read_ADC+1
   392     07E7  3030               	movlw	48
   393     07E8  00F2               	movwf	??_Read_ADC
   394     07E9                     u77:
   395     07E9  0BF2               	decfsz	??_Read_ADC,f
   396     07EA  2FE9               	goto	u77
   397     07EB  0BF3               	decfsz	??_Read_ADC+1,f
   398     07EC  2FE9               	goto	u77
   399     07ED  0000               	nop
   400     07EE                     l677:
   401                           
   402                           ;main.c: 23:     PORTB = 0x00;
   403     07EE  1283               	bcf	3,5	;RP0=0, select bank0
   404     07EF  1303               	bcf	3,6	;RP1=0, select bank0
   405     07F0  151F               	bsf	31,2	;volatile
   406     07F1                     l27:	
   407                           ;main.c: 24:     PORTC = 0x00;
   408                           
   409     07F1  191F               	btfsc	31,2	;volatile
   410     07F2  2FF4               	goto	u61
   411     07F3  2FF5               	goto	u60
   412     07F4                     u61:
   413     07F4  2FF1               	goto	l27
   414     07F5                     u60:
   415     07F5                     l679:
   416                           
   417                           ;main.c: 25: 
   418     07F5  081E               	movf	30,w	;volatile
   419     07F6  00F1               	movwf	?_Read_ADC+1
   420     07F7  1683               	bsf	3,5	;RP0=1, select bank1
   421     07F8  1303               	bcf	3,6	;RP1=0, select bank1
   422     07F9  081E               	movf	30,w	;volatile
   423     07FA  00F0               	movwf	?_Read_ADC
   424     07FB                     l26:
   425     07FB  0008               	return
   426     07FC                     __end_of_Read_ADC:
   427     007E                     btemp	set	126	;btemp
   428     007E                     wtemp0	set	126
   429                           
   430                           	psect	idloc
   431                           
   432                           ;Config register IDLOC0 @ 0x2000
   433                           ;	unspecified, using default values
   434     2000                     	org	8192
   435     2000  3FFF               	dw	16383
   436                           
   437                           ;Config register IDLOC1 @ 0x2001
   438                           ;	unspecified, using default values
   439     2001                     	org	8193
   440     2001  3FFF               	dw	16383
   441                           
   442                           ;Config register IDLOC2 @ 0x2002
   443                           ;	unspecified, using default values
   444     2002                     	org	8194
   445     2002  3FFF               	dw	16383
   446                           
   447                           ;Config register IDLOC3 @ 0x2003
   448                           ;	unspecified, using default values
   449     2003                     	org	8195
   450     2003  3FFF               	dw	16383
   451                           
   452                           	psect	config
   453                           
   454                           ;Config register CONFIG @ 0x2007
   455                           ;	Oscillator Selection bits
   456                           ;	FOSC = HS, HS oscillator
   457                           ;	Watchdog Timer Enable bit
   458                           ;	WDTE = ON, WDT enabled
   459                           ;	Power-up Timer Enable bit
   460                           ;	PWRTE = OFF, PWRT disabled
   461                           ;	Brown-out Reset Enable bit
   462                           ;	BOREN = ON, BOR enabled
   463                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   464                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   465                           ;	Data EEPROM Memory Code Protection bit
   466                           ;	CPD = OFF, Data EEPROM code protection off
   467                           ;	Flash Program Memory Write Enable bits
   468                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   469                           ;	In-Circuit Debugger Mode bit
   470                           ;	DEBUG = 0x1, unprogrammed default
   471                           ;	Flash Program Memory Code Protection bit
   472                           ;	CP = OFF, Code protection off
   473     2007                     	org	8199
   474     2007  3FFE               	dw	16382

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Read_ADC

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      90
                                              5 COMMON     2     2      0
                           _Read_ADC
 ---------------------------------------------------------------------------------
 (1) _Read_ADC                                             5     3      2      44
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Nov 24 13:25:20 2022

                     l26 07FB                       l27 07F1                       u40 07CF  
                     u41 07CE                       u60 07F5                       u61 07F4  
                     u55 07DB                       u77 07E9                      l701 07BE  
                    l703 07C2                      l673 07D2                      l675 07E5  
                    l667 07C9                      l691 07AA                      l683 07A4  
                    l677 07EE                      l669 07CF                      l693 07AD  
                    l685 07A4                      l679 07F5                      l695 07AE  
                    l687 07A8                      l697 07B0                      l689 07A9  
                    l699 07B4                     _main 07A4                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTB 0006  
                  _PORTC 0007                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07C8         __end_of_Read_ADC 07FC  
                 ??_main 0075                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   _ADRESL 009E          Read_ADC@channel 0074  
__end_of__initialization 07FC           __pcstackCOMMON 0070                ?_Read_ADC 0070  
             __pmaintext 07A4               ??_Read_ADC 0072                  __ptext1 07C8  
   end_of_initialization 07FC      start_initialization 07FC                ___latbits 0002  
               _GO_nDONE 00FA                 _Read_ADC 07C8            main@ADC_Value 0075  
