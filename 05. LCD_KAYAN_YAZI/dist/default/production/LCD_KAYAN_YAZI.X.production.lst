

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Nov 24 12:35:12 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Version 2.40
    23                           ; Generated 17/11/2021 GMT
    24                           ; 
    25                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0088                     	;# 
    97     0089                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     008E                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0098                     	;# 
   106     0099                     	;# 
   107     009C                     	;# 
   108     009D                     	;# 
   109     009E                     	;# 
   110     009F                     	;# 
   111     010C                     	;# 
   112     010D                     	;# 
   113     010E                     	;# 
   114     010F                     	;# 
   115     018C                     	;# 
   116     018D                     	;# 
   117     0000                     	;# 
   118     0001                     	;# 
   119     0002                     	;# 
   120     0003                     	;# 
   121     0004                     	;# 
   122     0005                     	;# 
   123     0006                     	;# 
   124     0007                     	;# 
   125     0008                     	;# 
   126     0009                     	;# 
   127     000A                     	;# 
   128     000B                     	;# 
   129     000C                     	;# 
   130     000D                     	;# 
   131     000E                     	;# 
   132     000E                     	;# 
   133     000F                     	;# 
   134     0010                     	;# 
   135     0011                     	;# 
   136     0012                     	;# 
   137     0013                     	;# 
   138     0014                     	;# 
   139     0015                     	;# 
   140     0015                     	;# 
   141     0016                     	;# 
   142     0017                     	;# 
   143     0018                     	;# 
   144     0019                     	;# 
   145     001A                     	;# 
   146     001B                     	;# 
   147     001B                     	;# 
   148     001C                     	;# 
   149     001D                     	;# 
   150     001E                     	;# 
   151     001F                     	;# 
   152     0081                     	;# 
   153     0085                     	;# 
   154     0086                     	;# 
   155     0087                     	;# 
   156     0088                     	;# 
   157     0089                     	;# 
   158     008C                     	;# 
   159     008D                     	;# 
   160     008E                     	;# 
   161     0091                     	;# 
   162     0092                     	;# 
   163     0093                     	;# 
   164     0094                     	;# 
   165     0098                     	;# 
   166     0099                     	;# 
   167     009C                     	;# 
   168     009D                     	;# 
   169     009E                     	;# 
   170     009F                     	;# 
   171     010C                     	;# 
   172     010D                     	;# 
   173     010E                     	;# 
   174     010F                     	;# 
   175     018C                     	;# 
   176     018D                     	;# 
   177     0008                     _PORTD	set	8
   178     0043                     _RD3	set	67
   179     0042                     _RD2	set	66
   180     0047                     _RD7	set	71
   181     0046                     _RD6	set	70
   182     0045                     _RD5	set	69
   183     0044                     _RD4	set	68
   184     0088                     _TRISD	set	136
   185                           
   186                           	psect	strings
   187     0003                     __pstrings:
   188     0003                     stringtab:
   189     0003                     __stringtab:
   190     0003                     stringcode:	
   191                           ;	String table - string pointers are 1 byte each
   192                           
   193     0003                     stringdir:
   194     0003  3000               	movlw	high stringdir
   195     0004  008A               	movwf	10
   196     0005  0804               	movf	4,w
   197     0006  0A84               	incf	4,f
   198     0007  0782               	addwf	2,f
   199     0008                     __stringbase:
   200     0008  3400               	retlw	0
   201     0009                     __end_of__stringtab:
   202     0009                     STR_1:
   203     0009  344D               	retlw	77	;'M'
   204     000A  3465               	retlw	101	;'e'
   205     000B  3472               	retlw	114	;'r'
   206     000C  3468               	retlw	104	;'h'
   207     000D  3461               	retlw	97	;'a'
   208     000E  3462               	retlw	98	;'b'
   209     000F  3461               	retlw	97	;'a'
   210     0010  3420               	retlw	32	;' '
   211     0011  3444               	retlw	68	;'D'
   212     0012  3475               	retlw	117	;'u'
   213     0013  346E               	retlw	110	;'n'
   214     0014  3479               	retlw	121	;'y'
   215     0015  3461               	retlw	97	;'a'
   216     0016  342E               	retlw	46	;'.'
   217     0017  3400               	retlw	0
   218                           
   219                           	psect	cinit
   220     07FC                     start_initialization:	
   221                           ; #config settings
   222                           
   223     07FC                     __initialization:
   224     07FC                     end_of_initialization:	
   225                           ;End of C runtime variable initialization code
   226                           
   227     07FC                     __end_of__initialization:
   228     07FC  0183               	clrf	3
   229     07FD  120A  118A  2F84   	ljmp	_main	;jump to C main() function
   230                           
   231                           	psect	cstackCOMMON
   232     0070                     __pcstackCOMMON:
   233     0070                     ?_Lcd_Port:
   234     0070                     ??_Lcd_Port:	
   235                           ; 1 bytes @ 0x0
   236                           
   237     0070                     ?_Lcd_Cmd:	
   238                           ; 1 bytes @ 0x0
   239                           
   240     0070                     ?_Lcd_Init:	
   241                           ; 1 bytes @ 0x0
   242                           
   243     0070                     ?_Lcd_Write_Char:	
   244                           ; 1 bytes @ 0x0
   245                           
   246     0070                     ?_Lcd_Write_String:	
   247                           ; 1 bytes @ 0x0
   248                           
   249     0070                     ?_Lcd_Shift_Right:	
   250                           ; 1 bytes @ 0x0
   251                           
   252     0070                     ?_Lcd_Shift_Left:	
   253                           ; 1 bytes @ 0x0
   254                           
   255     0070                     ?_main:	
   256                           ; 1 bytes @ 0x0
   257                           
   258     0070                     ?_Lcd_Clear:	
   259                           ; 1 bytes @ 0x0
   260                           
   261     0070                     Lcd_Port@a:	
   262                           ; 2 bytes @ 0x0
   263                           
   264                           
   265                           ; 1 bytes @ 0x0
   266     0070                     	ds	1
   267     0071                     ??_Lcd_Cmd:
   268     0071                     ??_Lcd_Write_Char:	
   269                           ; 1 bytes @ 0x1
   270                           
   271                           
   272                           ; 1 bytes @ 0x1
   273     0071                     	ds	1
   274     0072                     Lcd_Write_Char@temp:
   275                           
   276                           ; 1 bytes @ 0x2
   277     0072                     	ds	1
   278     0073                     Lcd_Cmd@a:
   279     0073                     Lcd_Write_Char@y:	
   280                           ; 1 bytes @ 0x3
   281                           
   282                           
   283                           ; 1 bytes @ 0x3
   284     0073                     	ds	1
   285     0074                     ??_Lcd_Clear:
   286     0074                     ?_Lcd_Set_Cursor:	
   287                           ; 1 bytes @ 0x4
   288                           
   289     0074                     ??_Lcd_Init:	
   290                           ; 1 bytes @ 0x4
   291                           
   292     0074                     ??_Lcd_Shift_Right:	
   293                           ; 1 bytes @ 0x4
   294                           
   295     0074                     ??_Lcd_Shift_Left:	
   296                           ; 1 bytes @ 0x4
   297                           
   298     0074                     Lcd_Set_Cursor@b:	
   299                           ; 1 bytes @ 0x4
   300                           
   301     0074                     Lcd_Write_Char@a:	
   302                           ; 1 bytes @ 0x4
   303                           
   304                           
   305                           ; 1 bytes @ 0x4
   306     0074                     	ds	1
   307     0075                     ??_Lcd_Set_Cursor:
   308     0075                     ??_Lcd_Write_String:	
   309                           ; 1 bytes @ 0x5
   310                           
   311     0075                     Lcd_Write_String@i:	
   312                           ; 1 bytes @ 0x5
   313                           
   314                           
   315                           ; 2 bytes @ 0x5
   316     0075                     	ds	1
   317     0076                     Lcd_Set_Cursor@a:
   318                           
   319                           ; 1 bytes @ 0x6
   320     0076                     	ds	1
   321     0077                     Lcd_Set_Cursor@z:
   322     0077                     Lcd_Write_String@a:	
   323                           ; 1 bytes @ 0x7
   324                           
   325                           
   326                           ; 1 bytes @ 0x7
   327     0077                     	ds	1
   328     0078                     Lcd_Set_Cursor@y:
   329                           
   330                           ; 1 bytes @ 0x8
   331     0078                     	ds	1
   332     0079                     Lcd_Set_Cursor@temp:
   333                           
   334                           ; 1 bytes @ 0x9
   335     0079                     	ds	1
   336     007A                     ??_main:
   337                           
   338                           ; 1 bytes @ 0xA
   339     007A                     	ds	3
   340                           
   341                           	psect	cstackBANK0
   342     0020                     __pcstackBANK0:
   343     0020                     main@i:
   344                           
   345                           ; 2 bytes @ 0x0
   346     0020                     	ds	2
   347     0022                     main@i_71:
   348                           
   349                           ; 2 bytes @ 0x2
   350     0022                     	ds	2
   351                           
   352                           	psect	maintext
   353     0784                     __pmaintext:	
   354 ;;
   355 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   356 ;;
   357 ;; *************** function _main *****************
   358 ;; Defined at:
   359 ;;		line 23 in file "main.c"
   360 ;; Parameters:    Size  Location     Type
   361 ;;		None
   362 ;; Auto vars:     Size  Location     Type
   363 ;;  i               2    2[BANK0 ] int 
   364 ;;  i               2    0[BANK0 ] int 
   365 ;; Return value:  Size  Location     Type
   366 ;;                  1    wreg      void 
   367 ;; Registers used:
   368 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   369 ;; Tracked objects:
   370 ;;		On entry : B00/0
   371 ;;		On exit  : 0/0
   372 ;;		Unchanged: 0/0
   373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   374 ;;      Params:         0       0       0       0       0
   375 ;;      Locals:         0       4       0       0       0
   376 ;;      Temps:          3       0       0       0       0
   377 ;;      Totals:         3       4       0       0       0
   378 ;;Total ram usage:        7 bytes
   379 ;; Hardware stack levels required when called: 3
   380 ;; This function calls:
   381 ;;		_Lcd_Clear
   382 ;;		_Lcd_Init
   383 ;;		_Lcd_Set_Cursor
   384 ;;		_Lcd_Shift_Left
   385 ;;		_Lcd_Shift_Right
   386 ;;		_Lcd_Write_String
   387 ;; This function is called by:
   388 ;;		Startup code after reset
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392     0784                     _main:	
   393                           ;psect for function _main
   394                           
   395     0784                     l869:	
   396                           ;incstack = 0
   397                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   398                           
   399                           
   400                           ;main.c: 25:     return;
   401     0784  1683               	bsf	3,5	;RP0=1, select bank1
   402     0785  1303               	bcf	3,6	;RP1=0, select bank1
   403     0786  0188               	clrf	8	;volatile
   404                           
   405                           ;main.c: 26: }
   406     0787  1283               	bcf	3,5	;RP0=0, select bank0
   407     0788  1303               	bcf	3,6	;RP1=0, select bank0
   408     0789  0188               	clrf	8	;volatile
   409     078A                     l871:
   410     078A  120A  118A  2727  120A  118A  	fcall	_Lcd_Init
   411     078F                     l873:
   412     078F  01F4               	clrf	Lcd_Set_Cursor@b
   413     0790  0AF4               	incf	Lcd_Set_Cursor@b,f
   414     0791  3001               	movlw	1
   415     0792  120A  118A  26E1  120A  118A  	fcall	_Lcd_Set_Cursor
   416     0797                     l875:
   417     0797  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   418     0798  120A  118A  2687  120A  118A  	fcall	_Lcd_Write_String
   419     079D                     l877:
   420     079D  1283               	bcf	3,5	;RP0=0, select bank0
   421     079E  1303               	bcf	3,6	;RP1=0, select bank0
   422     079F  01A0               	clrf	main@i
   423     07A0  01A1               	clrf	main@i+1
   424     07A1                     l883:
   425     07A1  3003               	movlw	3
   426     07A2  00FC               	movwf	??_main+2
   427     07A3  308A               	movlw	138
   428     07A4  00FB               	movwf	??_main+1
   429     07A5  3055               	movlw	85
   430     07A6  00FA               	movwf	??_main
   431     07A7                     u257:
   432     07A7  0BFA               	decfsz	??_main,f
   433     07A8  2FA7               	goto	u257
   434     07A9  0BFB               	decfsz	??_main+1,f
   435     07AA  2FA7               	goto	u257
   436     07AB  0BFC               	decfsz	??_main+2,f
   437     07AC  2FA7               	goto	u257
   438     07AD  2FAE               	nop2
   439     07AE                     l885:
   440     07AE  120A  118A  2631  120A  118A  	fcall	_Lcd_Shift_Left
   441     07B3                     l887:
   442     07B3  3001               	movlw	1
   443     07B4  1283               	bcf	3,5	;RP0=0, select bank0
   444     07B5  1303               	bcf	3,6	;RP1=0, select bank0
   445     07B6  07A0               	addwf	main@i,f
   446     07B7  1803               	skipnc
   447     07B8  0AA1               	incf	main@i+1,f
   448     07B9  3000               	movlw	0
   449     07BA  07A1               	addwf	main@i+1,f
   450     07BB                     l889:
   451     07BB  0821               	movf	main@i+1,w
   452     07BC  3A80               	xorlw	128
   453     07BD  00FF               	movwf	btemp+1
   454     07BE  3080               	movlw	128
   455     07BF  027F               	subwf	btemp+1,w
   456     07C0  1D03               	skipz
   457     07C1  2FC4               	goto	u235
   458     07C2  300F               	movlw	15
   459     07C3  0220               	subwf	main@i,w
   460     07C4                     u235:
   461     07C4  1C03               	skipc
   462     07C5  2FC7               	goto	u231
   463     07C6  2FC8               	goto	u230
   464     07C7                     u231:
   465     07C7  2FA1               	goto	l883
   466     07C8                     u230:
   467     07C8                     l891:
   468     07C8  1283               	bcf	3,5	;RP0=0, select bank0
   469     07C9  1303               	bcf	3,6	;RP1=0, select bank0
   470     07CA  01A2               	clrf	main@i_71
   471     07CB  01A3               	clrf	main@i_71+1
   472     07CC                     l897:
   473     07CC  3003               	movlw	3
   474     07CD  00FC               	movwf	??_main+2
   475     07CE  308A               	movlw	138
   476     07CF  00FB               	movwf	??_main+1
   477     07D0  3055               	movlw	85
   478     07D1  00FA               	movwf	??_main
   479     07D2                     u267:
   480     07D2  0BFA               	decfsz	??_main,f
   481     07D3  2FD2               	goto	u267
   482     07D4  0BFB               	decfsz	??_main+1,f
   483     07D5  2FD2               	goto	u267
   484     07D6  0BFC               	decfsz	??_main+2,f
   485     07D7  2FD2               	goto	u267
   486     07D8  2FD9               	nop2
   487     07D9                     l899:
   488     07D9  120A  118A  263E  120A  118A  	fcall	_Lcd_Shift_Right
   489     07DE                     l901:
   490     07DE  3001               	movlw	1
   491     07DF  1283               	bcf	3,5	;RP0=0, select bank0
   492     07E0  1303               	bcf	3,6	;RP1=0, select bank0
   493     07E1  07A2               	addwf	main@i_71,f
   494     07E2  1803               	skipnc
   495     07E3  0AA3               	incf	main@i_71+1,f
   496     07E4  3000               	movlw	0
   497     07E5  07A3               	addwf	main@i_71+1,f
   498     07E6                     l903:
   499     07E6  0823               	movf	main@i_71+1,w
   500     07E7  3A80               	xorlw	128
   501     07E8  00FF               	movwf	btemp+1
   502     07E9  3080               	movlw	128
   503     07EA  027F               	subwf	btemp+1,w
   504     07EB  1D03               	skipz
   505     07EC  2FEF               	goto	u245
   506     07ED  300F               	movlw	15
   507     07EE  0222               	subwf	main@i_71,w
   508     07EF                     u245:
   509     07EF  1C03               	skipc
   510     07F0  2FF2               	goto	u241
   511     07F1  2FF3               	goto	u240
   512     07F2                     u241:
   513     07F2  2FCC               	goto	l897
   514     07F3                     u240:
   515     07F3                     l905:
   516     07F3  120A  118A  2624  120A  118A  	fcall	_Lcd_Clear
   517     07F8  2F8F               	goto	l873
   518     07F9  120A  118A  2800   	ljmp	start
   519     07FC                     __end_of_main:
   520                           
   521                           	psect	text1
   522     0687                     __ptext1:	
   523 ;; *************** function _Lcd_Write_String *****************
   524 ;; Defined at:
   525 ;;		line 97 in file "C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h"
   526 ;; Parameters:    Size  Location     Type
   527 ;;  a               1    wreg     PTR unsigned char 
   528 ;;		 -> STR_1(15), 
   529 ;; Auto vars:     Size  Location     Type
   530 ;;  a               1    7[COMMON] PTR unsigned char 
   531 ;;		 -> STR_1(15), 
   532 ;;  i               2    5[COMMON] int 
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      void 
   535 ;; Registers used:
   536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   542 ;;      Params:         0       0       0       0       0
   543 ;;      Locals:         3       0       0       0       0
   544 ;;      Temps:          0       0       0       0       0
   545 ;;      Totals:         3       0       0       0       0
   546 ;;Total ram usage:        3 bytes
   547 ;; Hardware stack levels used: 1
   548 ;; Hardware stack levels required when called: 2
   549 ;; This function calls:
   550 ;;		_Lcd_Write_Char
   551 ;; This function is called by:
   552 ;;		_main
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556     0687                     _Lcd_Write_String:	
   557                           ;psect for function _Lcd_Write_String
   558                           
   559                           
   560                           ;incstack = 0
   561                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   562                           ;Lcd_Write_String@a stored from wreg
   563     0687  00F7               	movwf	Lcd_Write_String@a
   564     0688                     l857:
   565                           
   566                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 97: void Lcd_Write_String(char 
      +                          *a);C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 98: {;C:\Program Files\Micro
      +                          chip\xc8\v2.40\pic\include\lcd.h: 99:  int i;;C:\Program Files\Microchip\xc8\v2.40\pic\i
      +                          nclude\lcd.h: 100:  for(i=0;a[i]!='\0';i++)
   567     0688  01F5               	clrf	Lcd_Write_String@i
   568     0689  01F6               	clrf	Lcd_Write_String@i+1
   569     068A  2E9E               	goto	l863
   570     068B                     l859:
   571                           
   572                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 101:     Lcd_Write_Char(a[i]);
   573     068B  0875               	movf	Lcd_Write_String@i,w
   574     068C  0777               	addwf	Lcd_Write_String@a,w
   575     068D  0084               	movwf	4
   576     068E  120A  118A  2003  120A  118A  	fcall	stringdir
   577     0693  120A  118A  26AC  120A  118A  	fcall	_Lcd_Write_Char
   578     0698                     l861:
   579     0698  3001               	movlw	1
   580     0699  07F5               	addwf	Lcd_Write_String@i,f
   581     069A  1803               	skipnc
   582     069B  0AF6               	incf	Lcd_Write_String@i+1,f
   583     069C  3000               	movlw	0
   584     069D  07F6               	addwf	Lcd_Write_String@i+1,f
   585     069E                     l863:
   586     069E  0875               	movf	Lcd_Write_String@i,w
   587     069F  0777               	addwf	Lcd_Write_String@a,w
   588     06A0  0084               	movwf	4
   589     06A1  120A  118A  2003  120A  118A  	fcall	stringdir
   590     06A6  3A00               	xorlw	0
   591     06A7  1D03               	skipz
   592     06A8  2EAA               	goto	u221
   593     06A9  2EAB               	goto	u220
   594     06AA                     u221:
   595     06AA  2E8B               	goto	l859
   596     06AB                     u220:
   597     06AB                     l53:
   598     06AB  0008               	return
   599     06AC                     __end_of_Lcd_Write_String:
   600                           
   601                           	psect	text2
   602     06AC                     __ptext2:	
   603 ;; *************** function _Lcd_Write_Char *****************
   604 ;; Defined at:
   605 ;;		line 81 in file "C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h"
   606 ;; Parameters:    Size  Location     Type
   607 ;;  a               1    wreg     unsigned char 
   608 ;; Auto vars:     Size  Location     Type
   609 ;;  a               1    4[COMMON] unsigned char 
   610 ;;  y               1    3[COMMON] unsigned char 
   611 ;;  temp            1    2[COMMON] unsigned char 
   612 ;; Return value:  Size  Location     Type
   613 ;;                  1    wreg      void 
   614 ;; Registers used:
   615 ;;		wreg, status,2, status,0, pclath, cstack
   616 ;; Tracked objects:
   617 ;;		On entry : 0/0
   618 ;;		On exit  : 0/0
   619 ;;		Unchanged: 0/0
   620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   621 ;;      Params:         0       0       0       0       0
   622 ;;      Locals:         3       0       0       0       0
   623 ;;      Temps:          1       0       0       0       0
   624 ;;      Totals:         4       0       0       0       0
   625 ;;Total ram usage:        4 bytes
   626 ;; Hardware stack levels used: 1
   627 ;; Hardware stack levels required when called: 1
   628 ;; This function calls:
   629 ;;		_Lcd_Port
   630 ;; This function is called by:
   631 ;;		_Lcd_Write_String
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635     06AC                     _Lcd_Write_Char:	
   636                           ;psect for function _Lcd_Write_Char
   637                           
   638                           
   639                           ;incstack = 0
   640                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   641                           ;Lcd_Write_Char@a stored from wreg
   642     06AC  00F4               	movwf	Lcd_Write_Char@a
   643     06AD                     l805:
   644                           
   645                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 81: void Lcd_Write_Char(char a)
      +                          ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 82: {;C:\Program Files\Microchi
      +                          p\xc8\v2.40\pic\include\lcd.h: 83:    char temp,y;;C:\Program Files\Microchip\xc8\v2.40\
      +                          pic\include\lcd.h: 84:    temp = a&0x0F;
   646     06AD  0874               	movf	Lcd_Write_Char@a,w
   647     06AE  390F               	andlw	15
   648     06AF  00F2               	movwf	Lcd_Write_Char@temp
   649                           
   650                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 85:    y = a&0xF0;
   651     06B0  0874               	movf	Lcd_Write_Char@a,w
   652     06B1  39F0               	andlw	240
   653     06B2  00F3               	movwf	Lcd_Write_Char@y
   654     06B3                     l807:
   655                           
   656                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 86:    RD2 = 1;
   657     06B3  1283               	bcf	3,5	;RP0=0, select bank0
   658     06B4  1303               	bcf	3,6	;RP1=0, select bank0
   659     06B5  1508               	bsf	8,2	;volatile
   660     06B6                     l809:
   661                           
   662                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 87:    Lcd_Port(y>>4);
   663     06B6  0873               	movf	Lcd_Write_Char@y,w
   664     06B7  00F1               	movwf	??_Lcd_Write_Char
   665     06B8  3004               	movlw	4
   666     06B9                     u175:
   667     06B9  1003               	clrc
   668     06BA  0CF1               	rrf	??_Lcd_Write_Char,f
   669     06BB  3EFF               	addlw	-1
   670     06BC  1D03               	skipz
   671     06BD  2EB9               	goto	u175
   672     06BE  0871               	movf	??_Lcd_Write_Char,w
   673     06BF  120A  118A  2665  120A  118A  	fcall	_Lcd_Port
   674     06C4                     l811:
   675                           
   676                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 88:    RD3 = 1;
   677     06C4  1283               	bcf	3,5	;RP0=0, select bank0
   678     06C5  1303               	bcf	3,6	;RP1=0, select bank0
   679     06C6  1588               	bsf	8,3	;volatile
   680     06C7                     l813:
   681                           
   682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 89:    _delay((unsigned long)((
      +                          40)*(8000000/4000000.0)));
   683     06C7  301A               	movlw	26
   684     06C8  00F1               	movwf	??_Lcd_Write_Char
   685     06C9                     u277:
   686     06C9  0BF1               	decfsz	??_Lcd_Write_Char,f
   687     06CA  2EC9               	goto	u277
   688     06CB  0000               	nop
   689     06CC                     l815:
   690                           
   691                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 90:    RD3 = 0;
   692     06CC  1283               	bcf	3,5	;RP0=0, select bank0
   693     06CD  1303               	bcf	3,6	;RP1=0, select bank0
   694     06CE  1188               	bcf	8,3	;volatile
   695     06CF                     l817:
   696                           
   697                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 91:    Lcd_Port(temp);
   698     06CF  0872               	movf	Lcd_Write_Char@temp,w
   699     06D0  120A  118A  2665  120A  118A  	fcall	_Lcd_Port
   700     06D5                     l819:
   701                           
   702                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 92:    RD3 = 1;
   703     06D5  1283               	bcf	3,5	;RP0=0, select bank0
   704     06D6  1303               	bcf	3,6	;RP1=0, select bank0
   705     06D7  1588               	bsf	8,3	;volatile
   706     06D8                     l821:
   707                           
   708                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 93:    _delay((unsigned long)((
      +                          40)*(8000000/4000000.0)));
   709     06D8  301A               	movlw	26
   710     06D9  00F1               	movwf	??_Lcd_Write_Char
   711     06DA                     u287:
   712     06DA  0BF1               	decfsz	??_Lcd_Write_Char,f
   713     06DB  2EDA               	goto	u287
   714     06DC  0000               	nop
   715     06DD                     l823:
   716                           
   717                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 94:    RD3 = 0;
   718     06DD  1283               	bcf	3,5	;RP0=0, select bank0
   719     06DE  1303               	bcf	3,6	;RP1=0, select bank0
   720     06DF  1188               	bcf	8,3	;volatile
   721     06E0                     l47:
   722     06E0  0008               	return
   723     06E1                     __end_of_Lcd_Write_Char:
   724                           
   725                           	psect	text3
   726     063E                     __ptext3:	
   727 ;; *************** function _Lcd_Shift_Right *****************
   728 ;; Defined at:
   729 ;;		line 104 in file "C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h"
   730 ;; Parameters:    Size  Location     Type
   731 ;;		None
   732 ;; Auto vars:     Size  Location     Type
   733 ;;		None
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      void 
   736 ;; Registers used:
   737 ;;		wreg, status,2, status,0, pclath, cstack
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   743 ;;      Params:         0       0       0       0       0
   744 ;;      Locals:         0       0       0       0       0
   745 ;;      Temps:          0       0       0       0       0
   746 ;;      Totals:         0       0       0       0       0
   747 ;;Total ram usage:        0 bytes
   748 ;; Hardware stack levels used: 1
   749 ;; Hardware stack levels required when called: 2
   750 ;; This function calls:
   751 ;;		_Lcd_Cmd
   752 ;; This function is called by:
   753 ;;		_main
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757     063E                     _Lcd_Shift_Right:	
   758                           ;psect for function _Lcd_Shift_Right
   759                           
   760     063E                     l865:	
   761                           ;incstack = 0
   762                           ; Regs used in _Lcd_Shift_Right: [wreg+status,2+status,0+pclath+cstack]
   763                           
   764                           
   765                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 106:  Lcd_Cmd(0x01);
   766     063E  3001               	movlw	1
   767     063F  120A  118A  264B  120A  118A  	fcall	_Lcd_Cmd
   768                           
   769                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 107:  Lcd_Cmd(0x0C);
   770     0644  300C               	movlw	12
   771     0645  120A  118A  264B  120A  118A  	fcall	_Lcd_Cmd
   772     064A                     l56:
   773     064A  0008               	return
   774     064B                     __end_of_Lcd_Shift_Right:
   775                           
   776                           	psect	text4
   777     0631                     __ptext4:	
   778 ;; *************** function _Lcd_Shift_Left *****************
   779 ;; Defined at:
   780 ;;		line 110 in file "C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h"
   781 ;; Parameters:    Size  Location     Type
   782 ;;		None
   783 ;; Auto vars:     Size  Location     Type
   784 ;;		None
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      void 
   787 ;; Registers used:
   788 ;;		wreg, status,2, status,0, pclath, cstack
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   794 ;;      Params:         0       0       0       0       0
   795 ;;      Locals:         0       0       0       0       0
   796 ;;      Temps:          0       0       0       0       0
   797 ;;      Totals:         0       0       0       0       0
   798 ;;Total ram usage:        0 bytes
   799 ;; Hardware stack levels used: 1
   800 ;; Hardware stack levels required when called: 2
   801 ;; This function calls:
   802 ;;		_Lcd_Cmd
   803 ;; This function is called by:
   804 ;;		_main
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808     0631                     _Lcd_Shift_Left:	
   809                           ;psect for function _Lcd_Shift_Left
   810                           
   811     0631                     l867:	
   812                           ;incstack = 0
   813                           ; Regs used in _Lcd_Shift_Left: [wreg+status,2+status,0+pclath+cstack]
   814                           
   815                           
   816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 112:  Lcd_Cmd(0x01);
   817     0631  3001               	movlw	1
   818     0632  120A  118A  264B  120A  118A  	fcall	_Lcd_Cmd
   819                           
   820                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 113:  Lcd_Cmd(0x08);
   821     0637  3008               	movlw	8
   822     0638  120A  118A  264B  120A  118A  	fcall	_Lcd_Cmd
   823     063D                     l59:
   824     063D  0008               	return
   825     063E                     __end_of_Lcd_Shift_Left:
   826                           
   827                           	psect	text5
   828     06E1                     __ptext5:	
   829 ;; *************** function _Lcd_Set_Cursor *****************
   830 ;; Defined at:
   831 ;;		line 41 in file "C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h"
   832 ;; Parameters:    Size  Location     Type
   833 ;;  a               1    wreg     unsigned char 
   834 ;;  b               1    4[COMMON] unsigned char 
   835 ;; Auto vars:     Size  Location     Type
   836 ;;  a               1    6[COMMON] unsigned char 
   837 ;;  temp            1    9[COMMON] unsigned char 
   838 ;;  y               1    8[COMMON] unsigned char 
   839 ;;  z               1    7[COMMON] unsigned char 
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		wreg, status,2, status,0, pclath, cstack
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   849 ;;      Params:         1       0       0       0       0
   850 ;;      Locals:         4       0       0       0       0
   851 ;;      Temps:          1       0       0       0       0
   852 ;;      Totals:         6       0       0       0       0
   853 ;;Total ram usage:        6 bytes
   854 ;; Hardware stack levels used: 1
   855 ;; Hardware stack levels required when called: 2
   856 ;; This function calls:
   857 ;;		_Lcd_Cmd
   858 ;; This function is called by:
   859 ;;		_main
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863     06E1                     _Lcd_Set_Cursor:	
   864                           ;psect for function _Lcd_Set_Cursor
   865                           
   866                           
   867                           ;incstack = 0
   868                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   869                           ;Lcd_Set_Cursor@a stored from wreg
   870     06E1  00F6               	movwf	Lcd_Set_Cursor@a
   871     06E2                     l827:
   872                           
   873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 41: void Lcd_Set_Cursor(char a,
      +                           char b);C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 42: {;C:\Program Files\
      +                          Microchip\xc8\v2.40\pic\include\lcd.h: 43:  char temp,z,y;;C:\Program Files\Microchip\xc
      +                          8\v2.40\pic\include\lcd.h: 44:  if(a == 1)
   874     06E2  0376               	decf	Lcd_Set_Cursor@a,w
   875     06E3  1D03               	btfss	3,2
   876     06E4  2EE6               	goto	u181
   877     06E5  2EE7               	goto	u180
   878     06E6                     u181:
   879     06E6  2F04               	goto	l837
   880     06E7                     u180:
   881     06E7                     l829:
   882                           
   883                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 45:  {;C:\Program Files\Microch
      +                          ip\xc8\v2.40\pic\include\lcd.h: 46:    temp = 0x80 + b - 1;
   884     06E7  0874               	movf	Lcd_Set_Cursor@b,w
   885     06E8  3E7F               	addlw	127
   886     06E9  00F9               	movwf	Lcd_Set_Cursor@temp
   887                           
   888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 47:   z = temp>>4;
   889     06EA  0879               	movf	Lcd_Set_Cursor@temp,w
   890     06EB  00F5               	movwf	??_Lcd_Set_Cursor
   891     06EC  3004               	movlw	4
   892     06ED                     u195:
   893     06ED  1003               	clrc
   894     06EE  0CF5               	rrf	??_Lcd_Set_Cursor,f
   895     06EF  3EFF               	addlw	-1
   896     06F0  1D03               	skipz
   897     06F1  2EED               	goto	u195
   898     06F2  0875               	movf	??_Lcd_Set_Cursor,w
   899     06F3  00F7               	movwf	Lcd_Set_Cursor@z
   900     06F4                     l831:
   901                           
   902                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 48:   y = temp & 0x0F;
   903     06F4  0879               	movf	Lcd_Set_Cursor@temp,w
   904     06F5  390F               	andlw	15
   905     06F6  00F8               	movwf	Lcd_Set_Cursor@y
   906     06F7                     l833:
   907                           
   908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 49:   Lcd_Cmd(z);
   909     06F7  0877               	movf	Lcd_Set_Cursor@z,w
   910     06F8  120A  118A  264B  120A  118A  	fcall	_Lcd_Cmd
   911     06FD                     l835:
   912                           
   913                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 50:   Lcd_Cmd(y);
   914     06FD  0878               	movf	Lcd_Set_Cursor@y,w
   915     06FE  120A  118A  264B  120A  118A  	fcall	_Lcd_Cmd
   916                           
   917                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 51:  }
   918     0703  2F26               	goto	l41
   919     0704                     l837:
   920     0704  3002               	movlw	2
   921     0705  0676               	xorwf	Lcd_Set_Cursor@a,w
   922     0706  1D03               	btfss	3,2
   923     0707  2F09               	goto	u201
   924     0708  2F0A               	goto	u200
   925     0709                     u201:
   926     0709  2F26               	goto	l41
   927     070A                     u200:
   928     070A                     l839:
   929                           
   930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 53:  {;C:\Program Files\Microch
      +                          ip\xc8\v2.40\pic\include\lcd.h: 54:   temp = 0xC0 + b - 1;
   931     070A  0874               	movf	Lcd_Set_Cursor@b,w
   932     070B  3EBF               	addlw	191
   933     070C  00F9               	movwf	Lcd_Set_Cursor@temp
   934                           
   935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 55:   z = temp>>4;
   936     070D  0879               	movf	Lcd_Set_Cursor@temp,w
   937     070E  00F5               	movwf	??_Lcd_Set_Cursor
   938     070F  3004               	movlw	4
   939     0710                     u215:
   940     0710  1003               	clrc
   941     0711  0CF5               	rrf	??_Lcd_Set_Cursor,f
   942     0712  3EFF               	addlw	-1
   943     0713  1D03               	skipz
   944     0714  2F10               	goto	u215
   945     0715  0875               	movf	??_Lcd_Set_Cursor,w
   946     0716  00F7               	movwf	Lcd_Set_Cursor@z
   947     0717                     l841:
   948                           
   949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 56:   y = temp & 0x0F;
   950     0717  0879               	movf	Lcd_Set_Cursor@temp,w
   951     0718  390F               	andlw	15
   952     0719  00F8               	movwf	Lcd_Set_Cursor@y
   953     071A                     l843:
   954                           
   955                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 57:   Lcd_Cmd(z);
   956     071A  0877               	movf	Lcd_Set_Cursor@z,w
   957     071B  120A  118A  264B  120A  118A  	fcall	_Lcd_Cmd
   958     0720                     l845:
   959                           
   960                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 58:   Lcd_Cmd(y);
   961     0720  0878               	movf	Lcd_Set_Cursor@y,w
   962     0721  120A  118A  264B  120A  118A  	fcall	_Lcd_Cmd
   963     0726                     l41:
   964     0726  0008               	return
   965     0727                     __end_of_Lcd_Set_Cursor:
   966                           
   967                           	psect	text6
   968     0727                     __ptext6:	
   969 ;; *************** function _Lcd_Init *****************
   970 ;; Defined at:
   971 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h"
   972 ;; Parameters:    Size  Location     Type
   973 ;;		None
   974 ;; Auto vars:     Size  Location     Type
   975 ;;		None
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		wreg, status,2, status,0, pclath, cstack
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   985 ;;      Params:         0       0       0       0       0
   986 ;;      Locals:         0       0       0       0       0
   987 ;;      Temps:          2       0       0       0       0
   988 ;;      Totals:         2       0       0       0       0
   989 ;;Total ram usage:        2 bytes
   990 ;; Hardware stack levels used: 1
   991 ;; Hardware stack levels required when called: 2
   992 ;; This function calls:
   993 ;;		_Lcd_Cmd
   994 ;;		_Lcd_Port
   995 ;; This function is called by:
   996 ;;		_main
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000     0727                     _Lcd_Init:	
  1001                           ;psect for function _Lcd_Init
  1002                           
  1003     0727                     l847:	
  1004                           ;incstack = 0
  1005                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1006                           
  1007                           
  1008                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 64:   Lcd_Port(0x00);
  1009     0727  3000               	movlw	0
  1010     0728  120A  118A  2665  120A  118A  	fcall	_Lcd_Port
  1011     072D                     l849:
  1012                           
  1013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 65:    _delay((unsigned long)((
      +                          20)*(8000000/4000.0)));
  1014     072D  3034               	movlw	52
  1015     072E  00F5               	movwf	??_Lcd_Init+1
  1016     072F  30F1               	movlw	241
  1017     0730  00F4               	movwf	??_Lcd_Init
  1018     0731                     u297:
  1019     0731  0BF4               	decfsz	??_Lcd_Init,f
  1020     0732  2F31               	goto	u297
  1021     0733  0BF5               	decfsz	??_Lcd_Init+1,f
  1022     0734  2F31               	goto	u297
  1023     0735  2F36               	nop2
  1024     0736                     l851:
  1025                           
  1026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 66:   Lcd_Cmd(0x03);
  1027     0736  3003               	movlw	3
  1028     0737  120A  118A  264B  120A  118A  	fcall	_Lcd_Cmd
  1029                           
  1030                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 67:  _delay((unsigned long)((5)
      +                          *(8000000/4000.0)));
  1031     073C  300D               	movlw	13
  1032     073D  00F5               	movwf	??_Lcd_Init+1
  1033     073E  30FB               	movlw	251
  1034     073F  00F4               	movwf	??_Lcd_Init
  1035     0740                     u307:
  1036     0740  0BF4               	decfsz	??_Lcd_Init,f
  1037     0741  2F40               	goto	u307
  1038     0742  0BF5               	decfsz	??_Lcd_Init+1,f
  1039     0743  2F40               	goto	u307
  1040     0744  2F45               	nop2
  1041     0745                     l853:
  1042                           
  1043                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 68:   Lcd_Cmd(0x03);
  1044     0745  3003               	movlw	3
  1045     0746  120A  118A  264B  120A  118A  	fcall	_Lcd_Cmd
  1046     074B                     l855:
  1047                           
  1048                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 69:  _delay((unsigned long)((11
      +                          )*(8000000/4000.0)));
  1049     074B  301D               	movlw	29
  1050     074C  00F5               	movwf	??_Lcd_Init+1
  1051     074D  3091               	movlw	145
  1052     074E  00F4               	movwf	??_Lcd_Init
  1053     074F                     u317:
  1054     074F  0BF4               	decfsz	??_Lcd_Init,f
  1055     0750  2F4F               	goto	u317
  1056     0751  0BF5               	decfsz	??_Lcd_Init+1,f
  1057     0752  2F4F               	goto	u317
  1058                           
  1059                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 70:   Lcd_Cmd(0x03);
  1060     0753  3003               	movlw	3
  1061     0754  120A  118A  264B  120A  118A  	fcall	_Lcd_Cmd
  1062                           
  1063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 72:   Lcd_Cmd(0x02);
  1064     0759  3002               	movlw	2
  1065     075A  120A  118A  264B  120A  118A  	fcall	_Lcd_Cmd
  1066                           
  1067                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 73:   Lcd_Cmd(0x02);
  1068     075F  3002               	movlw	2
  1069     0760  120A  118A  264B  120A  118A  	fcall	_Lcd_Cmd
  1070                           
  1071                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 74:   Lcd_Cmd(0x08);
  1072     0765  3008               	movlw	8
  1073     0766  120A  118A  264B  120A  118A  	fcall	_Lcd_Cmd
  1074                           
  1075                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 75:   Lcd_Cmd(0x00);
  1076     076B  3000               	movlw	0
  1077     076C  120A  118A  264B  120A  118A  	fcall	_Lcd_Cmd
  1078                           
  1079                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 76:   Lcd_Cmd(0x0C);
  1080     0771  300C               	movlw	12
  1081     0772  120A  118A  264B  120A  118A  	fcall	_Lcd_Cmd
  1082                           
  1083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 77:   Lcd_Cmd(0x00);
  1084     0777  3000               	movlw	0
  1085     0778  120A  118A  264B  120A  118A  	fcall	_Lcd_Cmd
  1086                           
  1087                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 78:   Lcd_Cmd(0x06);
  1088     077D  3006               	movlw	6
  1089     077E  120A  118A  264B  120A  118A  	fcall	_Lcd_Cmd
  1090     0783                     l44:
  1091     0783  0008               	return
  1092     0784                     __end_of_Lcd_Init:
  1093                           
  1094                           	psect	text7
  1095     0624                     __ptext7:	
  1096 ;; *************** function _Lcd_Clear *****************
  1097 ;; Defined at:
  1098 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;		None
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;		None
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  2   34[None  ] int 
  1105 ;; Registers used:
  1106 ;;		wreg, status,2, status,0, pclath, cstack
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1112 ;;      Params:         0       0       0       0       0
  1113 ;;      Locals:         0       0       0       0       0
  1114 ;;      Temps:          0       0       0       0       0
  1115 ;;      Totals:         0       0       0       0       0
  1116 ;;Total ram usage:        0 bytes
  1117 ;; Hardware stack levels used: 1
  1118 ;; Hardware stack levels required when called: 2
  1119 ;; This function calls:
  1120 ;;		_Lcd_Cmd
  1121 ;; This function is called by:
  1122 ;;		_main
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126     0624                     _Lcd_Clear:	
  1127                           ;psect for function _Lcd_Clear
  1128                           
  1129     0624                     l825:	
  1130                           ;incstack = 0
  1131                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1132                           
  1133                           
  1134                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 37:  Lcd_Cmd(0);
  1135     0624  3000               	movlw	0
  1136     0625  120A  118A  264B  120A  118A  	fcall	_Lcd_Cmd
  1137                           
  1138                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 38:  Lcd_Cmd(1);
  1139     062A  3001               	movlw	1
  1140     062B  120A  118A  264B  120A  118A  	fcall	_Lcd_Cmd
  1141     0630                     l35:
  1142     0630  0008               	return
  1143     0631                     __end_of_Lcd_Clear:
  1144                           
  1145                           	psect	text8
  1146     064B                     __ptext8:	
  1147 ;; *************** function _Lcd_Cmd *****************
  1148 ;; Defined at:
  1149 ;;		line 26 in file "C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;  a               1    wreg     unsigned char 
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;  a               1    3[COMMON] unsigned char 
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  1    wreg      void 
  1156 ;; Registers used:
  1157 ;;		wreg, status,2, status,0, pclath, cstack
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1163 ;;      Params:         0       0       0       0       0
  1164 ;;      Locals:         1       0       0       0       0
  1165 ;;      Temps:          2       0       0       0       0
  1166 ;;      Totals:         3       0       0       0       0
  1167 ;;Total ram usage:        3 bytes
  1168 ;; Hardware stack levels used: 1
  1169 ;; Hardware stack levels required when called: 1
  1170 ;; This function calls:
  1171 ;;		_Lcd_Port
  1172 ;; This function is called by:
  1173 ;;		_Lcd_Clear
  1174 ;;		_Lcd_Set_Cursor
  1175 ;;		_Lcd_Init
  1176 ;;		_Lcd_Shift_Right
  1177 ;;		_Lcd_Shift_Left
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181     064B                     _Lcd_Cmd:	
  1182                           ;psect for function _Lcd_Cmd
  1183                           
  1184                           
  1185                           ;incstack = 0
  1186                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1187                           ;Lcd_Cmd@a stored from wreg
  1188     064B  00F3               	movwf	Lcd_Cmd@a
  1189     064C                     l795:
  1190                           
  1191                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 26: void Lcd_Cmd(char a);C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\include\lcd.h: 27: {;C:\Program Files\Microchip\xc8\v
      +                          2.40\pic\include\lcd.h: 28:  RD2 = 0;
  1192     064C  1283               	bcf	3,5	;RP0=0, select bank0
  1193     064D  1303               	bcf	3,6	;RP1=0, select bank0
  1194     064E  1108               	bcf	8,2	;volatile
  1195     064F                     l797:
  1196                           
  1197                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 29:  Lcd_Port(a);
  1198     064F  0873               	movf	Lcd_Cmd@a,w
  1199     0650  120A  118A  2665  120A  118A  	fcall	_Lcd_Port
  1200     0655                     l799:
  1201                           
  1202                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 30:  RD3 = 1;
  1203     0655  1283               	bcf	3,5	;RP0=0, select bank0
  1204     0656  1303               	bcf	3,6	;RP1=0, select bank0
  1205     0657  1588               	bsf	8,3	;volatile
  1206     0658                     l801:
  1207                           
  1208                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 31:         _delay((unsigned lo
      +                          ng)((4)*(8000000/4000.0)));
  1209     0658  300B               	movlw	11
  1210     0659  00F2               	movwf	??_Lcd_Cmd+1
  1211     065A  3062               	movlw	98
  1212     065B  00F1               	movwf	??_Lcd_Cmd
  1213     065C                     u327:
  1214     065C  0BF1               	decfsz	??_Lcd_Cmd,f
  1215     065D  2E5C               	goto	u327
  1216     065E  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1217     065F  2E5C               	goto	u327
  1218     0660  0000               	nop
  1219     0661                     l803:
  1220                           
  1221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 32:         RD3 = 0;
  1222     0661  1283               	bcf	3,5	;RP0=0, select bank0
  1223     0662  1303               	bcf	3,6	;RP1=0, select bank0
  1224     0663  1188               	bcf	8,3	;volatile
  1225     0664                     l32:
  1226     0664  0008               	return
  1227     0665                     __end_of_Lcd_Cmd:
  1228                           
  1229                           	psect	text9
  1230     0665                     __ptext9:	
  1231 ;; *************** function _Lcd_Port *****************
  1232 ;; Defined at:
  1233 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;  a               1    wreg     unsigned char 
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;  a               1    0[COMMON] unsigned char 
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  1    wreg      void 
  1240 ;; Registers used:
  1241 ;;		wreg
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1247 ;;      Params:         0       0       0       0       0
  1248 ;;      Locals:         1       0       0       0       0
  1249 ;;      Temps:          0       0       0       0       0
  1250 ;;      Totals:         1       0       0       0       0
  1251 ;;Total ram usage:        1 bytes
  1252 ;; Hardware stack levels used: 1
  1253 ;; This function calls:
  1254 ;;		Nothing
  1255 ;; This function is called by:
  1256 ;;		_Lcd_Cmd
  1257 ;;		_Lcd_Init
  1258 ;;		_Lcd_Write_Char
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262     0665                     _Lcd_Port:	
  1263                           ;psect for function _Lcd_Port
  1264                           
  1265                           
  1266                           ;incstack = 0
  1267                           ; Regs used in _Lcd_Port: [wreg]
  1268                           ;Lcd_Port@a stored from wreg
  1269     0665  00F0               	movwf	Lcd_Port@a
  1270     0666                     l785:
  1271                           
  1272                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 4: void Lcd_Port(char a);C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\include\lcd.h: 5: {;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\include\lcd.h: 6:  if(a & 1)
  1273     0666  1C70               	btfss	Lcd_Port@a,0
  1274     0667  2E69               	goto	u131
  1275     0668  2E6A               	goto	u130
  1276     0669                     u131:
  1277     0669  2E6E               	goto	l21
  1278     066A                     u130:
  1279     066A                     l787:
  1280                           
  1281                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 7:   RD4 = 1;
  1282     066A  1283               	bcf	3,5	;RP0=0, select bank0
  1283     066B  1303               	bcf	3,6	;RP1=0, select bank0
  1284     066C  1608               	bsf	8,4	;volatile
  1285     066D  2E71               	goto	l22
  1286     066E                     l21:	
  1287                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 8:  else
  1288                           
  1289                           
  1290                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 9:   RD4 = 0;
  1291     066E  1283               	bcf	3,5	;RP0=0, select bank0
  1292     066F  1303               	bcf	3,6	;RP1=0, select bank0
  1293     0670  1208               	bcf	8,4	;volatile
  1294     0671                     l22:
  1295                           
  1296                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 11:  if(a & 2)
  1297     0671  1CF0               	btfss	Lcd_Port@a,1
  1298     0672  2E74               	goto	u141
  1299     0673  2E75               	goto	u140
  1300     0674                     u141:
  1301     0674  2E77               	goto	l23
  1302     0675                     u140:
  1303     0675                     l789:
  1304                           
  1305                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 12:   RD5 = 1;
  1306     0675  1688               	bsf	8,5	;volatile
  1307     0676  2E78               	goto	l24
  1308     0677                     l23:	
  1309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 13:  else
  1310                           
  1311                           
  1312                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 14:   RD5 = 0;
  1313     0677  1288               	bcf	8,5	;volatile
  1314     0678                     l24:
  1315                           
  1316                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 16:  if(a & 4)
  1317     0678  1D70               	btfss	Lcd_Port@a,2
  1318     0679  2E7B               	goto	u151
  1319     067A  2E7C               	goto	u150
  1320     067B                     u151:
  1321     067B  2E7E               	goto	l25
  1322     067C                     u150:
  1323     067C                     l791:
  1324                           
  1325                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 17:   RD6 = 1;
  1326     067C  1708               	bsf	8,6	;volatile
  1327     067D  2E7F               	goto	l26
  1328     067E                     l25:	
  1329                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 18:  else
  1330                           
  1331                           
  1332                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 19:   RD6 = 0;
  1333     067E  1308               	bcf	8,6	;volatile
  1334     067F                     l26:
  1335                           
  1336                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 21:  if(a & 8)
  1337     067F  1DF0               	btfss	Lcd_Port@a,3
  1338     0680  2E82               	goto	u161
  1339     0681  2E83               	goto	u160
  1340     0682                     u161:
  1341     0682  2E85               	goto	l27
  1342     0683                     u160:
  1343     0683                     l793:
  1344                           
  1345                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 22:   RD7 = 1;
  1346     0683  1788               	bsf	8,7	;volatile
  1347     0684  2E86               	goto	l29
  1348     0685                     l27:	
  1349                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 23:  else
  1350                           
  1351                           
  1352                           ;C:\Program Files\Microchip\xc8\v2.40\pic\include\lcd.h: 24:   RD7 = 0;
  1353     0685  1388               	bcf	8,7	;volatile
  1354     0686                     l29:
  1355     0686  0008               	return
  1356     0687                     __end_of_Lcd_Port:
  1357     007E                     btemp	set	126	;btemp
  1358     007E                     wtemp0	set	126
  1359                           
  1360                           	psect	idloc
  1361                           
  1362                           ;Config register IDLOC0 @ 0x2000
  1363                           ;	unspecified, using default values
  1364     2000                     	org	8192
  1365     2000  3FFF               	dw	16383
  1366                           
  1367                           ;Config register IDLOC1 @ 0x2001
  1368                           ;	unspecified, using default values
  1369     2001                     	org	8193
  1370     2001  3FFF               	dw	16383
  1371                           
  1372                           ;Config register IDLOC2 @ 0x2002
  1373                           ;	unspecified, using default values
  1374     2002                     	org	8194
  1375     2002  3FFF               	dw	16383
  1376                           
  1377                           ;Config register IDLOC3 @ 0x2003
  1378                           ;	unspecified, using default values
  1379     2003                     	org	8195
  1380     2003  3FFF               	dw	16383
  1381                           
  1382                           	psect	config
  1383                           
  1384                           ;Config register CONFIG @ 0x2007
  1385                           ;	Oscillator Selection bits
  1386                           ;	FOSC = HS, HS oscillator
  1387                           ;	Watchdog Timer Enable bit
  1388                           ;	WDTE = OFF, WDT disabled
  1389                           ;	Power-up Timer Enable bit
  1390                           ;	PWRTE = OFF, PWRT disabled
  1391                           ;	Brown-out Reset Enable bit
  1392                           ;	BOREN = ON, BOR enabled
  1393                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1394                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1395                           ;	Data EEPROM Memory Code Protection bit
  1396                           ;	CPD = OFF, Data EEPROM code protection off
  1397                           ;	Flash Program Memory Write Enable bits
  1398                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1399                           ;	In-Circuit Debugger Mode bit
  1400                           ;	DEBUG = 0x1, unprogrammed default
  1401                           ;	Flash Program Memory Code Protection bit
  1402                           ;	CP = OFF, Code protection off
  1403     2007                     	org	8199
  1404     2007  3F7A               	dw	16250

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Shift_Right->_Lcd_Cmd
    _Lcd_Shift_Left->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    1377
                                             10 COMMON     3     3      0
                                              0 BANK0      4     4      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Shift_Left
                    _Lcd_Shift_Right
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     301
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Right                                      0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Left                                       0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     456
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Shift_Left
     _Lcd_Cmd
   _Lcd_Shift_Right
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Nov 24 12:35:12 2022

                       pc 0002                        l21 066E                        l22 0671  
                      l23 0677                        l24 0678                        l32 0664  
                      l25 067E                        l41 0726                        l26 067F  
                      l27 0685                        l35 0630                        l44 0783  
                      l29 0686                        l53 06AB                        l47 06E0  
                      l56 064A                        l59 063D                        fsr 0004  
                     l801 0658                       l803 0661                       l811 06C4  
                     l821 06D8                       l813 06C7                       l805 06AD  
                     l901 07DE                       l831 06F4                       l823 06DD  
                     l815 06CC                       l807 06B3                       l903 07E6  
                     l825 0624                       l841 0717                       l833 06F7  
                     l817 06CF                       l809 06B6                       l905 07F3  
                     l851 0736                       l843 071A                       l835 06FD  
                     l827 06E2                       l819 06D5                       l853 0745  
                     l845 0720                       l829 06E7                       l837 0704  
                     l861 0698                       l791 067C                       l855 074B  
                     l847 0727                       l839 070A                       l863 069E  
                     l871 078A                       l793 0683                       l785 0666  
                     l849 072D                       l865 063E                       l857 0688  
                     l873 078F                       l787 066A                       l795 064C  
                     l867 0631                       l859 068B                       l891 07C8  
                     l883 07A1                       l875 0797                       l789 0675  
                     l797 064F                       l885 07AE                       l877 079D  
                     l869 0784                       l799 0655                       l887 07B3  
                     l897 07CC                       l889 07BB                       l899 07D9  
                     _RD2 0042                       _RD3 0043                       _RD4 0044  
                     _RD5 0045                       _RD6 0046                       _RD7 0047  
                     u200 070A                       u201 0709                       u130 066A  
                     u131 0669                       u140 0675                       u220 06AB  
                     u141 0674                       u221 06AA                       u150 067C  
                     u230 07C8                       u151 067B                       u215 0710  
                     u231 07C7                       u160 0683                       u240 07F3  
                     u161 0682                       u241 07F2                       u307 0740  
                     u235 07C4                       u180 06E7                       u317 074F  
                     u181 06E6                       u245 07EF                       u327 065C  
                     u175 06B9                       u257 07A7                       u195 06ED  
                     u267 07D2                       u277 06C9                       u287 06DA  
                     u297 0731                       fsr0 0004                      STR_1 0009  
       ?_Lcd_Write_String 0070                      _main 0784                      btemp 007E  
                    start 0000        ??_Lcd_Write_String 0075           __end_of_Lcd_Cmd 0665  
                   ?_main 0070                     _PORTD 0008                     _TRISD 0088  
                   main@i 0020                     pclath 000A                     status 0003  
                   wtemp0 007E          __end_of_Lcd_Init 0784          __end_of_Lcd_Port 0687  
         __initialization 07FC              __end_of_main 07FC                    ??_main 007A  
               ??_Lcd_Cmd 0071           Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074  
         Lcd_Set_Cursor@y 0078           Lcd_Set_Cursor@z 0077   __end_of__initialization 07FC  
       __end_of_Lcd_Clear 0631            __pcstackCOMMON 0070            _Lcd_Set_Cursor 06E1  
          _Lcd_Shift_Left 0631                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
              __pmaintext 0784    __end_of_Lcd_Set_Cursor 0727    __end_of_Lcd_Shift_Left 063E  
       ??_Lcd_Shift_Right 0074                ??_Lcd_Init 0074                ??_Lcd_Port 0070  
              __stringtab 0003            _Lcd_Write_Char 06AC                   _Lcd_Cmd 064B  
         ?_Lcd_Set_Cursor 0074                   __ptext1 0687                   __ptext2 06AC  
                 __ptext3 063E                   __ptext4 0631                   __ptext5 06E1  
                 __ptext6 0727                   __ptext7 0624                   __ptext8 064B  
                 __ptext9 0665           ?_Lcd_Shift_Left 0070    __end_of_Lcd_Write_Char 06E1  
    end_of_initialization 07FC                 Lcd_Port@a 0070           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 0077         Lcd_Write_String@i 0075                 _Lcd_Clear 0624  
        _Lcd_Write_String 0687       start_initialization 07FC                ?_Lcd_Clear 0070  
         _Lcd_Shift_Right 063E           Lcd_Write_Char@a 0074           Lcd_Write_Char@y 0073  
               ___latbits 0002             __pcstackBANK0 0020                  ?_Lcd_Cmd 0070  
        ??_Lcd_Set_Cursor 0075          ??_Lcd_Shift_Left 0074                 __pstrings 0003  
 __end_of_Lcd_Shift_Right 064B                  Lcd_Cmd@a 0073               ??_Lcd_Clear 0074  
             __stringbase 0008          ??_Lcd_Write_Char 0071                  _Lcd_Init 0727  
                _Lcd_Port 0665  __end_of_Lcd_Write_String 06AC        __end_of__stringtab 0009  
        ?_Lcd_Shift_Right 0070                  main@i_71 0022        Lcd_Write_Char@temp 0072  
               stringcode 0003        Lcd_Set_Cursor@temp 0079                  stringdir 0003  
                stringtab 0003  
